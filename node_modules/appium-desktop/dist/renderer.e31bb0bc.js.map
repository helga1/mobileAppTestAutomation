{"version":3,"sources":["components/Spinner/Spinner.js","../configs/app.config.js","util.js","containers/App.js","components/Inspector/shared.js","actions/shared.js","lib/client-frameworks/framework.js","lib/client-frameworks/js-wd.js","lib/client-frameworks/js-wdio.js","lib/client-frameworks/java.js","lib/client-frameworks/python.js","lib/client-frameworks/ruby.js","lib/client-frameworks/robot.js","lib/client-frameworks/index.js","actions/Inspector.js","components/Session/ServerTabTestobject.js","components/Session/ServerTabHeadspin.js","components/Session/ServerTabBrowserstack.js","components/Session/ServerTabBitbar.js","components/Session/ServerTabKobiton.js","components/Session/ServerTabPerfecto.js","components/Session/ServerTabPcloudy.js","components/Session/ServerTabSauce.js","components/Session/ServerTabTestingbot.js","components/Session/CloudProviders.js","actions/Session.js","../shared/settings.js","../configs/i18next.config.renderer.js","actions/ServerMonitor.js","actions/StartServer.js","reducers/StartServer.js","components/StartServer/shared.js","components/StartServer/StartButton.js","components/StartServer/SimpleTab.js","components/StartServer/SavePresetButton.js","components/StartServer/AdvancedTab.js","components/StartServer/DeletePresetButton.js","components/StartServer/PresetsTab.js","components/StartServer/StartServer.js","containers/StartServerPage.js","reducers/ServerMonitor.js","components/ServerMonitor/ServerMonitor.js","containers/ServerMonitorPage.js","components/Session/FormattedCaps.js","components/Session/CapabilityControl.js","components/Session/NewSessionForm.js","components/Session/SavedSessions.js","components/Session/AttachToSession.js","components/Session/ServerTabAutomatic.js","components/Session/ServerTabCustom.js","components/Session/AdvancedServerParams.js","components/Session/CloudProviderSelector.js","components/Session/Session.js","containers/SessionPage.js","components/Inspector/HighlighterRect.js","components/Inspector/HighlighterRects.js","components/Inspector/Screenshot.js","components/Inspector/SelectedElement.js","components/Inspector/LocatedElements.js","components/Inspector/ElementLocator.js","components/Inspector/LocatorTestModal.js","components/Inspector/Source.js","components/Inspector/RecordedActions.js","components/Inspector/Actions.js","components/Inspector/Inspector.js","containers/InspectorPage.js","actions/Config.js","components/Config/Config.js","containers/ConfigPage.js","routes.js","components/WrongFolder/WrongFolder.js","containers/Root.js","actions/Updater.js","actions/index.js","reducers/Session.js","reducers/Inspector.js","reducers/Updater.js","reducers/Config.js","reducers/index.js","store/configureStore.development.js","store/configureStore.production.js","store/configureStore.js","index.js"],"names":["Spinner","styles","container","loader","config","platform","process","languages","namespace","getOptimalXPath","doc","domNode","uniqueAttributes","tagName","nodeType","attrName","attrValue","getAttribute","xpath","othersWithAttr","XPath","select","ign","length","indexOf","parentNode","childNodes","Array","prototype","slice","call","filter","childNode","withTranslation","componentCls","hocs","_","flow","App","React","Component","render","children","props","propTypes","PropTypes","element","isRequired","parseCoordinates","bounds","x","y","width","height","attributes","boundsArray","split","str","x1","y1","x2","y2","parseInt","isUnique","sourceXML","DOMParser","parseFromString","STRATEGY_MAPPINGS","getLocators","res","strategyAlias","strategy","value","SCREENSHOT_INTERACTION_MODE","SELECT","SWIPE","TAP","actionArgTypes","STRING","NUMBER","actionDefinitions","methodName","args","refresh","INTERACTION_MODE","SOURCE","ACTIONS","clientMethodPromises","bindClient","removeAllListeners","on","evt","resp","isObject","isEmpty","truncatedResult","truncate","JSON","stringify","util","hasValue","ignoreResult","success","message","i18n","t","description","result","duration","elementId","id","promise","uuid","resolve","e","parse","reject","unbindClient","callClientMethod","params","ipcRenderer","Error","UUID","v4","Promise","send","Framework","constructor","host","port","path","https","caps","scheme","actions","localVarCount","localVarCache","lastAssignedVar","serverUrl","name","language","addAction","action","push","wrapWithBoilerplate","indent","spaces","lines","spaceStr","i","l","trim","map","join","getCodeString","includeBoilerplate","genCodeFn","code","getNewLocalVar","getVarForFind","locator","key","wasNew","getVarName","varName","varIndex","codeFor_findAndAssign","codeFor_findElement","localVar","codeFor_tap","codeFor_swipe","JsWdFramework","isArray","suffixMap","codeFor_click","codeFor_clear","codeFor_sendKeys","text","codeFor_back","varNameIgnore","varIndexIgnore","codeFor_getCurrentActivity","codeFor_getCurrentPackage","codeFor_installAppOnDevice","app","codeFor_isAppInstalledOnDevice","codeFor_launchApp","codeFor_backgroundApp","timeout","codeFor_closeApp","codeFor_resetApp","codeFor_removeAppFromDevice","codeFor_getAppStrings","stringFile","codeFor_getClipboard","codeFor_setClipboard","clipboardText","codeFor_pressKeycode","keyCode","metaState","flags","codeFor_longPressKeycode","codeFor_hideDeviceKeyboard","codeFor_isKeyboardShown","codeFor_pushFileToDevice","pathToInstallTo","fileContentString","codeFor_pullFile","pathToPullFrom","codeFor_pullFolder","folderToPullFrom","codeFor_toggleAirplaneMode","codeFor_toggleData","codeFor_toggleWiFi","codeFor_toggleLocationServices","codeFor_sendSMS","phoneNumber","codeFor_gsmCall","codeFor_gsmSignal","signalStrength","codeFor_gsmVoice","state","codeFor_shake","codeFor_lock","seconds","codeFor_unlock","codeFor_isLocked","codeFor_rotateDevice","radius","rotation","touchCount","codeFor_getPerformanceData","packageName","dataType","dataReadTimeout","codeFor_getSupportedPerformanceDataTypes","codeFor_performTouchId","match","codeFor_toggleTouchIdEnrollment","enroll","codeFor_openNotifications","codeFor_getDeviceTime","codeFor_fingerprint","fingerprintId","codeFor_sessionCapabilities","codeFor_setPageLoadTimeout","ms","codeFor_setAsyncScriptTimeout","codeFor_setImplicitWaitTimeout","codeFor_getOrientation","codeFor_setOrientation","orientation","codeFor_getGeoLocation","codeFor_setGeoLocation","latitude","longitude","altitude","codeFor_logTypes","codeFor_log","logType","codeFor_updateSettings","settingsJson","codeFor_settings","readableName","JsWdIoFramework","chainifyCode","replace","proto","codeFor_setCommandTimeout","JavaFramework","pkg","cls","platformName","toLowerCase","Object","keys","k","codeFor_startActivity","settings","settingName","settingValue","toPairs","PythonFramework","getPythonVal","jsonVal","RubyFramework","RobotFramework","getCapsVariables","getApplicationInitialization","lastID","frameworks","jsWd","jsWdIo","java","python","ruby","robot","SET_SESSION_DETAILS","SET_SOURCE_AND_SCREENSHOT","SESSION_DONE","SELECT_ELEMENT","UNSELECT_ELEMENT","SET_SELECTED_ELEMENT_ID","SET_INTERACTIONS_NOT_AVAILABLE","METHOD_CALL_REQUESTED","METHOD_CALL_DONE","SET_FIELD_VALUE","SET_EXPANDED_PATHS","SELECT_HOVERED_ELEMENT","UNSELECT_HOVERED_ELEMENT","SHOW_SEND_KEYS_MODAL","HIDE_SEND_KEYS_MODAL","QUIT_SESSION_REQUESTED","QUIT_SESSION_DONE","START_RECORDING","PAUSE_RECORDING","CLEAR_RECORDING","CLOSE_RECORDER","SET_ACTION_FRAMEWORK","SAVED_FRAMEWORK","RECORD_ACTION","SET_SHOW_BOILERPLATE","SHOW_LOCATOR_TEST_MODAL","HIDE_LOCATOR_TEST_MODAL","SET_LOCATOR_TEST_STRATEGY","SET_LOCATOR_TEST_VALUE","SEARCHING_FOR_ELEMENTS","SEARCHING_FOR_ELEMENTS_COMPLETED","SET_LOCATOR_TEST_ELEMENT","CLEAR_SEARCH_RESULTS","ADD_ASSIGNED_VAR_CACHE","CLEAR_ASSIGNED_VAR_CACHE","SET_SCREENSHOT_INTERACTION_MODE","SET_SEARCHED_FOR_ELEMENT_BOUNDS","CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS","SET_SWIPE_START","SET_SWIPE_END","CLEAR_SWIPE_ACTION","PROMPT_KEEP_ALIVE","HIDE_PROMPT_KEEP_ALIVE","SELECT_INTERACTION_MODE","SELECT_ACTION_GROUP","SELECT_SUB_ACTION_GROUP","ENTERING_ACTION_ARGS","REMOVE_ACTION","SET_ACTION_ARG","xmlToJSON","source","xmlDoc","recursive","xmlNode","parentPath","index","attrObject","attribute","undefined","childIndex","bindAppium","dispatch","promptKeepAlive","reason","killedByUser","type","error","findElement","debounce","strategyMap","getState","selector","variableName","variableType","inspector","selectedElementPath","selectElement","selectedElementAttributes","selectedElementXPath","selectedElement","expandedPaths","pathArr","splice","paths","unselectElement","selectHoveredElement","unselectHoveredElement","applyClientMethod","isRecording","screenshot","windowSize","sourceError","screenshotError","windowSizeError","variableIndex","findAndAssign","concat","addAssignedVarCache","showSendKeysModal","hideSendKeysModal","setFieldValue","setExpandedPaths","quitSession","startRecording","pauseRecording","clearRecording","getSavedActionFramework","framework","get","setActionFramework","set","recordAction","closeRecorder","toggleShowBoilerplate","show","showBoilerplate","setSessionDetails","sessionDetails","showLocatorTestModal","hideLocatorTestModal","setLocatorTestValue","locatorTestValue","setLocatorTestStrategy","locatorTestStrategy","searchForElement","elements","fetchArray","el","assignedVarCache","setLocatorTestElement","location","size","B","all","skipScreenshotAndSource","skipRecord","clearSearchResults","selectScreenshotInteractionMode","screenshotInteractionMode","setSwipeStart","swipeStartX","swipeStartY","setSwipeEnd","swipeEndX","swipeEndY","clearSwipeAction","keepSessionAlive","selectActionGroup","group","selectSubActionGroup","selectInteractionMode","interaction","startEnteringActionArgs","actionName","cancelPendingAction","setActionArg","FormItem","Form","Item","ServerTabTestobject","server","setServerParam","placeholder","env","TESTOBJECT_API_KEY","environmentVariable","testobject","apiKey","target","SessionStyles","addonDataCenter","inputDataCenter","dataCenter","ServerTabHeadspin","customServerInputLeft","headspin","webDriverUrl","localDesc","ServerTabBrowserstack","browserstackUsernamePlaceholder","BROWSERSTACK_USERNAME","browserstackAccessKeyPlaceholder","BROWSERSTACK_ACCESS_KEY","browserstack","username","accessKey","ServerTabBitbar","bitbarApiKeyPlaceholder","BITBAR_API_KEY","bitbar","ServerTabKobiton","kobitonUsernamePlaceholder","KOBITON_USERNAME","kobitonAccessKeyPlaceholder","KOBITON_ACCESS_KEY","kobiton","ServerTabPerfecto","perfectoTokenPlaceholder","PERFECTO_TOKEN","perfecto","hostname","token","ServerTabPcloudy","pcloudy","ServerTabSauce","sauceUsernamePlaceholder","SAUCE_USERNAME","sauceAccessKeyPlaceholder","SAUCE_ACCESS_KEY","sauce","useSCProxy","checked","scHost","scPort","ServerTabTestingbot","testingbotKeyPlaceholder","TB_KEY","testingbotSecretPlaceholder","TB_SECRET","testingbot","secret","CloudProviders","tabhead","tabText","SauceLogo","tab","logo","TestObjectLogo","HeadSpinLogo","BrowserStackLogo","BitBarLogo","KobitonLogo","PerfectoLogo","PcloudyLogo","TestingBotLogo","NEW_SESSION_REQUESTED","NEW_SESSION_BEGAN","NEW_SESSION_DONE","CHANGE_CAPABILITY","SAVE_SESSION_REQUESTED","SAVE_SESSION_DONE","GET_SAVED_SESSIONS_REQUESTED","GET_SAVED_SESSIONS_DONE","SET_CAPABILITY_PARAM","ADD_CAPABILITY","REMOVE_CAPABILITY","SWITCHED_TABS","SET_CAPS","SAVE_AS_MODAL_REQUESTED","HIDE_SAVE_AS_MODAL_REQUESTED","SET_SAVE_AS_TEXT","DELETE_SAVED_SESSION_REQUESTED","DELETE_SAVED_SESSION_DONE","CHANGE_SERVER_TYPE","SET_SERVER_PARAM","SET_SERVER","SESSION_LOADING","SESSION_LOADING_DONE","SAVED_SESSIONS","SESSION_SERVER_PARAMS","SESSION_SERVER_TYPE","SERVER_ARGS","VISIBLE_PROVIDERS","SET_ATTACH_SESS_ID","GET_SESSIONS_REQUESTED","GET_SESSIONS_DONE","ENABLE_DESIRED_CAPS_EDITOR","ABORT_DESIRED_CAPS_EDITOR","SAVE_RAW_DESIRED_CAPS","SET_RAW_DESIRED_CAPS","SHOW_DESIRED_CAPS_JSON_ERROR","IS_ADDING_CLOUD_PROVIDER","SET_PROVIDERS","serverTypes","local","remote","ServerTypes","JSON_TYPES","getCapsObject","assign","cap","obj","showError","secs","errMessage","status","data","setCaps","changeCapability","addCapability","setCapabilityParam","removeCapability","newSession","attachSessId","desiredCapabilities","session","serverType","ssl","TESTOBJECT_HOST","testobject_api_key","headspinUrl","url","pathname","protocol","securityToken","BROWSERSTACK_HOST","BITBAR_HOST","testdroid_source","testdroid_apiKey","KOBITON_HOST","PCLOUDY_USERNAME","pCloudy_Username","PCLOUDY_ACCESS_KEY","pCloudy_ApiKey","TB_HOST","rejectUnauthorized","proxy","advanced","allowUnauthorized","useProxy","once","removeNewSessionListeners","saveSession","savedSessions","newSavedSession","date","Date","getSavedSessions","switchTabs","requestSaveAsModal","hideSaveAsModal","setSaveAsText","saveAsText","deleteSavedSession","newSessions","setAttachSessId","changeServerType","getRunningSessions","debounceGetRunningSessions","setLocalServerParams","serverArgs","setSavedServerParams","currentProviders","visibleProviders","includes","avoidServerTypes","serverInfo","sessions","removeRunningSessionsListeners","startDesiredCapsEditor","abortDesiredCapsEditor","saveRawDesiredCaps","rawDesiredCaps","capsArray","newCaps","newCapsArray","setRawDesiredCaps","isValidCapsJson","invalidCapsJsonReason","isValidatingCapsJson","addCloudProvider","isAddingProvider","stopAddCloudProvider","addVisibleProvider","provider","providers","removeVisibleProvider","setVisibleProviders","defaults","PRESETS","i18nextOptions","backend","loadPath","__dirname","addPath","jsonIndent","interpolation","escapeValue","lng","getSync","fallbackLng","whitelist","react","wait","isInitialized","use","initReactI18next","i18nextBackend","init","SERVER_STOP_REQ","SERVER_STOP_OK","SERVER_STOP_FAIL","LOGS_RECEIVED","LOGS_CLEARED","MONITOR_CLOSED","START_SESSION_REQUEST","SET_SERVER_ARGS","stopServerReq","stopServerOK","stopServerFailed","startSessionRequest","sessionUUID","serverLogsReceived","logs","setServerArgs","monitorClosed","stopListening","removeStopListeners","stopServer","event","alert","level","msg","setTimeout","closeMonitor","clearLogs","logfilePath","startServer","startSession","getRawLogs","openExternal","SERVER_START_REQ","SERVER_START_OK","SERVER_START_ERR","UPDATE_ARGS","SWITCH_TAB","PRESET_SAVE_REQ","PRESET_SAVE_OK","GET_PRESETS","PRESET_DELETE_REQ","PRESET_DELETE_OK","SET_LOGFILE_PATH","preventDefault","removeStartServerListeners","updateArgs","switchTab","tabId","savePreset","presets","_modified","now","console","getPresets","deletePreset","DEFAULT_ARGS","sendSync","initialState","serverVersion","SERVER_VERSION","serverStarting","serverFailMsg","presetSaving","presetDeleting","object","bool","func","updateArg","argName","newVal","StartButton","isEnabled","disabledOverride","noop","openConfig","buttonProps","disabled","startButton","configButton","SimpleTab","form","address","bind","SavePresetButton","AdvancedTab","modalOpen","newPresetName","buildInput","label","input","openPresetModal","setState","closePresetModal","updatePresetName","presetName","modal","presetModal","advancedForm","inputSection","secTitle","secBody","DeletePresetButton","PresetsTab","selectedPreset","componentWillMount","hasPresets","presetIsSelected","emptyPresetList","noPresetsContainer","noPresetsMessage","selectedPresetData","preset","selectPreset","window","confirm","presetList","presetsList","p","presetLink","presetItemActive","presetItemTitle","presetItemDesc","when","fromNow","presetDetail","columns","title","dataIndex","arg","val","presetsDetail","advancedStyles","presetsSection","TAB_SIMPLE","TAB_ADVANCED","TAB_PRESETS","StartServer","displayTab","formAndLogo","AppiumLogo","ozcan","tabs","tabButtons","main2","number","mapStateToProps","mapDispatchToProps","StartServerActions","STATUS_RUNNING","STATUS_STOPPED","STATUS_STOPPING","MAX_LOG_LINES","logLines","serverStatus","serverMonitor","serverStopping","sessionStart","sessionId","timestamp","format","convert","AnsiConverter","fg","bg","MAX_LOGS_RENDERED","leveler","StopButtonComponent","btn","serverButton","string","StopButton","StartSessionButtonComponent","StartSessionButton","GetRawLogsButtonComponent","GetRawLogsButton","ServerMonitor","keydownListener","metaKey","ctrlKey","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","componentWillUpdate","shouldScroll","n","_term","scrollTop","offsetHeight","scrollHeight","componentDidUpdate","statusIcon","statusMsg","logLineSection","line","icn","logTimestamp","__html","toHtml","termClass","term","lastSection","last","bar","AppiumSmallMagenta","c","array","ServerActions","FormattedCaps","getFormattedJSON","formatJSON","plain","isEditingDesiredCaps","SessionCSS","formattedCapsCont","formattedCaps","capsEditorControls","capsEditorButton","capsEditor","dialog","NewSessionForm","getLocalFilePath","showOpenDialog","filepath","handleSetType","onSetCapabilityParam","buttonAfter","isNaN","fileControlWrapper","Option","Select","translatedValue","showSaveAsModal","capsFormRow","capsFormCol","capsFormDisabled","btnDeleteCap","capsFormattedCol","SavedSessions","onRowClick","getRowClassName","record","sessionFromUUID","capsUUID","selected","handleDelete","dataSource","formatCaps","importantCaps","deviceName","automationName","AttachToSession","getSessionInfo","capabilities","runningAppiumSessions","btnReload","ServerTabCustom","Panel","Collapse","AdvancedServerParams","advancedSettingsContainer","CloudProviderSelector","toggleVisibleProvider","providerName","handleCloseModal","isAddingCloudProvider","providersGrid","chunk","footer","cloudProviderModal","row","providerIsVisible","style","borderColor","TabPane","Tabs","ADD_CLOUD_PROVIDER","Session","handleSelectServerTab","removeCloudProvider","newSessionBegan","tabKey","isCapsDirty","sessionLoading","isAttaching","sessionContainer","serverTab","serverTabs","scrollingTabCont","scrollingTab","savedSessionsCount","sessionFooter","desiredCapsLink","shell","SessionActions","HighlighterRect","hoveredElement","zIndex","scaleRatio","xOffset","elLocation","elSize","hoveredPath","selectedPath","left","top","highlighterClasses","InspectorCSS","HighlighterRects","updateScaleRatio","screenshotEl","containerEl","querySelector","offsetWidth","handleScreenshotClick","swipeStart","swipeEnd","delay","handleDoSwipe","handleMouseMove","offsetX","nativeEvent","offsetY","Math","round","handleMouseOut","searchedForElementBounds","isLocatorTestModalVisible","highlighterRects","highlighterXOffset","getBoundingClientRect","childEl","screenshotStyle","cursor","Screenshot","methodCallInProgress","swipeInstructions","screenImg","innerScreenshotContainer","screenshotBox","coordinatesContainer","swipeSvg","ButtonGroup","Button","Group","SelectedElement","handleSendKeys","sendKeys","selectedElementId","sendKeysModalVisible","elementInteractionsNotAvailable","attributeColumns","unshift","findColumns","findDataSource","find","showXpathWarning","elementActions","clipboard","writeText","LocatedElements","onSubmit","locatedElements","onCancel","locatorTestElement","InspectorStyles","elementCount","ElementLocator","strategyValue","strategyName","LocatorTestModal","isSearchingForElements","TreeNode","Tree","IMPORTANT_ATTRS","Source","getFormattedTag","attrs","attr","sourceAttrName","sourceAttrValue","sourceTag","handleSelectElement","elemObj","selectedPaths","errorMsg","RecordedActions","raw","recordedActions","actionFramework","rawCode","actionBar","frameworkOpts","f","boilerplateType","highlightedCode","Actions","startPerformingAction","executeCommand","pendingAction","appPackage","appActivity","appWaitPackage","intentAction","intentCategory","intentFlags","optionalIntentArguments","dontStopAppOnReset","json","isString","selectedActionGroup","selectedSubActionGroup","actionGroupName","actionGroup","argType","toNumber","MIN_WIDTH","MIN_HEIGHT","MAX_SCREENSHOT_WIDTH","Inspector","didInitialResize","screenAndSourceEl","lastScreenshot","updateSourceTreeWidth","img","imgRect","screenshotRect","flexBasis","maxWidth","attemptedWidth","curHeight","innerHeight","curWidth","innerWidth","needsResize","newWidth","newHeight","resizeTo","screenshotInteractionChange","mode","showRecord","selectedInteractionMode","showKeepAlivePrompt","main","actionControls","controls","InspectorActions","InspectorPage","SET_ENVIRONMENT_VARIABLE","SET_ENVIRONMENT_VARIABLES","GET_ENVIRONMENT_VARIABLES","SAVE_ENVIRONMENT_VARIABLES","setEnvironmentVariable","getEnvironmentVariables","defaultEnvironmentVariables","savedEnvironmentVariables","Config","ENV_VARIABLE_NAMES","getCurrentWindow","saveAndRestart","environmentVariables","dialogOptions","buttons","showMessageBox","response","relaunch","exit","close","ENV_NAME","ConfigActions","ConfigPage","changeLanguage","StartServerPage","ServerMonitorPage","SessionPage","WrongFolder","moveToApplicationsFolder","WrongFolderStyles","electron","isDev","NODE_ENV","shouldShowWrongFolderComponent","WRONG_FOLDER","FORCE_NO_WRONG_FOLDER","isInApplicationsFolder","Root","store","history","SET_UPDATE_STATE","setUpdateState","updateState","configActions","inspectorActions","serverMonitorActions","sessionActions","startServerActions","updaterActions","serverName","INITIAL_STATE","gettingSessions","nextState","newSessionRequested","saveSessionRequested","getSavedSessionsRequested","deletingSession","currentServerState","newServerState","nextServerState","cloneDeep","reduce","DEFAULT_FRAMEWORK","findElementByPath","isQuittingSession","isSessionDone","selectedElementVariableName","selectedElementVariableType","createRootReducer","router","updater","rootReducer","configureStore","middleware","enhancers","thunk","logger","collapsed","actionCreators","routerActions","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","module","hot","accept","replaceReducer","require","default","selectedConfigureStore","configureStoreProd","configureStoreDev","exports","Store","getElementById","NextRoot"],"mappings":"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","file":"renderer.e31bb0bc.js","sourceRoot":"../app/renderer","sourcesContent":["import React from 'react';\nimport styles from './Spinner.css';\n\nconst Spinner = () => (\n  <div className={styles.container}>\n    <div className={styles.loader}/>\n  </div>\n);\n\nexport default Spinner;","const config = {\n  platform: process.platform,\n  languages: ['en', 'de', 'ru', 'ja', 'zh-CN', 'ko', 'hi', 'kn', 'ml-IN', 'pa-IN', 'te', 'pt-BR'],\n  namespace: 'translation',\n};\n\nexport default config;\n","import XPath from 'xpath';\nimport { withTranslation as wt } from 'react-i18next';\nimport config from '../configs/app.config';\nimport _ from 'lodash';\n\n/**\n * Get an optimal XPath for a DOMNode\n * @param {*} domNode {DOMNode}\n * @param {*} uniqueAttributes {array[string]} Attributes we know are unique (defaults to just 'id')\n */\nexport function getOptimalXPath (doc, domNode, uniqueAttributes = ['id']) {\n  try {\n    // BASE CASE #1: If this isn't an element, we're above the root, return empty string\n    if (!domNode.tagName || domNode.nodeType !== 1) {\n      return '';\n    }\n\n    // BASE CASE #2: If this node has a unique attribute, return an absolute XPath with that attribute\n    for (let attrName of uniqueAttributes) {\n      const attrValue = domNode.getAttribute(attrName);\n      if (attrValue) {\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\n        let othersWithAttr;\n\n        // If the XPath does not parse, move to the next unique attribute\n        try {\n          othersWithAttr = XPath.select(xpath, doc);\n        } catch (ign) {\n          continue;\n        }\n\n        // If the attribute isn't actually unique, get it's index too\n        if (othersWithAttr.length > 1) {\n          let index = othersWithAttr.indexOf(domNode);\n          xpath = `(${xpath})[${index + 1}]`;\n        }\n        return xpath;\n      }\n    }\n\n\n    // Get the relative xpath of this node using tagName\n    let xpath = `/${domNode.tagName}`;\n\n    // If this node has siblings of the same tagName, get the index of this node\n    if (domNode.parentNode) {\n      // Get the siblings\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\n      ));\n\n      // If there's more than one sibling, append the index\n      if (childNodes.length > 1) {\n        let index = childNodes.indexOf(domNode);\n        xpath += `[${index + 1}]`;\n      }\n    }\n\n    // Make a recursive call to this nodes parents and prepend it to this xpath\n    return getOptimalXPath(doc, domNode.parentNode, uniqueAttributes) + xpath;\n  } catch (ign) {\n    // If there's an unexpected exception, abort and don't get an XPath\n    return null;\n  }\n}\n\nexport function withTranslation (componentCls, ...hocs) {\n  return _.flow(\n    ...hocs,\n    wt(config.namespace),\n  )(componentCls);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from '../util';\n\nclass App extends React.Component {\n  render () {\n    const { children } = this.props;\n    return (\n      <React.Fragment>{children}</React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  children: PropTypes.element.isRequired\n};\n\nexport default withTranslation(App);\n","import { DOMParser } from 'xmldom';\nimport xpath from 'xpath';\n\nexport function parseCoordinates (element) {\n  let {bounds, x, y, width, height} = element.attributes || {};\n\n  if (bounds) {\n    let boundsArray = bounds.split(/\\[|\\]|,/).filter((str) => str !== '');\n    return {x1: boundsArray[0], y1: boundsArray[1], x2: boundsArray[2], y2: boundsArray[3]};\n  } else if (x) {\n    x = parseInt(x, 10);\n    y = parseInt(y, 10);\n    width = parseInt(width, 10);\n    height = parseInt(height, 10);\n    return {x1: x, y1: y, x2: x + width, y2: y + height};\n  } else {\n    return {};\n  }\n}\n\nexport function isUnique (attrName, attrValue, sourceXML) {\n  // If no sourceXML provided, assume it's unique\n  if (!sourceXML) {\n    return true;\n  }\n  const doc = new DOMParser().parseFromString(sourceXML);\n  return xpath.select(`//*[@${attrName}=\"${attrValue}\"]`, doc).length < 2;\n}\n\n// Map of the optimal strategies.\nconst STRATEGY_MAPPINGS = [\n  ['name', 'accessibility id'],\n  ['content-desc', 'accessibility id'],\n  ['id', 'id'],\n  ['rntestid', 'id'],\n  ['resource-id', 'id'],\n];\n\nexport function getLocators (attributes, sourceXML) {\n  const res = {};\n  for (let [strategyAlias, strategy] of STRATEGY_MAPPINGS) {\n    const value = attributes[strategyAlias];\n    if (value && isUnique(strategyAlias, value, sourceXML)) {\n      res[strategy] = attributes[strategyAlias];\n    }\n  }\n  return res;\n}\n\nexport const SCREENSHOT_INTERACTION_MODE = {\n  SELECT: 'select',\n  SWIPE: 'swipe',\n  TAP: 'tap',\n};\n\nexport const actionArgTypes = {\n  STRING: 'string',\n  NUMBER: 'number',\n};\n\nconst { STRING, NUMBER } = actionArgTypes;\n\n// Note: When adding or removing actionDefinitions, update `en/translation.json`\nexport const actionDefinitions = {\n  'Device': {\n    'Execute Mobile': {\n      'Execute': {methodName: 'execute', args: [['command', STRING], ['jsonArgument', STRING]]}\n    },\n    'Android Activity': {\n      'Start Activity': {methodName: 'startActivity', args: [\n        ['appPackage', STRING], ['appActivity', STRING], ['appWaitPackage', STRING],\n        ['intentAction', STRING], ['intentCategory', STRING], ['intentFlags', STRING],\n        ['optionalIntentArguments', STRING], ['dontStopAppOnReset', STRING],\n      ], refresh: true},\n      'Current Activity': {methodName: 'getCurrentActivity'},\n      'Current Package': {methodName: 'getCurrentPackage'},\n    },\n    'App': {\n      'Install App': {methodName: 'installAppOnDevice', args: [['appPathOrUrl', STRING]]},\n      'Is App Installed': {methodName: 'isAppInstalledOnDevice', args: [['appId', STRING]]},\n      'Launch App': {methodName: 'launchApp', refresh: true},\n      'Background App': {methodName: 'backgroundApp', args: [['timeout', NUMBER]], refresh: true},\n      'Close App': {methodName: 'closeApp', refresh: true},\n      'Reset App': {methodName: 'resetApp', refresh: true},\n      'Remove App': {methodName: 'removeAppFromDevice', args: [['bundleId', STRING]]},\n      'Get App Strings': {methodName: 'getAppStrings', args: [['language', STRING], ['stringFile', STRING]], refresh: true},\n    },\n    'Clipboard': {\n      'Get Clipboard': {methodName: 'getClipboard'},\n      'Set Clipboard': {methodName: 'setClipboard', args: [['clipboardText', STRING]]},\n    },\n    'File': {\n      'Push File': {methodName: 'pushFileToDevice', args: [['pathToInstallTo', STRING], ['fileContentString', STRING]]},\n      'Pull File': {methodName: 'pullFile', args: [['pathToPullFrom', STRING]]},\n      'Pull Folder': {methodName: 'pullFolder', args: [['folderToPullFrom', STRING]]},\n    },\n    'Interaction': {\n      'Shake': {methodName: 'shake'},\n      'Lock': {methodName: 'lock', args: [['seconds', NUMBER]], refresh: true},\n      'Unlock': {methodName: 'unlock', refresh: true},\n      'Is Device Locked': {methodName: 'isLocked'},\n      'Rotate Device': {methodName: 'rotateDevice', args: [\n        ['x', NUMBER], ['y', NUMBER], ['radius', NUMBER], ['rotatation', NUMBER], ['touchCount', NUMBER], ['duration', NUMBER]\n      ], refresh: true},\n    },\n    'Keys': {\n      'Press Key': {methodName: 'pressKeycode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\n      'Long Press Key': {methodName: 'longPressKeycode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\n      'Hide Keyboard': {methodName: 'hideDeviceKeyboard', refresh: true},\n      'Is Keyboard Shown': {methodName: 'isKeyboardShown'},\n    },\n    'Network': {\n      'Toggle Airplane Mode': {methodName: 'toggleAirplaneMode'},\n      'Toggle Data': {methodName: 'toggleData'},\n      'Toggle WiFi': {methodName: 'toggleWiFi'},\n      'Toggle Location Services': {methodName: 'toggleLocationServices'},\n      'Send SMS': {methodName: 'sendSMS', args: [['phoneNumber', STRING], ['text', STRING]]},\n      'GSM Call': {methodName: 'gsmCall', args: [['phoneNumber', STRING], ['action', STRING]]},\n      'GSM Signal': {methodName: 'gsmSignal', args: [['signalStrengh', NUMBER]]},\n      'GSM Voice': {methodName: 'gsmVoice', args: [['state', STRING]]},\n    },\n    'Performance Data': {\n      'Get Data': {methodName: 'getPerformanceData', args: [['packageName', STRING], ['dataType', STRING], ['dataReadTimeout', NUMBER]]},\n      'Get Data Types': {methodName: 'getSupportedPerformanceDataTypes'},\n    },\n    'iOS Simulator': {\n      'Perform Touch Id': {methodName: 'performTouchId', args: [['match', STRING]], refresh: true},\n      'Toggle Touch Id Enrollment': {methodName: 'toggleTouchIdEnrollment', args: [['enroll', STRING]]},\n    },\n    'System': {\n      'Open Notifications': {methodName: 'openNotifications', refresh: true},\n      'Get System Time': {methodName: 'getDeviceTime'},\n      'Fingerprint (Android)': {methodName: 'fingerprint', args: [['fingerPrintId', NUMBER]], refresh: true}\n    },\n  },\n  'Session': {\n    'Session Capabilities': {\n      'Get Session Capabilities': {methodName: 'sessionCapabilities'}\n    },\n    'Timeouts': {\n      'Set Pageload Timeout': {methodName: 'setPageLoadTimeout', args: [['timeout', NUMBER]]},\n      'Set Script Timeout': {methodName: 'setAsyncScriptTimeout', args: [['timeout', NUMBER]]},\n      'Set Implicit Timeout': {methodName: 'setImplicitWaitTimeout', args: [['timeout', NUMBER]]},\n    },\n    'Orientation': {\n      'Get Orientation': {methodName: 'getOrientation'},\n      'Set Orientation': {methodName: 'setOrientation', args: [['orientation', STRING]], refresh: true},\n    },\n    'Geolocation': {\n      'Get Geolocation': {methodName: 'getGeoLocation'},\n      'Set Geolocation': {methodName: 'setGeoLocation', args: [['latitude', NUMBER], ['longitude', NUMBER], ['altitude', NUMBER]]},\n    },\n    'Logs': {\n      'Get Log Types': {methodName: 'logTypes'},\n      'Get Logs': {methodName: 'log', args: [['logType', STRING]]},\n    },\n    'Settings': {\n      'Update Settings': {methodName: 'updateSettings', args: [['settingsJson', STRING]]},\n      'Get Device Settings': {methodName: 'settings'},\n    },\n  },\n};\n\nexport const INTERACTION_MODE = {\n  SOURCE: 'source',\n  ACTIONS: 'actions',\n};","import { ipcRenderer } from 'electron';\nimport { notification } from 'antd';\nimport { util } from 'appium-support';\nimport i18n from '../../configs/i18next.config.renderer';\nimport _ from 'lodash';\nimport UUID from 'uuid';\nimport Promise from 'bluebird';\n\nconst clientMethodPromises = {};\n\nexport function bindClient () {\n  /**\n   * When we hear back from the main process, resolve the promise\n   */\n  ipcRenderer.removeAllListeners('appium-client-command-response');\n  ipcRenderer.on('appium-client-command-response', (evt, resp) => {\n    // Rename 'id' to 'elementId'\n    let {res, methodName} = resp;\n\n    // Ignore empty objects\n    if (_.isObject(res) && _.isEmpty(res)) {\n      res = null;\n    }\n\n    const truncatedResult = _.truncate(JSON.stringify(res), {length: 2000});\n\n    if (util.hasValue(res) && !resp.ignoreResult) {\n      notification.success({\n        message: i18n.t('methodCallResult', {methodName}),\n        description: i18n.t('commandWasReturnedWithResult', {result: truncatedResult}),\n        duration: 15,\n      });\n    }\n    resp.elementId = resp.id;\n    let promise = clientMethodPromises[resp.uuid];\n    if (promise) {\n      promise.resolve(resp);\n      delete clientMethodPromises[resp.uuid];\n    }\n  });\n\n  /**\n   * If we hear back with an error, reject the promise\n   */\n  ipcRenderer.on('appium-client-command-response-error', (evt, resp) => {\n    let {e, uuid} = resp;\n    e = JSON.parse(e);\n    let promise = clientMethodPromises[uuid];\n    if (promise) {\n      promise.reject(e);\n      delete clientMethodPromises[uuid];\n    }\n  });\n}\n\nexport function unbindClient () {\n  ipcRenderer.removeAllListeners('appium-client-command-response');\n  ipcRenderer.removeAllListeners('appium-client-command-response-error');\n}\n\nexport function callClientMethod (params) {\n  if (!ipcRenderer) {\n    throw new Error('Cannot call ipcRenderer from main context');\n  }\n  let uuid = UUID.v4();\n  let promise = new Promise((resolve, reject) => clientMethodPromises[uuid] = {resolve, reject});\n  ipcRenderer.send('appium-client-command-request', {\n    ...params,\n    uuid,\n  });\n  return promise;\n}","export default class Framework {\n\n  constructor (host, port, path, https, caps) {\n    this.host = host || 'localhost';\n    this.port = port || 4723;\n    this.path = path || '/wd/hub';\n    this.caps = caps || {};\n    this.https = !!https;\n    this.scheme = https ? 'https' : 'http';\n    this.actions = [];\n    this.localVarCount = 0;\n    this.localVarCache = {};\n    this.lastAssignedVar = null;\n  }\n\n  get serverUrl () {\n    return `${this.scheme}://${this.host}:${this.port}${this.path}`;\n  }\n\n  get name () {\n    throw new Error('Must implement name getter');\n  }\n\n  get language () {\n    throw new Error('Must implement language getter');\n  }\n\n  addAction (action, params) {\n    this.actions.push({action, params});\n  }\n\n  wrapWithBoilerplate () {\n    throw new Error('Must implement wrapWithBoilerplate');\n  }\n\n  indent (str, spaces) {\n    let lines = str.split('\\n');\n    let spaceStr = '';\n    for (let i = 0; i < spaces; i++) {\n      spaceStr += ' ';\n    }\n    return lines\n      .filter((l) => !!l.trim())\n      .map((l) => `${spaceStr}${l}`)\n      .join('\\n');\n  }\n\n  getCodeString (includeBoilerplate = false) {\n    let str = '';\n    for (let {action, params} of this.actions) {\n      let genCodeFn = `codeFor_${action}`;\n      if (!this[genCodeFn]) {\n        throw new Error(`Need to implement 'codeFor_${action}()'`);\n      }\n      let code = this[genCodeFn](...params);\n      if (code) {\n        str += `${code}\\n`;\n      }\n    }\n    if (includeBoilerplate) {\n      return this.wrapWithBoilerplate(str);\n    }\n    return str;\n  }\n\n  getNewLocalVar () {\n    this.localVarCount++;\n    return `el${this.localVarCount}`;\n  }\n\n  getVarForFind (strategy, locator) {\n    const key = `${strategy}-${locator}`;\n    let wasNew = false;\n    if (!this.localVarCache[key]) {\n      this.localVarCache[key] = this.getNewLocalVar();\n      wasNew = true;\n    }\n    this.lastAssignedVar = this.localVarCache[key];\n    return [this.localVarCache[key], wasNew];\n  }\n\n  getVarName (varName, varIndex) {\n    if (varIndex || varIndex === 0) {\n      return `${varName}[${varIndex}]`;\n    }\n    return varName;\n  }\n\n  codeFor_findAndAssign () {\n    throw new Error('Need to implement codeFor_findAndAssign');\n  }\n\n  codeFor_findElement (strategy, locator) {\n    let [localVar, wasNew] = this.getVarForFind(strategy, locator);\n    if (!wasNew) {\n      // if we've already found this element, don't print out\n      // finding it again\n      return '';\n    }\n\n    return this.codeFor_findAndAssign(strategy, locator, localVar);\n\n  }\n\n  codeFor_tap () {\n    throw new Error('Need to implement codeFor_tap');\n  }\n\n  codeFor_swipe () {\n    throw new Error('Need to implement codeFor_tap');\n  }\n}\n","import Framework from './framework';\n\nclass JsWdFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  wrapWithBoilerplate (code) {\n    let caps = JSON.stringify(this.caps);\n    return `// Requires the admc/wd client library\n// (npm install wd)\n// Then paste this into a .js file and run with Node 7.6+\n\nconst wd = require('wd');\nconst driver = wd.promiseChainRemote(\"${this.serverUrl}\");\nconst caps = ${caps};\n\nasync function main () {\n  await driver.init(caps);\n${this.indent(code, 2)}\n  await driver.quit();\n}\n\nmain().catch(console.log);\n`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'XPath',\n      'accessibility id': 'AccessibilityId',\n      'id': 'Id',\n      'name': 'Name',\n      'class name': 'ClassName',\n      '-android uiautomator': 'AndroidUIAutomator',\n      '-android datamatcher': 'AndroidDataMatcher',\n      '-ios predicate string': 'IosUIAutomation',\n      '-ios class chain': 'IosClassChain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `let ${localVar} = await driver.elementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = await driver.elementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `await ${this.getVarName(varName, varIndex)}.clear();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `await ${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `await driver.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\n    return `await (new wd.TouchAction(driver))\n  .tap({x: ${x}, y: ${y}})\n  .perform()\n    `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\n    return `await (new wd.TouchAction(driver))\n  .press({x: ${x1}, y: ${y1}})\n  .moveTo({x: ${x2}, y: ${y2}})\n  .release()\n  .perform()\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = await driver.getCurrentActivity()`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = await driver.getCurrentPackage()`;\n  }\n\n\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = await driver.installAppOnDevice('${app}');`;\n  }\n\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `await driver.launchApp();`;\n  }\n\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\n    return `await driver.backgroundApp(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `await driver.closeApp();`;\n  }\n\n  codeFor_resetApp () {\n    return `await driver.resetApp();`;\n  }\n\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.removeAppFromDevice('${app}');`;\n  }\n\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = await driver.getAppStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `let clipboardText = await driver.getClipboard();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `await driver.setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideDeviceKeyboard () {\n    return `await driver.hideDeviceKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `await driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `await driver.pushFileToDevice('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let fileBase64 = await driver.pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let fileBase64 = await driver.pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `await driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `await driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `await driver.toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `await driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `await driver.sendSms('${phoneNumber}', '${text}');`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `await driver.gsmCall('${phoneNumber}', '${action}');`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `await driver.gsmSignal(${signalStrength});`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `await driver.gsmVoice('${state}');`;\n  }\n\n  codeFor_shake () {\n    return `await driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `await driver.lock(${seconds})`;\n  }\n\n  codeFor_unlock () {\n    return `await driver.unlock()`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = await driver.isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `driver.rotateDevice({x: ${x}, y: ${y}, duration: ${duration}, radius: ${radius}, rotation: ${rotation}, touchCount: ${touchCount}});`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `let performanceData = await driver.getPerformanceData('${packageName}', '${dataType}', ${dataReadTimeout});`;\n  }\n\n  codeFor_getSupportedPerformanceDataTypes () {\n    return `let supportedPerformanceDataTypes = await driver.getSupportedPerformanceDataTypes();`;\n  }\n\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\n    return `await driver.touchId(${match});`;\n  }\n\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\n    return `await driver.toggleTouchIdEnrollment(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `await driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = await driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `await driver.fingerprint(${fingerprintId});`;\n  }\n\n  codeFor_sessionCapabilities () {\n    return `let caps = await driver.sessionCapabilities();`;\n  }\n\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `await setPageLoadTimeout(${ms})`;\n  }\n\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `await setAsyncScriptTimeout(${ms})`;\n  }\n\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `await setImplicitWaitTimeout(${ms})`;\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = await driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `await driver.setOrientation('${orientation}');`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = await driver.getGeoLocation();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `await driver.setGeoLocation(${latitude}, ${longitude}, ${altitude});`;\n  }\n\n  codeFor_logTypes () {\n    return `let logTypes = await driver.logTypes();`;\n  }\n\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = await driver.log('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `await driver.updateSettings(${settingsJson});`;\n  }\n\n  codeFor_settings () {\n    return `let settings = await driver.settings();`;\n  }\n\n}\n\nJsWdFramework.readableName = 'JS - WD (Promise)';\n\nexport default JsWdFramework;\n","import Framework from './framework';\n\nclass JsWdIoFramework extends Framework {\n\n  get language () {\n    return 'js';\n  }\n\n  chainifyCode (code) {\n    return code\n      .replace(/let .+ = /g, '')\n      .replace(/(\\n|^)(driver|el[0-9]+)\\./g, '\\n.')\n      .replace(/;\\n/g, '\\n');\n  }\n\n  wrapWithBoilerplate (code) {\n    let host = JSON.stringify(this.host);\n    let caps = JSON.stringify(this.caps);\n    let proto = JSON.stringify(this.scheme);\n    let path = JSON.stringify(this.path);\n    return `// Requires the webdriverio client library\n// (npm install webdriverio)\n// Then paste this into a .js file and run with Node:\n// node <file>.js\n\nconst wdio = require('webdriverio');\nconst caps = ${caps};\nconst driver = wdio.remote({\n  protocol: ${proto},\n  host: ${host},\n  port: ${this.port},\n  path: ${path},\n  desiredCapabilities: caps\n});\n\ndriver.init()\n${this.indent(this.chainifyCode(code), 2)}\n  .end();\n`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    // wdio has its own way of indicating the strategy in the locator string\n    switch (strategy) {\n      case 'xpath': break; // xpath does not need to be updated\n      case 'accessibility id': locator = `~${locator}`; break;\n      case 'id': locator = `${locator}`; break;\n      case 'name': locator = `name=${locator}`; break;\n      case 'class name': locator = `${locator}`; break;\n      case '-android uiautomator': locator = `android=${locator}`; break;\n      case '-android datamatcher': locator = `android=${locator}`; break;\n      case '-ios predicate string': locator = `ios=${locator}`; break;\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\n      default: throw new Error(`Can't handle strategy ${strategy}`);\n    }\n    if (isArray) {\n      return `let ${localVar} = driver.elements(${JSON.stringify(locator)});`;\n    } else {\n      return `let ${localVar} = driver.element(${JSON.stringify(locator)});`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clearElement();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.setValue(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `driver.back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\n    return `driver.touchAction({actions: 'tap', x: ${x}, y: ${y}})`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\n    return `driver.touchAction([\n  {action: 'press', x: ${x1}, y: ${y1}},\n  {action: 'moveTo', x: ${x2}, y: ${y2}},\n  'release'\n]);`;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `let activityName = await driver.currentActivity();`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `let packageName = await driver.currentPackage();`;\n  }\n\n\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.installApp('${app}');`;\n  }\n\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `let isAppInstalled = await driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `await driver.launch();`;\n  }\n\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\n    return `await driver.background(${timeout});`;\n  }\n\n  codeFor_closeApp () {\n    return `await driver.close_app();`;\n  }\n\n  codeFor_resetApp () {\n    return `await driver.reset();`;\n  }\n\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\n    return `await driver.removeApp('${app}')`;\n  }\n\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `let appStrings = await driver.getAppStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `let clipboardText = await driver.getClipboard();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `await driver.setClipboard('${clipboardText}')`;\n  }\n\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideDeviceKeyboard () {\n    return `await driver.hideDeviceKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `//isKeyboardShown not supported`;\n  }\n\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `await driver.pushFile('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `let data = await driver.pullFile('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `let data = await driver.pullFolder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `await driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `await driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `await driver.toggleWiFi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `await driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS () {\n    return `// Not supported: sendSms;`;\n  }\n\n  codeFor_gsmCall () {\n    return `// Not supported: gsmCall`;\n  }\n\n  codeFor_gsmSignal () {\n    return `// Not supported: gsmSignal`;\n  }\n\n  codeFor_gsmVoice () {\n    return `// Not supported: gsmVoice`;\n  }\n\n  codeFor_shake () {\n    return `await driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `await driver.lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `await driver.unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `let isLocked = await driver.isLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `driver.rotate(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration});`;\n  }\n\n  codeFor_getPerformanceData () {\n    return `// Not supported: getPerformanceData`;\n  }\n\n  codeFor_getSupportedPerformanceDataTypes () {\n    return `// Not supported: getSupportedPerformanceDataTypes`;\n  }\n\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\n    return `await driver.touchId(${match});`;\n  }\n\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\n    return `await driver.toggleTouchIdEnrollment(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `await driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `let time = await driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `await driver.fingerprint(${fingerprintId});`;\n  }\n\n  codeFor_sessionCapabilities () {\n    return `let caps = await driver.session('c8db88a0-47a6-47a1-802d-164d746c06aa');`;\n  }\n\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `await driver.timeouts('page load', ${ms})`;\n  }\n\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `await driver.timeouts('script', ${ms})`;\n  }\n\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `await driver.timeouts('implicit', ${ms})`;\n  }\n\n  codeFor_setCommandTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `await driver.timeouts('command', ${ms})`;\n  }\n\n  codeFor_getOrientation () {\n    return `let orientation = await driver.orientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.orientation(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `let location = await driver.location();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `await driver.location({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\n  }\n\n  codeFor_logTypes () {\n    return `let logTypes = await driver.log();`;\n  }\n\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\n    return `let logs = await driver.log('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `await driver.settings(${settingsJson});`;\n  }\n\n  codeFor_settings () {\n    return `let settings = await driver.settings();`;\n  }\n}\n\nJsWdIoFramework.readableName = 'JS - Webdriver.io';\n\nexport default JsWdIoFramework;\n","import Framework from './framework';\nimport _ from 'lodash';\n\nclass JavaFramework extends Framework {\n\n  get language () {\n    return 'java';\n  }\n\n  wrapWithBoilerplate (code) {\n    let [pkg, cls] = (() => {\n      if (this.caps.platformName) {\n        switch (this.caps.platformName.toLowerCase()) {\n          case 'ios': return ['ios', 'IOSDriver'];\n          case 'android': return ['android', 'AndroidDriver'];\n          default: return ['unknownPlatform', 'UnknownDriver'];\n        }\n      } else {\n        return ['unknownPlatform', 'UnknownDriver'];\n      }\n    })();\n    let capStr = this.indent(Object.keys(this.caps).map((k) => {\n      return `desiredCapabilities.setCapability(${JSON.stringify(k)}, ${JSON.stringify(this.caps[k])});`;\n    }).join('\\n'), 4);\n    return `import io.appium.java_client.MobileElement;\nimport io.appium.java_client.${pkg}.${cls};\nimport junit.framework.TestCase;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport org.openqa.selenium.remote.DesiredCapabilities;\n\npublic class SampleTest {\n\n  private ${cls} driver;\n\n  @Before\n  public void setUp() throws MalformedURLException {\n    DesiredCapabilities desiredCapabilities = new DesiredCapabilities();\n${capStr}\n\n    URL remoteUrl = new URL(\"${this.serverUrl}\");\n\n    driver = new ${cls}(remoteUrl, desiredCapabilities);\n  }\n\n  @Test\n  public void sampleTest() {\n${this.indent(code, 4)}\n  }\n\n  @After\n  public void tearDown() {\n    driver.quit();\n  }\n}\n`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'XPath',\n      'accessibility id': 'AccessibilityId',\n      'id': 'Id',\n      'class name': 'ClassName',\n      'name': 'Name',\n      '-android uiautomator': 'AndroidUIAutomator',\n      '-android datamatcher': 'AndroidDataMatcher',\n      '-ios predicate string': 'IosNsPredicate',\n      '-ios class chain': 'IosClassChain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `List<MobileElement> ${localVar} = (MobileElement) driver.findElementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    } else {\n      return `MobileElement ${localVar} = (MobileElement) driver.findElementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\n    }\n  }\n\n  getVarName (varName, varIndex) {\n    if (varIndex || varIndex === 0) {\n      return `${varName}.get(${varIndex})`;\n    }\n    return varName;\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click();`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear();`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\n  }\n\n  codeFor_back () {\n    return `driver.navigate().back();`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\n    return `(new TouchAction(driver)).tap(${x}, ${y}).perform()`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\n    return `(new TouchAction(driver))\n  .press({x: ${x1}, y: ${y1}})\n  .moveTo({x: ${x2}: y: ${y2}})\n  .release()\n  .perform()\n  `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `String activityName = driver.currentActivity()`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `String packageName = driver.currentPackage()`;\n  }\n\n  codeFor_startActivity () {\n    return `driver.`;\n  }\n\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `driver.installApp(\"${app}\");`;\n  }\n\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `boolean isAppInstalled = driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launchApp();`;\n  }\n\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.runAppInBackground(Duration.ofSeconds(${timeout}));`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.closeApp();`;\n  }\n\n  codeFor_resetApp () {\n    return `driver.resetApp();`;\n  }\n\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\n    return `driver.removeApp(\"${app}\");`;\n  }\n\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `Map<String, String> appStrings = driver.getAppStringMap(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\n  }\n\n  codeFor_getClipboard () {\n    return `String clipboardText = driver.getClipboardText();`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.setClipboardText(\"${clipboardText}\");`;\n  }\n\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.pressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideDeviceKeyboard () {\n    return `driver.hideKeyboard();`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `boolean isKeyboardShown = driver.isKeyboardShown();`;\n  }\n\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.pushFile(\"${pathToInstallTo}\", ${fileContentString})`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `byte[] fileBase64 = driver.pullFile(\"${pathToPullFrom}\");`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `byte[] fileBase64 = driver.pullFolder(\"${folderToPullFrom}\");`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `driver.toggleAirplaneMode();`;\n  }\n\n  codeFor_toggleData () {\n    return `driver.toggleData();`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggleWifi();`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggleLocationServices();`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `driver.sendSMS(\"${phoneNumber}\", \"${text}\");`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.makeGsmCall(\"${phoneNumber}\", \"${action}\");`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.setGsmSignalStrength(\"${signalStrength}\");`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.setGsmVoice(\"${state}\");`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lockDevice(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlockDevice()`;\n  }\n\n  codeFor_isLocked () {\n    return `boolean isLocked = driver.isDeviceLocked();`;\n  }\n\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\n    return `driver.rotate(new DeviceRotation(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration}));`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `List<List<Object>> performanceData = driver.getPerformanceData(\"${packageName}\", \"${dataType}\", ${dataReadTimeout});`;\n  }\n\n  codeFor_getSupportedPerformanceDataTypes () {\n    return `List<String> performanceTypes = driver.getSupportedPerformanceDataTypes();`;\n  }\n\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.performTouchID(${match});`;\n  }\n\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggleTouchIDEnrollment(${enroll});`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.openNotifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `String time = driver.getDeviceTime();`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.fingerPrint(${fingerprintId});`;\n  }\n\n  codeFor_sessionCapabilities () {\n    return `Map<String, Object> caps = driver.getSessionDetails();`;\n  }\n\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `driver.manage().timeouts().pageLoadTimeout(${ms / 1000}, TimeUnit.SECONDS);`;\n  }\n\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `driver.manage().timeouts().setScriptTimeout(${ms / 1000}, TimeUnit.SECONDS);`;\n  }\n\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `driver.manage().timeouts().implicitlyWait(${ms / 1000}, TimeUnit.SECONDS);`;\n  }\n\n  codeFor_getOrientation () {\n    return `ScreenOrientation orientation = driver.getOrientation();`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.rotate(\"${orientation}\");`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `Location location = driver.location();`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.setLocation(new Location(${latitude}, ${longitude}, ${altitude}));`;\n  }\n\n  codeFor_logTypes () {\n    return `Set<String> logTypes = driver.manage().logs().getAvailableLogTypes();`;\n  }\n\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\n    return `LogEntries logEntries = driver.manage().logs().get(\"${logType}\");`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    try {\n      let settings = '';\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\n        settings += `driver.setSetting(\"${settingName}\", \"${settingValue}\");\\n`;\n      }\n      return settings;\n    } catch (e) {\n      return `// Could not parse: ${settingsJson}`;\n    }\n  }\n\n  codeFor_settings () {\n    return `Map<String, Object> settings = driver.getSettings();`;\n  }\n\n  /*\n\n  codeFor_ REPLACE_ME (varNameIgnore, varIndexIgnore) {\n    return `REPLACE_ME`;\n  }\n\n  */\n\n}\n\nJavaFramework.readableName = 'Java - JUnit';\n\nexport default JavaFramework;\n","import Framework from './framework';\n\nclass PythonFramework extends Framework {\n\n  get language () {\n    return 'python';\n  }\n\n  getPythonVal (jsonVal) {\n    if (typeof jsonVal === 'boolean') {\n      return jsonVal ? 'True' : 'False';\n    }\n    return JSON.stringify(jsonVal);\n  }\n\n  wrapWithBoilerplate (code) {\n    let capStr = Object.keys(this.caps).map((k) => {\n      return `caps[${JSON.stringify(k)}] = ${this.getPythonVal(this.caps[k])}`;\n    }).join('\\n');\n    return `# This sample code uses the Appium python client\n# pip install Appium-Python-Client\n# Then you can paste this into a file and simply run with Python\n\nfrom appium import webdriver\n\ncaps = {}\n${capStr}\n\ndriver = webdriver.Remote(\"${this.serverUrl}\", caps)\n\n${code}\ndriver.quit()`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: 'xpath',\n      'accessibility id': 'accessibility_id',\n      'id': 'id',\n      'name': 'name', // TODO: How does Python use name selector\n      'class name': 'class_name',\n      '-android uiautomator': 'android_uiautomator',\n      '-android datamatcher': 'android_datamatcher',\n      '-ios predicate string': 'ios_predicate',\n      '-ios class chain': 'ios_uiautomation', // TODO: Could not find iOS UIAutomation\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `${localVar} = driver.find_elements_by_${suffixMap[strategy]}(${JSON.stringify(locator)})`;\n    } else {\n      return `${localVar} = driver.find_element_by_${suffixMap[strategy]}(${JSON.stringify(locator)})`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click()`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear()`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.send_keys(${JSON.stringify(text)})`;\n  }\n\n  codeFor_back () {\n    return `driver.back()`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\n    return `TouchAction(driver).tap(x=${x}, y=${y}).perform()`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\n    return `TouchAction(driver) \\\n  .press(x=${x1}, y=${y1}) \\\n  .move_to(x=${x2}, y=${y2}) \\\n  .release() \\\n  .perform()\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `activity_name = driver.current_activity`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `package_name = driver.current_package`;\n  }\n\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `driver.install_app('${app}');`;\n  }\n\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `is_app_installed = driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launch_app()`;\n  }\n\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.background_app(${timeout})`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.close_app()`;\n  }\n\n  codeFor_resetApp () {\n    return `driver.reset()`;\n  }\n\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\n    return `driver.remove_app('${app}');`;\n  }\n\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `appStrings = driver.app_strings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''})`;\n  }\n\n  codeFor_getClipboard () {\n    return `clipboard_text = driver.get_clipboard_text()`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.set_clipboard_text('${clipboardText}')`;\n  }\n\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.press_keycode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.long_press_keycode(${keyCode}, ${metaState}, ${flags});`;\n  }\n\n  codeFor_hideDeviceKeyboard () {\n    return `driver.hide_keyboard()`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `# isKeyboardShown not supported`;\n  }\n\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.push_file('${pathToInstallTo}', '${fileContentString}');`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `file_base64 = self.driver.pull_file('${pathToPullFrom}');`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `file_base64 = self.driver.pull_folder('${folderToPullFrom}');`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `# Not supported: toggleAirplaneMode`;\n  }\n\n  codeFor_toggleData () {\n    return `# Not supported: toggleData`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `# Not supported: toggleWifi`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggle_location_services();`;\n  }\n\n  codeFor_sendSMS () {\n    return `# Not supported: sendSMS`;\n  }\n\n  codeFor_gsmCall () {\n    return `# Not supported: gsmCall`;\n  }\n\n  codeFor_gsmSignal () {\n    return `# Not supported: gsmSignal`;\n  }\n\n  codeFor_gsmVoice () {\n    return `# Not supported: gsmVoice`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake();`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lock(${seconds});`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlock();`;\n  }\n\n  codeFor_isLocked () {\n    return `# Not supported: is device locked`;\n  }\n\n  codeFor_rotateDevice () {\n    return `# Not supported: rotate device`;\n  }\n\n  codeFor_getPerformanceData () {\n    return `# Not supported: getPerformanceData`;\n  }\n\n  codeFor_getSupportedPerformanceDataTypes () {\n    return `# Not supported: getSupportedPerformanceDataTypes`;\n  }\n\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.touch_id(${match})`;\n  }\n\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggle_touch_id_enrollment(${enroll})`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.open_notifications();`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `time = self.driver.device_time()`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.finger_print(${fingerprintId})`;\n  }\n\n  codeFor_sessionCapabilities () {\n    return `desired_caps = self.driver.desired_capabilities()`;\n  }\n\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `driver.set_page_load_timeout(${ms})`;\n  }\n\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `driver.timeouts('script', ${ms})`;\n  }\n\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `driver.timeouts('implicit', ${ms})`;\n  }\n\n  codeFor_getOrientation () {\n    return `orientation = self.driver.orientation()`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.orientation = \"${orientation}\"`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `location = self.driver.location()`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.set_location(${latitude}, ${longitude}, ${altitude})`;\n  }\n\n  codeFor_logTypes () {\n    return `log_types = driver.log_types();`;\n  }\n\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\n    return `logs = driver.get_log('${logType}');`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    return `driver.update_settings(${settingsJson}))`;\n  }\n\n  codeFor_settings () {\n    return `settings = driver.get_settings`;\n  }\n}\n\nPythonFramework.readableName = 'Python';\n\nexport default PythonFramework;\n","import Framework from './framework';\nimport _ from 'lodash';\n\nclass RubyFramework extends Framework {\n\n  get language () {\n    return 'ruby';\n  }\n\n  wrapWithBoilerplate (code) {\n    let capStr = Object.keys(this.caps).map((k) => {\n      return `caps[${JSON.stringify(k)}] = ${JSON.stringify(this.caps[k])}`;\n    }).join('\\n');\n    return `# This sample code uses the Appium ruby client\n# gem install appium_lib\n# Then you can paste this into a file and simply run with Ruby\n\nrequire 'rubygems'\nrequire 'appium_lib'\n\ncaps = {}\n${capStr}\nopts = {\n    sauce_username: nil,\n    server_url: \"${this.serverUrl}\"\n}\ndriver = Appium::Driver.new({caps: caps, appium_lib: opts}).start_driver\n\n${code}\ndriver.quit`;\n  }\n\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\n    let suffixMap = {\n      xpath: ':xpath',\n      'accessibility id': ':accessibility_id',\n      'id': ':id',\n      'name': ':name',\n      'class name': ':class_name',\n      '-android uiautomator': ':uiautomation',\n      '-android datamatcher': ':datamatcher',\n      '-ios predicate string': ':predicate',\n      '-ios class chain': ':class_chain',\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    if (isArray) {\n      return `${localVar} = driver.find_element(${suffixMap[strategy]}, ${JSON.stringify(locator)})`;\n    } else {\n      return `${localVar} = driver.find_elements(${suffixMap[strategy]}, ${JSON.stringify(locator)})`;\n    }\n  }\n\n  codeFor_click (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.click`;\n  }\n\n  codeFor_clear (varName, varIndex) {\n    return `${this.getVarName(varName, varIndex)}.clear`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `${this.getVarName(varName, varIndex)}.send_keys ${JSON.stringify(text)}`;\n  }\n\n  codeFor_back () {\n    return `driver.back`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\n    return `TouchAction\n  .new\n  .tap(x: ${x}, y: ${y})\n  .perform\n    `;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\n    return `TouchAction\n  .new\n  .press({x: ${x1}, y: ${y1}})\n  .moveTo({x: ${x2}, y: ${y2}})\n  .release\n  .perform\n    `;\n  }\n\n  codeFor_getCurrentActivity () {\n    return `current_activity = driver.current_activity`;\n  }\n\n  codeFor_getCurrentPackage () {\n    return `current_package = driver.current_package`;\n  }\n\n\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `driver.app_installed?('${app}')`;\n  }\n\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\n    return `is_app_installed = driver.isAppInstalled(\"${app}\");`;\n  }\n\n  codeFor_launchApp () {\n    return `driver.launch_app`;\n  }\n\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\n    return `driver.background_app(${timeout})`;\n  }\n\n  codeFor_closeApp () {\n    return `driver.close_app`;\n  }\n\n  codeFor_resetApp () {\n    return `driver.reset`;\n  }\n\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\n    return `driver.remove_app('${app}')`;\n  }\n\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\n    return `driver.app_strings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''})`;\n  }\n\n  codeFor_getClipboard () {\n    return `clipboard_text = driver.get_clipboard`;\n  }\n\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\n    return `driver.set_clipboard content: '${clipboardText}'`;\n  }\n\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.press_keycode(${keyCode}, ${metaState}, ${flags})`;\n  }\n\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\n    return `driver.long_press_keycode(${keyCode}, ${metaState}, ${flags})`;\n  }\n\n  codeFor_hideDeviceKeyboard () {\n    return `driver.hide_keyboard`;\n  }\n\n  codeFor_isKeyboardShown () {\n    return `is_keyboard_shown = driver.is_keyboard_shown`;\n  }\n\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\n    return `driver.push_file('${pathToInstallTo}', '${fileContentString}')`;\n  }\n\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\n    return `driver.pull_file('${pathToPullFrom}')`;\n  }\n\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\n    return `driver.pull_folder('${folderToPullFrom}')`;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return `driver.toggle_flight_mode`;\n  }\n\n  codeFor_toggleData () {\n    return `driver.toggle_data`;\n  }\n\n  codeFor_toggleWiFi () {\n    return `driver.toggle_wifi`;\n  }\n\n  codeFor_toggleLocationServices () {\n    return `driver.toggle_location_services`;\n  }\n\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\n    return `driver.send_sms(phone_number: '${phoneNumber}', message: '${text}')`;\n  }\n\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\n    return `driver.gsm_call(phone_number: '${phoneNumber}', action: :${action})`;\n  }\n\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\n    return `driver.gsm_signal :${signalStrength}`;\n  }\n\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\n    return `driver.gsm_voice :${state}`;\n  }\n\n  codeFor_shake () {\n    return `driver.shake`;\n  }\n\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\n    return `driver.lock(${seconds})`;\n  }\n\n  codeFor_unlock () {\n    return `driver.unlock`;\n  }\n\n  codeFor_isLocked () {\n    return `is_device_locked = driver.device_locked?`;\n  }\n\n  codeFor_rotateDevice () {\n    return `# Not supported: rotateDevice`;\n  }\n\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\n    return `performance_data = driver.get_performance_data package_name: '${packageName}', data_type: '${dataType}', data_read_timeout: ${dataReadTimeout}`;\n  }\n\n  codeFor_getSupportedPerformanceDataTypes () {\n    return `performance_data = driver.get_performance_data_types`;\n  }\n\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\n    return `driver.touch_id ${match}`;\n  }\n\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\n    return `driver.toggle_touch_id_enrollment ${enroll}`;\n  }\n\n  codeFor_openNotifications () {\n    return `driver.open_notifications`;\n  }\n\n  codeFor_getDeviceTime () {\n    return `device_time = driver.device_time`;\n  }\n\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\n    return `driver.finger_print ${fingerprintId}`;\n  }\n\n  codeFor_sessionCapabilities () {\n    return `session_capabilities = driver.session_capabilities`;\n  }\n\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `driver.timeout('pageLoad', ${ms})`;\n  }\n\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `driver.timeout('script', ${ms})`;\n  }\n\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\n    return `driver.timeout('implicit', ${ms})`;\n  }\n\n  codeFor_getOrientation () {\n    return `orientation = driver.orientation`;\n  }\n\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\n    return `driver.rotation = :${orientation}`;\n  }\n\n  codeFor_getGeoLocation () {\n    return `geo_location = driver.location`;\n  }\n\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\n    return `driver.set_location(${latitude}, ${longitude}, ${altitude})`;\n  }\n\n  codeFor_logTypes () {\n    return `log_types = driver.logs.available_types`;\n  }\n\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\n    return `driver.logs.get '${logType}'`;\n  }\n\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\n    try {\n      let settings = '';\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\n        settings += `driver.update_settings(${settingName}: '${settingValue}')\\n`;\n      }\n      return settings;\n    } catch (e) {\n      return `// Could not parse: ${settingsJson}`;\n    }\n  }\n\n  codeFor_settings () {\n    return `settings = driver.get_settings`;\n  }\n}\n\nRubyFramework.readableName = 'Ruby';\n\nexport default RubyFramework;\n","/* eslint no-useless-escape: 0 */\n\nimport Framework from './framework';\n\nclass RobotFramework extends Framework {\n\n  get language () {\n    //TODO: Make https://highlightjs.org/ use robot syntax\n    return 'python';\n  }\n\n  get getCapsVariables () {\n    return Object.keys(this.caps).map((k) => {\n      return `\\$\\{${k}\\}    ${this.getPythonVal(this.caps[k])}`;\n    }).join('\\n');\n  }\n\n  getPythonVal (jsonVal) {\n    if (typeof jsonVal === 'boolean') {\n      return jsonVal ? 'True' : 'False';\n    }\n    return jsonVal;\n  }\n\n  wrapWithBoilerplate (code) {\n    return `# This sample code uses the Appium robot client\n# pip install robotframework-appiumlibrary\n# Then you can paste this into a file and simply run with robot\n#\n#  more keywords on: http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html\n\n*** Settings ***\nLibrary           AppiumLibrary\n\n*** Variables ***\n$\\{REMOTE_URL\\}   ${this.serverUrl}\n${this.getCapsVariables}\n\n*** Test Cases ***\nTest case name\n${this.indent(this.getApplicationInitialization(), 4)}\n${this.indent(code, 4)}\n\n*** Test Teardown ***\n    Quit Application\n\n*** Suite Teardown ***\n    Close Application`;\n  }\n\n  codeFor_findAndAssign (strategy, locator/*, localVar, isArray*/) {\n    let suffixMap = {\n      xpath: 'xpath',\n      'accessibility id': 'accessibility_id',\n      'id': 'id',\n      'name': 'name', // TODO: How does Python use name selector\n      'class name': 'class_name',\n      '-android uiautomator': 'unsupported',\n      '-android datamatcher': 'unsupported',\n      '-ios predicate string': 'ios_predicate',\n      '-ios class chain': 'ios_uiautomation', // TODO: Could not find iOS UIAutomation\n    };\n    if (!suffixMap[strategy]) {\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\n    }\n    //TODO: in the robot case, we need the ID on the codeFor_ for execution\n    this.lastID = `${strategy}=${locator}`;\n    return `# ${this.lastID}`;\n  }\n\n  getApplicationInitialization () {\n    let varString = Object.keys(this.caps).map((k) => {\n      return `${k}=\\$\\{${k}\\}`;\n    }).join('  ');\n    return `Open Application    \\$\\{REMOTE_URL\\}   ${varString}`;\n  }\n\n  codeFor_click (/*varName, varIndex*/) {\n    return `Click Element    ${this.lastID}`;\n  }\n\n  codeFor_clear (/*varName, varIndex*/) {\n    return `Clear Text    ${this.lastID}`;\n  }\n\n  codeFor_sendKeys (varName, varIndex, text) {\n    return `Input Text    ${this.lastID}    ${text}`;\n  }\n\n  codeFor_back () {\n    return `Go Back`;\n  }\n\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\n    return `Tap    ${this.lastID}    ${x}    ${y}`;\n  }\n\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\n    return `Swipe    ${x1}    ${y1}    ${x2}    ${y2}`;\n  }\n\n  // TODO: Add these robot framework commands\n  codeFor_getCurrentActivity () {\n    return '';\n  }\n\n  codeFor_getCurrentPackage () {\n    return '';\n  }\n\n  codeFor_installAppOnDevice () {\n    return ``;\n  }\n\n  codeFor_isAppInstalledOnDevice () {\n    return ``;\n  }\n\n  codeFor_launchApp () {\n    return ``;\n  }\n\n  codeFor_backgroundApp () {\n    return ``;\n  }\n\n  codeFor_closeApp () {\n    return ``;\n  }\n\n  codeFor_resetApp () {\n    return ``;\n  }\n\n  codeFor_removeAppFromDevice () {\n    return ``;\n  }\n\n  codeFor_getAppStrings () {\n    return ``;\n  }\n\n  codeFor_getClipboard () {\n    return ``;\n  }\n\n  codeFor_setClipboard () {\n    return ``;\n  }\n\n  codeFor_pressKeycode () {\n    return ``;\n  }\n\n  codeFor_longPressKeycode () {\n    return ``;\n  }\n\n  codeFor_hideDeviceKeyboard () {\n    return ``;\n  }\n\n  codeFor_isKeyboardShown () {\n    return ``;\n  }\n\n  codeFor_pushFileToDevice () {\n    return ``;\n  }\n\n  codeFor_pullFile () {\n    return ``;\n  }\n\n  codeFor_pullFolder () {\n    return ``;\n  }\n\n  codeFor_toggleAirplaneMode () {\n    return ``;\n  }\n\n  codeFor_toggleData () {\n    return ``;\n  }\n\n  codeFor_toggleWiFi () {\n    return ``;\n  }\n\n  codeFor_toggleLocationServices () {\n    return ``;\n  }\n\n  codeFor_sendSMS () {\n    return ``;\n  }\n\n  codeFor_gsmCall () {\n    return ``;\n  }\n\n  codeFor_gsmSignal () {\n    return ``;\n  }\n\n  codeFor_gsmVoice () {\n    return ``;\n  }\n\n  codeFor_shake () {\n    return ``;\n  }\n\n  codeFor_lock () {\n    return ``;\n  }\n\n  codeFor_unlock () {\n    return ``;\n  }\n\n  codeFor_isLocked () {\n    return ``;\n  }\n\n  codeFor_rotateDevice () {\n    return ``;\n  }\n\n  codeFor_getPerformanceData () {\n    return ``;\n  }\n\n  codeFor_getSupportedPerformanceDataTypes () {\n    return ``;\n  }\n\n  codeFor_performTouchId () {\n    return ``;\n  }\n\n  codeFor_toggleTouchIdEnrollment () {\n    return ``;\n  }\n\n  codeFor_openNotifications () {\n    return ``;\n  }\n\n  codeFor_getDeviceTime () {\n    return ``;\n  }\n\n  codeFor_fingerprint () {\n    return ``;\n  }\n\n  codeFor_sessionCapabilities () {\n    return ``;\n  }\n\n  codeFor_setPageLoadTimeout () {\n    return ``;\n  }\n\n  codeFor_setAsyncScriptTimeout () {\n    return ``;\n  }\n\n  codeFor_setImplicitWaitTimeout () {\n    return ``;\n  }\n\n  codeFor_setCommandTimeout () {\n    return ``;\n  }\n\n  codeFor_getOrientation () {\n    return ``;\n  }\n\n  codeFor_setOrientation () {\n    return ``;\n  }\n\n  codeFor_getGeoLocation () {\n    return ``;\n  }\n\n  codeFor_setGeoLocation () {\n    return ``;\n  }\n\n  codeFor_logTypes () {\n    return ``;\n  }\n\n  codeFor_log () {\n    return ``;\n  }\n\n  codeFor_updateSettings () {\n    return ``;\n  }\n\n  codeFor_settings () {\n    return ``;\n  }\n}\n\nRobotFramework.readableName = 'Robot Framework';\n\nexport default RobotFramework;\n","import JsWdFramework from './js-wd';\nimport JsWdIoFramework from './js-wdio';\nimport JavaFramework from './java';\nimport PythonFramework from './python';\nimport RubyFramework from './ruby';\nimport RobotFramework from './robot';\n\nconst frameworks = {\n  jsWd: JsWdFramework,\n  jsWdIo: JsWdIoFramework,\n  java: JavaFramework,\n  python: PythonFramework,\n  ruby: RubyFramework,\n  robot: RobotFramework,\n};\n\nexport default frameworks;\n","import { ipcRenderer } from 'electron';\nimport { notification } from 'antd';\nimport { push } from 'connected-react-router';\nimport _ from 'lodash';\nimport B from 'bluebird';\nimport { getLocators } from '../components/Inspector/shared';\nimport { showError } from './Session';\nimport { bindClient, unbindClient, callClientMethod } from './shared';\nimport { getOptimalXPath } from '../util';\nimport frameworks from '../lib/client-frameworks';\nimport settings from '../../shared/settings';\nimport i18n from '../../configs/i18next.config.renderer';\n\nexport const SET_SESSION_DETAILS = 'SET_SESSION_DETAILS';\nexport const SET_SOURCE_AND_SCREENSHOT = 'SET_SOURCE_AND_SCREENSHOT';\nexport const SESSION_DONE = 'SESSION_DONE';\nexport const SELECT_ELEMENT = 'SELECT_ELEMENT';\nexport const UNSELECT_ELEMENT = 'UNSELECT_ELEMENT';\nexport const SET_SELECTED_ELEMENT_ID = 'SET_SELECTED_ELEMENT_ID';\nexport const SET_INTERACTIONS_NOT_AVAILABLE = 'SET_INTERACTIONS_NOT_AVAILABLE';\nexport const METHOD_CALL_REQUESTED = 'METHOD_CALL_REQUESTED';\nexport const METHOD_CALL_DONE = 'METHOD_CALL_DONE';\nexport const SET_FIELD_VALUE = 'SET_FIELD_VALUE';\nexport const SET_EXPANDED_PATHS = 'SET_EXPANDED_PATHS';\nexport const SELECT_HOVERED_ELEMENT = 'SELECT_HOVERED_ELEMENT';\nexport const UNSELECT_HOVERED_ELEMENT = 'UNSELECT_HOVERED_ELEMENT';\nexport const SHOW_SEND_KEYS_MODAL = 'SHOW_SEND_KEYS_MODAL';\nexport const HIDE_SEND_KEYS_MODAL = 'HIDE_SEND_KEYS_MODAL';\nexport const QUIT_SESSION_REQUESTED = 'QUIT_SESSION_REQUESTED';\nexport const QUIT_SESSION_DONE = 'QUIT_SESSION_DONE';\n\nexport const START_RECORDING = 'START_RECORDING';\nexport const PAUSE_RECORDING = 'PAUSE_RECORDING';\nexport const CLEAR_RECORDING = 'CLEAR_RECORDING';\nexport const CLOSE_RECORDER = 'CLOSE_RECORDER';\nexport const SET_ACTION_FRAMEWORK = 'SET_ACTION_FRAMEWORK';\nexport const SAVED_FRAMEWORK = 'SAVED_FRAMEWORK';\nexport const RECORD_ACTION = 'RECORD_ACTION';\nexport const SET_SHOW_BOILERPLATE = 'SET_SHOW_BOILERPLATE';\n\nexport const SHOW_LOCATOR_TEST_MODAL = 'SHOW_LOCATOR_TEST_MODAL';\nexport const HIDE_LOCATOR_TEST_MODAL = 'HIDE_LOCATOR_TEST_MODAL';\nexport const SET_LOCATOR_TEST_STRATEGY = 'SET_LOCATOR_TEST_STRATEGY';\nexport const SET_LOCATOR_TEST_VALUE = 'SET_LOCATOR_TEST_VALUE';\nexport const SEARCHING_FOR_ELEMENTS = 'SEARCHING_FOR_ELEMENTS';\nexport const SEARCHING_FOR_ELEMENTS_COMPLETED = 'SEARCHING_FOR_ELEMENTS_COMPLETED';\nexport const SET_LOCATOR_TEST_ELEMENT = 'SET_LOCATOR_TEST_ELEMENT';\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\nexport const ADD_ASSIGNED_VAR_CACHE = 'ADD_ASSIGNED_VAR_CACHE';\nexport const CLEAR_ASSIGNED_VAR_CACHE = 'CLEAR_ASSIGNED_VAR_CACHE';\nexport const SET_SCREENSHOT_INTERACTION_MODE = 'SET_SCREENSHOT_INTERACTION_MODE';\nexport const SET_SEARCHED_FOR_ELEMENT_BOUNDS = 'SET_SEARCHED_FOR_ELEMENT_BOUNDS';\nexport const CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS = 'CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS';\n\nexport const SET_SWIPE_START = 'SET_SWIPE_START';\nexport const SET_SWIPE_END = 'SET_SWIPE_END';\nexport const CLEAR_SWIPE_ACTION = 'CLEAR_SWIPE_ACTION';\nexport const PROMPT_KEEP_ALIVE = 'PROMPT_KEEP_ALIVE';\nexport const HIDE_PROMPT_KEEP_ALIVE = 'HIDE_PROMPT_KEEP_ALIVE';\n\nexport const SELECT_INTERACTION_MODE = 'SELECT_INTERACTION_MODE';\n\nexport const SELECT_ACTION_GROUP = 'SELECT_ACTION_GROUP';\nexport const SELECT_SUB_ACTION_GROUP = 'SELECT_SUB_ACTION_GROUP';\n\nexport const ENTERING_ACTION_ARGS = 'ENTERING_ACTION_ARGS';\nexport const REMOVE_ACTION = 'REMOVE_ACTION';\nexport const SET_ACTION_ARG = 'SET_ACTION_ARG';\n\n\n// Attributes on nodes that we know are unique to the node\nconst uniqueAttributes = [\n  'name',\n  'content-desc',\n  'id',\n  'accessibility-id',\n];\n\n/**\n * Translates sourceXML to JSON\n */\nfunction xmlToJSON (source) {\n  let xmlDoc;\n\n  // Replace strings with Unicode format &#012345 with #012345\n  // The &# unicode format breaks the parser\n  source = source.replace(/&#([0-9]{4,})/g, '#$1');\n\n  let recursive = (xmlNode, parentPath, index) => {\n\n    // Translate attributes array to an object\n    let attrObject = {};\n    for (let attribute of xmlNode.attributes || []) {\n      attrObject[attribute.name] = attribute.value;\n    }\n\n    // Dot Separated path of indices\n    let path = (index !== undefined) && `${!parentPath ? '' : parentPath + '.'}${index}`;\n\n    return {\n      children: [...xmlNode.children].map((childNode, childIndex) => recursive(childNode, path, childIndex)),\n      tagName: xmlNode.tagName,\n      attributes: attrObject,\n      xpath: getOptimalXPath(xmlDoc, xmlNode, uniqueAttributes),\n      path,\n    };\n  };\n  xmlDoc = (new DOMParser()).parseFromString(source, 'application/xml');\n  let sourceXML = xmlDoc.children[0];\n  return recursive(sourceXML);\n}\n\n\nexport function bindAppium () {\n  return (dispatch) => {\n    // Listen for session response messages from 'main'\n    bindClient();\n\n    // If user is inactive ask if they wish to keep session alive\n    ipcRenderer.on('appium-prompt-keep-alive', () => {\n      promptKeepAlive()(dispatch);\n    });\n\n    // When session is done, unbind them all\n    ipcRenderer.on('appium-session-done', (evt, {reason, killedByUser}) => {\n      ipcRenderer.removeAllListeners('appium-session-done');\n      ipcRenderer.removeAllListeners('appium-prompt-keep-alive');\n      unbindClient();\n      dispatch({type: QUIT_SESSION_DONE});\n      dispatch(push('/session'));\n      if (!killedByUser) {\n        notification.error({\n          message: 'Error',\n          description: reason || i18n.t('Session has been terminated'),\n          duration: 0\n        });\n      }\n    });\n  };\n}\n\n// A debounced function that calls findElement and gets info about the element\nconst findElement = _.debounce(async function (strategyMap, dispatch, getState, path) {\n  for (let [strategy, selector] of strategyMap) {\n    // Get the information about the element\n    let {elementId, variableName, variableType} = await callClientMethod({\n      strategy,\n      selector,\n    });\n\n    // Set the elementId, variableName and variableType for the selected element\n    // (check first that the selectedElementPath didn't change, to avoid race conditions)\n    if (elementId && getState().inspector.selectedElementPath === path) {\n      return dispatch({type: SET_SELECTED_ELEMENT_ID, elementId, variableName, variableType});\n    }\n  }\n\n  return dispatch({type: SET_INTERACTIONS_NOT_AVAILABLE});\n}, 1000);\n\nexport function selectElement (path) {\n  return async (dispatch, getState) => {\n    // Set the selected element in the source tree\n    dispatch({type: SELECT_ELEMENT, path});\n    const state = getState().inspector;\n    const {attributes: selectedElementAttributes, xpath: selectedElementXPath} = state.selectedElement;\n    const {sourceXML} = state;\n\n    // Expand all of this element's ancestors so that it's visible in the source tree\n    let {expandedPaths} = getState().inspector;\n    let pathArr = path.split('.').slice(0, path.length - 1);\n    while (pathArr.length > 1) {\n      pathArr.splice(pathArr.length - 1);\n      let path = pathArr.join('.');\n      if (expandedPaths.indexOf(path) < 0) {\n        expandedPaths.push(path);\n      }\n    }\n    dispatch({type: SET_EXPANDED_PATHS, paths: expandedPaths});\n\n\n    // Find the optimal selection strategy. If none found, fall back to XPath.\n    const strategyMap = _.toPairs(getLocators(selectedElementAttributes, sourceXML));\n    strategyMap.push(['xpath', selectedElementXPath]);\n\n    // Debounce find element so that if another element is selected shortly after, cancel the previous search\n    await findElement(strategyMap, dispatch, getState, path);\n  };\n}\n\nexport function unselectElement () {\n  return (dispatch) => {\n    dispatch({type: UNSELECT_ELEMENT});\n  };\n}\n\nexport function selectHoveredElement (path) {\n  return (dispatch) => {\n    dispatch({type: SELECT_HOVERED_ELEMENT, path});\n  };\n}\n\nexport function unselectHoveredElement (path) {\n  return (dispatch) => {\n    dispatch({type: UNSELECT_HOVERED_ELEMENT, path});\n  };\n}\n\n/**\n * Requests a method call on appium\n */\nexport function applyClientMethod (params) {\n  return async (dispatch, getState) => {\n    const isRecording = params.methodName !== 'quit' &&\n                      params.methodName !== 'source' &&\n                      getState().inspector.isRecording;\n    try {\n      dispatch({type: METHOD_CALL_REQUESTED});\n      const {source, screenshot, windowSize, result, sourceError,\n             screenshotError, windowSizeError, variableName,\n             variableIndex, strategy, selector} = await callClientMethod(params);\n\n      if (isRecording) {\n        // Add 'findAndAssign' line of code. Don't do it for arrays though. Arrays already have 'find' expression\n        if (strategy && selector && !variableIndex && variableIndex !== 0) {\n          findAndAssign(strategy, selector, variableName, false)(dispatch, getState);\n        }\n\n        // now record the actual action\n        let args = [variableName, variableIndex];\n        args = args.concat(params.args || []);\n        dispatch({type: RECORD_ACTION, action: params.methodName, params: args });\n      }\n      dispatch({type: METHOD_CALL_DONE});\n\n      if (source && screenshot) {\n        dispatch({\n          type: SET_SOURCE_AND_SCREENSHOT,\n          source: source && xmlToJSON(source),\n          sourceXML: source,\n          screenshot,\n          windowSize,\n          sourceError,\n          screenshotError,\n          windowSizeError,\n        });\n      }\n      return result;\n    } catch (error) {\n      let methodName = params.methodName === 'click' ? 'tap' : params.methodName;\n      showError(error, methodName, 10);\n      dispatch({type: METHOD_CALL_DONE});\n    }\n  };\n}\n\nexport function addAssignedVarCache (varName) {\n  return (dispatch) => {\n    dispatch({type: ADD_ASSIGNED_VAR_CACHE, varName});\n  };\n}\n\nexport function showSendKeysModal () {\n  return (dispatch) => {\n    dispatch({type: SHOW_SEND_KEYS_MODAL});\n  };\n}\n\nexport function hideSendKeysModal () {\n  return (dispatch) => {\n    dispatch({type: HIDE_SEND_KEYS_MODAL});\n  };\n}\n\n/**\n * Set a value of an arbitrarily named field\n */\nexport function setFieldValue (name, value) {\n  return (dispatch) => {\n    dispatch({type: SET_FIELD_VALUE, name, value});\n  };\n}\n\nexport function setExpandedPaths (paths) {\n  return (dispatch) => {\n    dispatch({type: SET_EXPANDED_PATHS, paths});\n  };\n}\n\n/**\n * Quit the session and go back to the new session window\n */\nexport function quitSession () {\n  return async (dispatch) => {\n    await applyClientMethod({methodName: 'quit'})(dispatch);\n  };\n}\n\nexport function startRecording () {\n  return (dispatch) => {\n    dispatch({type: START_RECORDING});\n  };\n}\n\nexport function pauseRecording () {\n  return (dispatch) => {\n    dispatch({type: PAUSE_RECORDING});\n  };\n}\n\nexport function clearRecording () {\n  return (dispatch) => {\n    dispatch({type: CLEAR_RECORDING});\n    ipcRenderer.send('appium-restart-recorder'); // Tell the main thread to start the variable count from 1\n    dispatch({type: CLEAR_ASSIGNED_VAR_CACHE}); // Get rid of the variable cache\n  };\n}\n\nexport function getSavedActionFramework () {\n  return async (dispatch) => {\n    let framework = await settings.get(SAVED_FRAMEWORK);\n    dispatch({type: SET_ACTION_FRAMEWORK, framework});\n  };\n}\n\nexport function setActionFramework (framework) {\n  return async (dispatch) => {\n    if (!frameworks[framework]) {\n      throw new Error(i18n.t('frameworkNotSupported', {framework}));\n    }\n    await settings.set(SAVED_FRAMEWORK, framework);\n    dispatch({type: SET_ACTION_FRAMEWORK, framework});\n  };\n}\n\nexport function recordAction (action, params) {\n  return (dispatch) => {\n    dispatch({type: RECORD_ACTION, action, params});\n  };\n}\n\nexport function closeRecorder () {\n  return (dispatch) => {\n    dispatch({type: CLOSE_RECORDER});\n  };\n}\n\nexport function toggleShowBoilerplate () {\n  return (dispatch, getState) => {\n    const show = !getState().inspector.showBoilerplate;\n    dispatch({type: SET_SHOW_BOILERPLATE, show});\n  };\n}\n\nexport function setSessionDetails (sessionDetails) {\n  return (dispatch) => {\n    dispatch({type: SET_SESSION_DETAILS, sessionDetails});\n  };\n}\n\nexport function showLocatorTestModal () {\n  return (dispatch) => {\n    dispatch({type: SHOW_LOCATOR_TEST_MODAL});\n  };\n}\n\nexport function hideLocatorTestModal () {\n  return (dispatch) => {\n    dispatch({type: HIDE_LOCATOR_TEST_MODAL});\n    dispatch({type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS});\n  };\n}\n\nexport function setLocatorTestValue (locatorTestValue) {\n  return (dispatch) => {\n    dispatch({type: SET_LOCATOR_TEST_VALUE, locatorTestValue});\n  };\n}\n\nexport function setLocatorTestStrategy (locatorTestStrategy) {\n  return (dispatch) => {\n    dispatch({type: SET_LOCATOR_TEST_STRATEGY, locatorTestStrategy});\n  };\n}\n\nexport function searchForElement (strategy, selector) {\n  return async (dispatch, getState) => {\n    dispatch({type: SEARCHING_FOR_ELEMENTS});\n    try {\n      let {elements, variableName} = await callClientMethod({strategy, selector, fetchArray: true});\n      findAndAssign(strategy, selector, variableName, true)(dispatch, getState);\n      elements = elements.map((el) => el.id);\n      dispatch({type: SEARCHING_FOR_ELEMENTS_COMPLETED, elements});\n    } catch (error) {\n      dispatch({type: SEARCHING_FOR_ELEMENTS_COMPLETED});\n      showError(error, 10);\n    }\n  };\n}\n\nexport function findAndAssign (strategy, selector, variableName, isArray) {\n  return (dispatch, getState) => {\n    const {assignedVarCache} = getState().inspector;\n\n    // If this call to 'findAndAssign' for this variable wasn't done already, do it now\n    if (!assignedVarCache[variableName]) {\n      dispatch({type: RECORD_ACTION, action: 'findAndAssign', params: [strategy, selector, variableName, isArray]});\n      dispatch({type: ADD_ASSIGNED_VAR_CACHE, varName: variableName});\n    }\n  };\n}\n\nexport function setLocatorTestElement (elementId) {\n  return async (dispatch) => {\n    dispatch({type: SET_LOCATOR_TEST_ELEMENT, elementId});\n    dispatch({type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS});\n    if (elementId) {\n      try {\n        const [location, size] = await (B.all([\n          callClientMethod({methodName: 'getLocation', args: [elementId], skipScreenshotAndSource: true, skipRecord: true, ignoreResult: true}),\n          callClientMethod({methodName: 'getSize', args: [elementId], skipScreenshotAndSource: true, skipRecord: true, ignoreResult: true}),\n        ]));\n        dispatch({type: SET_SEARCHED_FOR_ELEMENT_BOUNDS, location: location.res, size: size.res});\n      } catch (ign) { }\n    }\n  };\n}\n\nexport function clearSearchResults () {\n  return (dispatch) => {\n    dispatch({type: CLEAR_SEARCH_RESULTS});\n  };\n}\n\nexport function selectScreenshotInteractionMode (screenshotInteractionMode) {\n  return (dispatch) => {\n    dispatch({type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode });\n  };\n}\n\nexport function setSwipeStart (swipeStartX, swipeStartY) {\n  return (dispatch) => {\n    dispatch({type: SET_SWIPE_START, swipeStartX, swipeStartY});\n  };\n}\n\nexport function setSwipeEnd (swipeEndX, swipeEndY) {\n  return (dispatch) => {\n    dispatch({type: SET_SWIPE_END, swipeEndX, swipeEndY});\n  };\n}\n\nexport function clearSwipeAction () {\n  return (dispatch) => {\n    dispatch({type: CLEAR_SWIPE_ACTION});\n  };\n}\n\nexport function promptKeepAlive () {\n  return (dispatch) => {\n    dispatch({type: PROMPT_KEEP_ALIVE});\n  };\n}\n\nexport function keepSessionAlive () {\n  return (dispatch) => {\n    dispatch({type: HIDE_PROMPT_KEEP_ALIVE});\n    ipcRenderer.send('appium-keep-session-alive');\n  };\n}\n\nexport function selectActionGroup (group) {\n  return (dispatch) => {\n    dispatch({type: SELECT_ACTION_GROUP, group});\n  };\n}\n\nexport function selectSubActionGroup (group) {\n  return (dispatch) => {\n    dispatch({type: SELECT_SUB_ACTION_GROUP, group});\n  };\n}\n\nexport function selectInteractionMode (interaction) {\n  return (dispatch) => {\n    dispatch({type: SELECT_INTERACTION_MODE, interaction});\n  };\n}\n\nexport function startEnteringActionArgs (actionName, action) {\n  return (dispatch) => {\n    dispatch({type: ENTERING_ACTION_ARGS, actionName, action});\n  };\n}\n\nexport function cancelPendingAction () {\n  return (dispatch) => {\n    dispatch({type: REMOVE_ACTION});\n  };\n}\n\nexport function setActionArg (index, value) {\n  return (dispatch) => {\n    dispatch({type: SET_ACTION_ARG, index, value});\n  };\n}\n","import React, { Component } from 'react';\nimport { Form, Input, Radio, Row, Col } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabTestobject extends Component {\n\n  render () {\n\n    const {server, setServerParam, t} = this.props;\n\n    const placeholder = process.env.TESTOBJECT_API_KEY ?\n      t('usingDataFoundIn', {environmentVariable: 'TESTOBJECT_API_KEY'}) : t('testobjectApiKey');\n\n    return <Form>\n      <Row gutter={8}>\n        <Col span={24}>\n          <FormItem>\n            <Input id='testObjectPassword' type='password' placeholder={placeholder} addonBefore={t('TestObject API Key')} value={server.testobject.apiKey} onChange={(e) => setServerParam('apiKey', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={24}>\n          <FormItem>\n            <div className={['ant-input-group-addon', SessionStyles.addonDataCenter].join(' ') }>{t('TestObject Data Center')}</div>\n            <Radio.Group className={SessionStyles.inputDataCenter} buttonStyle=\"solid\" defaultValue='us1' id='testObjectDataCenter' value={server.testobject.dataCenter} onChange={(e) => setServerParam('dataCenter', e.target.value)}>\n              <Radio value='us1'>{t('US')}</Radio>\n              <Radio value='eu1'>{t('EU')}</Radio>\n            </Radio.Group>\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabHeadspin extends Component {\n\n  render () {\n\n    const {server, setServerParam, t} = this.props;\n\n    const headspinUrl = 'https://xxxx.headspin.io:4723/v0/your-api-token/wd/hub';\n    return <Form>\n      <Row gutter={8}>\n        <Col span={24}>\n          <FormItem>\n            <Input className={SessionStyles.customServerInputLeft} id='headspinServerHost' placeholder={headspinUrl} addonBefore={t('serverTabHeasdpinWebDriverURL')}\n              value={server.headspin.webDriverUrl} onChange={(e) => setServerParam('webDriverUrl', e.target.value)} />\n            <p className={SessionStyles.localDesc}>{t('sessionHeadspinWebDriverURLDescription')}</p>\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Input, Row, Col } from 'antd';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabBrowserstack extends Component {\n\n  render () {\n\n    const {server, setServerParam, t} = this.props;\n\n    const browserstackUsernamePlaceholder = process.env.BROWSERSTACK_USERNAME ?\n      t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_USERNAME'}) : t('yourUsername');\n\n    const browserstackAccessKeyPlaceholder = process.env.BROWSERSTACK_ACCESS_KEY ?\n      t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_ACCESS_KEY'}) : t('yourAccessKey');\n\n    return <Form>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='browserstackUsername' placeholder={browserstackUsernamePlaceholder} addonBefore={t('BrowserStack Username')} value={server.browserstack.username}\n              onChange={(e) => setServerParam('username', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='browserstackPassword' type='password' placeholder={browserstackAccessKeyPlaceholder} addonBefore={t('BrowserStack Access Key')}\n              value={server.browserstack.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Input, Row, Col } from 'antd';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabBitbar extends Component {\n\n  render () {\n    const { server, setServerParam, t } = this.props;\n\n    const bitbarApiKeyPlaceholder = process.env.BITBAR_API_KEY ?\n      t('usingDataFoundIn', {environmentVariable: 'BITBAR_API_KEY'}) : t('yourApiKey');\n\n    return <Form>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='bitbarApiKey' type='password' placeholder={bitbarApiKeyPlaceholder} addonBefore={t('Bitbar API Key')}\n              value={server.bitbar.apiKey} onChange={(e) => setServerParam('apiKey', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Input, Row, Col } from 'antd';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabKobiton extends Component {\n\n  render () {\n    const {server, setServerParam, t} = this.props;\n    const kobitonUsernamePlaceholder = process.env.KOBITON_USERNAME ?\n      t('usingDataFoundIn', {environmentVariable: 'KOBITON_USERNAME'}) : t('yourUsername');\n\n    const kobitonAccessKeyPlaceholder = process.env.KOBITON_ACCESS_KEY ?\n      t('usingDataFoundIn', {environmentVariable: 'KOBITON_ACCESS_KEY'}) : t('yourAccessKey');\n\n    return <Form>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='kobitonUsername' placeholder={kobitonUsernamePlaceholder} addonBefore={t('Kobiton Username')} value={server.kobiton.username}\n              onChange={(e) => setServerParam('username', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='kobitonAccessKey' type='password' placeholder={kobitonAccessKeyPlaceholder} addonBefore={t('Kobiton Access Key')} value={server.kobiton.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabPerfecto extends Component {\n\n  render () {\n\n    const {server, setServerParam, t} = this.props;\n\n    const cloudPerfectoUrl = 'cloud.Perfectomobile.com';\n\n    const perfectoTokenPlaceholder = process.env.PERFECTO_TOKEN ?\n      t('usingDataFoundIn', {environmentVariable: 'PERFECTO_TOKEN'}) : t('Add your token');\n\n    return <Form>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input className={SessionStyles.customServerInputLeft} id='PerfectoServerHost' placeholder={cloudPerfectoUrl} addonBefore={t('Perfecto Host')}\n              value={server.perfecto.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\n          </FormItem>\n        </Col>\n        <Col span={12}>\n          <FormItem>\n            <Input id='PerfectoPort' placeholder={80} addonBefore={t('Perfecto Port')} value={server.perfecto.port}\n              onChange={(e) => setServerParam('port', e.target.value)} />\n          </FormItem>\n        </Col>\n        <Col span={24}>\n          <FormItem>\n            <Input id='token' placeholder={perfectoTokenPlaceholder} addonBefore={t('Perfecto Token')} value={server.perfecto.token} onChange={(e) => setServerParam('token', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Row, Col, Input } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabPcloudy extends Component {\n\n  render () {\n\n    const {server, setServerParam, t} = this.props;\n\n    const pcloudyUsernamePlaceholder = 'username@pcloudy.com';\n    const pcloudyHostPlaceholder = 'cloud.pcloudy.com';\n    const pcloudyAccessKeyExample = 'kjdgtdwn65fdasd78uy6y';\n\n    return <Form>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input className={SessionStyles.customServerInputLeft} id='PcloudyServerHost' placeholder={pcloudyHostPlaceholder} addonBefore={t('Pcloudy Host')}\n              value={server.pcloudy.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='username' type='text' placeholder={pcloudyUsernamePlaceholder} addonBefore={t('Pcloudy User Name')} value={server.pcloudy.username} onChange={(e) => setServerParam('username', e.target.value)} />\n          </FormItem>\n        </Col>\n        <Col span={12}>\n          <FormItem>\n            <Input id='accessKey' type='password' placeholder={pcloudyAccessKeyExample} addonBefore={t('Pcloudy API Key')}\n              value={server.pcloudy.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Row, Col, Input, Checkbox, Radio } from 'antd';\nimport SessionStyles from './Session.css';\nconst FormItem = Form.Item;\n\nexport default class ServerTabSauce extends Component {\n\n  render () {\n\n    const {server, setServerParam, t} = this.props;\n\n    const sauceUsernamePlaceholder = process.env.SAUCE_USERNAME ?\n      t('usingDataFoundIn', {environmentVariable: 'SAUCE_USERNAME'}) : t('yourUsername');\n\n    const sauceAccessKeyPlaceholder = process.env.SAUCE_ACCESS_KEY ?\n      t('usingDataFoundIn', {environmentVariable: 'SAUCE_ACCESS_KEY'}) : t('yourAccessKey');\n\n    return <Form>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='sauceUsername' placeholder={sauceUsernamePlaceholder} addonBefore={t('Sauce Username')} value={server.sauce.username} onChange={(e) => setServerParam('username', e.target.value)} />\n          </FormItem>\n        </Col>\n        <Col span={12}>\n          <FormItem>\n            <Input id='saucePassword' type='password' placeholder={sauceAccessKeyPlaceholder}\n              addonBefore={t('Sauce Access Key')} value={server.sauce.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={24}>\n          <FormItem>\n            <div className={['ant-input-group-addon', SessionStyles.addonDataCenter].join(' ') }>{t('SauceLabs Data Center')}</div>\n            <Radio.Group className={SessionStyles.inputDataCenter} buttonStyle=\"solid\" defaultValue='us-west-1' id='sauceObjectDataCenter' value={server.sauce.dataCenter} onChange={(e) => setServerParam('dataCenter', e.target.value)}>\n              <Radio value='us-west-1'>{t('US')}</Radio>\n              <Radio value='eu-central-1'>{t('EU')}</Radio>\n            </Radio.Group>\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={10}>\n          <FormItem>\n            <Checkbox checked={!!server.sauce.useSCProxy} onChange={(e) => setServerParam('useSCProxy', e.target.checked)}> {t('proxyThroughSC')}</Checkbox>\n          </FormItem>\n        </Col>\n        <Col span={6}>\n          <FormItem>\n            <Input addonBefore={t('Host')} placeholder={t('localhost')} disabled={!server.sauce.useSCProxy} value={server.sauce.scHost} onChange={(e) => setServerParam('scHost', e.target.value)}/>\n          </FormItem>\n        </Col>\n        <Col span={6}>\n          <FormItem>\n            <Input addonBefore={t('Port')} placeholder={4445} disabled={!server.sauce.useSCProxy} value={server.sauce.scPort} onChange={(e) => setServerParam('scPort', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n\n","import React, { Component } from 'react';\nimport { Form, Input, Row, Col } from 'antd';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabTestingbot extends Component {\n\n  render () {\n\n    const {server, setServerParam, t} = this.props;\n\n    const testingbotKeyPlaceholder = process.env.TB_KEY ?\n      t('usingDataFoundIn', {environmentVariable: 'TB_KEY'}) : t('yourUsername');\n\n    const testingbotSecretPlaceholder = process.env.TB_SECRET ?\n      t('usingDataFoundIn', {environmentVariable: 'TB_SECRET'}) : t('yourAccessKey');\n\n    return <Form>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='testingbotKey' placeholder={testingbotKeyPlaceholder} addonBefore={t('TestingBot Key')} value={server.testingbot.key} onChange={(e) => setServerParam('key', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='testingbotSecret' type='password' placeholder={testingbotSecretPlaceholder} addonBefore={t('TestingBot Secret')} value={server.testingbot.secret} onChange={(e) => setServerParam('secret', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n","import React from 'react';\nimport ServerTabTestobject from './ServerTabTestobject';\nimport ServerTabHeadspin from './ServerTabHeadspin';\nimport ServerTabBrowserstack from './ServerTabBrowserstack';\nimport ServerTabBitbar from './ServerTabBitbar';\nimport ServerTabKobiton from './ServerTabKobiton';\nimport ServerTabPerfecto from './ServerTabPerfecto';\nimport ServerTabPcloudy from './ServerTabPcloudy';\nimport ServerTabSauce from './ServerTabSauce';\nimport ServerTabTestingbot from './ServerTabTestingbot';\n\nimport SessionStyles from './Session.css';\n\n// ParcelJS handles image loading by exporting a path to the image\nimport SauceLogo from '../../images/sauce_logo.svg';\nimport TestObjectLogo from '../../images/testobject_logo.svg';\nimport HeadSpinLogo from '../../images/headspin_logo.svg';\nimport BrowserStackLogo from '../../images/browserstack_logo.svg';\nimport BitBarLogo from '../../images/bitbar_logo.svg';\nimport KobitonLogo from '../../images/kobiton_logo.svg';\nimport PerfectoLogo from '../../images/perfecto_logo.png';\nimport PcloudyLogo from '../../images/pcloudy_logo.svg';\nimport TestingBotLogo from '../../images/testingbot_logo.svg';\n\nconst CloudProviders = {\n  sauce: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={SauceLogo} /></span>,\n    tab: props => <ServerTabSauce {...props} />,\n    logo: SauceLogo,\n  },\n  testobject: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={TestObjectLogo} /></span>,\n    tab: props => <ServerTabTestobject {...props} />,\n    logo: TestObjectLogo,\n  },\n  headspin: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={HeadSpinLogo} /></span>,\n    tab: props => <ServerTabHeadspin {...props} />,\n    logo: HeadSpinLogo,\n  },\n  browserstack: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BrowserStackLogo} /></span>,\n    tab: props => <ServerTabBrowserstack {...props} />,\n    logo: BrowserStackLogo,\n  },\n  bitbar: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BitBarLogo} /></span>,\n    tab: props => <ServerTabBitbar {...props} />,\n    logo: BitBarLogo,\n  },\n  kobiton: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={KobitonLogo} /></span>,\n    tab: props => <ServerTabKobiton {...props} />,\n    logo: KobitonLogo,\n  },\n  perfecto: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PerfectoLogo} /></span>,\n    tab: props => <ServerTabPerfecto {...props} />,\n    logo: PerfectoLogo,\n  },\n  pcloudy: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PcloudyLogo} /></span>,\n    tab: props => <ServerTabPcloudy {...props} />,\n    logo: PcloudyLogo,\n  },\n  testingbot: {\n    tabhead: () => <span className={SessionStyles.tabText}><img src={TestingBotLogo} /></span>,\n    tab: props => <ServerTabTestingbot {...props} />,\n    logo: TestingBotLogo,\n  },\n};\n\nexport default CloudProviders;","import { ipcRenderer } from 'electron';\nimport settings from '../../shared/settings';\nimport { v4 as UUID } from 'uuid';\nimport url from 'url';\nimport { push } from 'connected-react-router';\nimport { notification } from 'antd';\nimport { debounce, toPairs, union, without, keys } from 'lodash';\nimport { setSessionDetails } from './Inspector';\nimport i18n from '../../configs/i18next.config.renderer';\nimport CloudProviders from '../components/Session/CloudProviders';\n\nexport const NEW_SESSION_REQUESTED = 'NEW_SESSION_REQUESTED';\nexport const NEW_SESSION_BEGAN = 'NEW_SESSION_BEGAN';\nexport const NEW_SESSION_DONE = 'NEW_SESSION_DONE';\nexport const CHANGE_CAPABILITY = 'CHANGE_CAPABILITY';\nexport const SAVE_SESSION_REQUESTED = 'SAVE_SESSION_REQUESTED';\nexport const SAVE_SESSION_DONE = 'SAVE_SESSION_DONE';\nexport const GET_SAVED_SESSIONS_REQUESTED = 'GET_SAVED_SESSIONS_REQUESTED';\nexport const GET_SAVED_SESSIONS_DONE = 'GET_SAVED_SESSIONS_DONE';\nexport const SET_CAPABILITY_PARAM = 'SET_CAPABILITY_PARAM';\nexport const ADD_CAPABILITY = 'ADD_CAPABILITY';\nexport const REMOVE_CAPABILITY = 'REMOVE_CAPABILITY';\nexport const SWITCHED_TABS = 'SWITCHED_TABS';\nexport const SET_CAPS = 'SET_CAPS';\nexport const SAVE_AS_MODAL_REQUESTED = 'SAVE_AS_MODAL_REQUESTED';\nexport const HIDE_SAVE_AS_MODAL_REQUESTED = 'HIDE_SAVE_AS_MODAL_REQUESTED';\nexport const SET_SAVE_AS_TEXT = 'SET_SAVE_AS_TEXT';\nexport const DELETE_SAVED_SESSION_REQUESTED = 'DELETE_SAVED_SESSION_REQUESTED';\nexport const DELETE_SAVED_SESSION_DONE = 'DELETE_SAVED_SESSION_DONE';\nexport const CHANGE_SERVER_TYPE = 'CHANGE_SERVER_TYPE';\nexport const SET_SERVER_PARAM = 'SET_SERVER_PARAM';\nexport const SET_SERVER = 'SET_SERVER';\nexport const SESSION_LOADING = 'SESSION_LOADING';\nexport const SESSION_LOADING_DONE = 'SESSION_LOADING_DONE';\n\nexport const SAVED_SESSIONS = 'SAVED_SESSIONS';\nexport const SESSION_SERVER_PARAMS = 'SESSION_SERVER_PARAMS';\nexport const SESSION_SERVER_TYPE = 'SESSION_SERVER_TYPE';\nexport const SERVER_ARGS = 'SERVER_ARGS';\nexport const VISIBLE_PROVIDERS = 'VISIBLE_PROVIDERS';\n\nexport const SET_ATTACH_SESS_ID = 'SET_ATTACH_SESS_ID';\n\nexport const GET_SESSIONS_REQUESTED = 'GET_SESSIONS_REQUESTED';\nexport const GET_SESSIONS_DONE = 'GET_SESSIONS_DONE';\n\n\nexport const ENABLE_DESIRED_CAPS_EDITOR = 'ENABLE_DESIRED_CAPS_EDITOR';\nexport const ABORT_DESIRED_CAPS_EDITOR = 'ABORT_DESIRED_CAPS_EDITOR';\nexport const SAVE_RAW_DESIRED_CAPS = 'SAVE_RAW_DESIRED_CAPS';\nexport const SET_RAW_DESIRED_CAPS = 'SET_RAW_DESIRED_CAPS';\nexport const SHOW_DESIRED_CAPS_JSON_ERROR = 'SHOW_DESIRED_CAPS_JSON_ERROR';\n\nexport const IS_ADDING_CLOUD_PROVIDER = 'IS_ADDING_CLOUD_PROVIDER';\n\nexport const SET_PROVIDERS = 'SET_PROVIDERS';\n\nconst serverTypes = {};\nfor (const key of keys(CloudProviders)) {\n  serverTypes[key] = key;\n}\nserverTypes.local = 'local';\nserverTypes.remote = 'remote';\n\nexport const ServerTypes = serverTypes;\n\nconst JSON_TYPES = ['object', 'number', 'boolean'];\n\nexport function getCapsObject (caps) {\n  return Object.assign({}, ...(caps.map((cap) => {\n    if (JSON_TYPES.indexOf(cap.type) !== -1) {\n      try {\n        let obj = JSON.parse(cap.value);\n        return {[cap.name]: obj};\n      } catch (ign) {}\n    }\n    return {[cap.name]: cap.value};\n  })));\n}\n\nexport function showError (e, methodName, secs = 5) {\n  let errMessage;\n  if (e['jsonwire-error'] && e['jsonwire-error'].status === 7) {\n    errMessage = i18n.t('findElementFailure', {methodName});\n  } else if (e.data) {\n    try {\n      e.data = JSON.parse(e.data);\n    } catch (ign) {}\n    if (e.data.value && e.data.value.message) {\n      errMessage = e.data.value.message;\n    } else {\n      errMessage = e.data;\n    }\n  } else if (e.message) {\n    errMessage = e.message;\n  } else if (e.code) {\n    errMessage = e.code;\n  } else {\n    errMessage = i18n.t('Could not start session');\n  }\n  if (errMessage === 'ECONNREFUSED') {\n    errMessage = i18n.t('couldNotConnect');\n  }\n\n  notification.error({\n    message: methodName ? i18n.t('callToMethodFailed', {methodName}) : i18n.t('Error'),\n    description: errMessage,\n    duration: secs\n  });\n\n}\n\n/**\n * Change the caps object and then go back to the new session tab\n */\nexport function setCaps (caps, uuid) {\n  return (dispatch) => {\n    dispatch({type: SET_CAPS, caps, uuid});\n  };\n}\n\n/**\n * Change a single desired capability\n */\nexport function changeCapability (key, value) {\n  return (dispatch) => {\n    dispatch({type: CHANGE_CAPABILITY, key, value});\n  };\n}\n\n/**\n * Push a capability to the list\n */\nexport function addCapability () {\n  return (dispatch) => {\n    dispatch({type: ADD_CAPABILITY});\n  };\n}\n\n/**\n * Update value of a capability parameter\n */\nexport function setCapabilityParam (index, name, value) {\n  return (dispatch) => {\n    dispatch({type: SET_CAPABILITY_PARAM, index, name, value});\n  };\n}\n\n/**\n * Delete a capability from the list\n */\nexport function removeCapability (index) {\n  return (dispatch) => {\n    dispatch({type: REMOVE_CAPABILITY, index});\n  };\n}\n\n/**\n * Start a new appium session with the given caps\n */\nexport function newSession (caps, attachSessId = null) {\n  return async (dispatch, getState) => {\n\n    dispatch({type: NEW_SESSION_REQUESTED, caps});\n\n    let desiredCapabilities = caps ? getCapsObject(caps) : null;\n    let session = getState().session;\n    let host, port, username, accessKey, https, path, token;\n\n    switch (session.serverType) {\n      case ServerTypes.local:\n        host = session.server.local.hostname;\n        if (host === '0.0.0.0') {\n          // if we're on windows, we won't be able to connect directly to '0.0.0.0'\n          // so just connect to localhost; if we're listening on all interfaces,\n          // that will of course include 127.0.0.1 on all platforms\n          host = 'localhost';\n        }\n        port = session.server.local.port;\n        break;\n      case ServerTypes.remote:\n        host = session.server.remote.hostname || '127.0.0.1';\n        port = session.server.remote.port || 4723;\n        path = session.server.remote.path;\n        https = session.server.remote.ssl;\n        break;\n      case ServerTypes.sauce:\n        host = session.server.sauce.dataCenter === 'eu-central-1' ?\n          'ondemand.eu-central-1.saucelabs.com' : 'ondemand.saucelabs.com';\n        port = 80;\n        if (session.server.sauce.useSCProxy) {\n          host = session.server.sauce.scHost || 'localhost';\n          port = parseInt(session.server.sauce.scPort, 10) || 4445;\n        }\n        username = session.server.sauce.username || process.env.SAUCE_USERNAME;\n        accessKey = session.server.sauce.accessKey || process.env.SAUCE_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('sauceCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = false;\n        break;\n      case ServerTypes.testobject:\n        host = process.env.TESTOBJECT_HOST || `${session.server.testobject.dataCenter || 'us1'}.appium.testobject.com`;\n        port = 443;\n        https = true;\n        if (caps) {\n          desiredCapabilities.testobject_api_key = session.server.testobject.apiKey || process.env.TESTOBJECT_API_KEY;\n        }\n        break;\n      case ServerTypes.headspin: {\n        const headspinUrl = url.parse(session.server.headspin.webDriverUrl);\n        host = session.server.headspin.hostname = headspinUrl.hostname;\n        port = session.server.headspin.port = headspinUrl.port;\n        path = session.server.headspin.path = headspinUrl.pathname;\n        https = session.server.headspin.ssl = headspinUrl.protocol === 'https:';\n        break;\n      }\n      case ServerTypes.perfecto:\n        host = session.server.perfecto.hostname;\n        port = session.server.perfecto.port;\n        token = session.server.perfecto.token || process.env.PERFECTO_TOKEN;\n        path = session.server.perfecto.path = '/nexperience/perfectomobile/wd/hub';\n        if (!token) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('Perfecto SecurityToken is required'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities.securityToken = token;\n        https = session.server.perfecto.ssl = false;\n        break;\n      case ServerTypes.browserstack:\n        host = process.env.BROWSERSTACK_HOST || 'hub-cloud.browserstack.com';\n        port = session.server.browserstack.port = 443;\n        path = session.server.browserstack.path = '/wd/hub';\n        username = session.server.browserstack.username || process.env.BROWSERSTACK_USERNAME;\n        desiredCapabilities['browserstack.source'] = 'appiumdesktop';\n        accessKey = session.server.browserstack.accessKey || process.env.BROWSERSTACK_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('browserstackCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.browserstack.ssl = true;\n        break;\n      case ServerTypes.bitbar:\n        host = process.env.BITBAR_HOST || 'appium.bitbar.com';\n        port = session.server.bitbar.port = 443;\n        path = session.server.bitbar.path = '/wd/hub';\n        accessKey = session.server.bitbar.apiKey || process.env.BITBAR_API_KEY;\n        if (!accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('bitbarCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        desiredCapabilities.testdroid_source = 'appiumdesktop';\n        desiredCapabilities.testdroid_apiKey = accessKey;\n        https = session.server.bitbar.ssl = true;\n        break;\n      case ServerTypes.kobiton:\n        host = process.env.KOBITON_HOST || 'api.kobiton.com';\n        port = session.server.kobiton.port = 443;\n        path = session.server.kobiton.path = '/wd/hub';\n        username = session.server.kobiton.username || process.env.KOBITON_USERNAME;\n        desiredCapabilities['kobiton.source'] = 'appiumdesktop';\n        accessKey = session.server.kobiton.accessKey || process.env.KOBITON_ACCESS_KEY;\n        if (!username || !accessKey) {\n          notification.error({\n            message: i18n.t('Error'),\n            description: i18n.t('kobitonCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.kobiton.ssl = true;\n        break;\n      case ServerTypes.pcloudy:\n        host = session.server.pcloudy.hostname;\n        port = session.server.pcloudy.port = 443;\n        path = session.server.pcloudy.path = '/objectspy/wd/hub';\n        username = session.server.pcloudy.username || process.env.PCLOUDY_USERNAME;\n        desiredCapabilities.pCloudy_Username = username;\n        accessKey = session.server.pcloudy.accessKey || process.env.PCLOUDY_ACCESS_KEY;\n        desiredCapabilities.pCloudy_ApiKey = accessKey;\n        if (!username || !accessKey) {\n          notification.error({\n            message: 'Error',\n            description: 'PCLOUDY username and api key are required!',\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.pcloudy.ssl = true;\n        break;\n      case ServerTypes.testingbot:\n        host = session.server.testingbot.hostname = process.env.TB_HOST || 'hub.testingbot.com';\n        port = session.server.testingbot.port = 443;\n        username = session.server.testingbot.key || process.env.TB_KEY;\n        accessKey = session.server.testingbot.secret || process.env.TB_SECRET;\n        desiredCapabilities['tb.source'] = 'appiumdesktop';\n        if (!username || !accessKey) {\n          notification.error({\n            message: 'Error',\n            description: i18n.t('testingbotCredentialsRequired'),\n            duration: 4\n          });\n          return;\n        }\n        https = session.server.testingbot.ssl = true;\n        break;\n      default:\n        break;\n    }\n\n    let rejectUnauthorized = !session.server.advanced.allowUnauthorized;\n    let proxy;\n    if (session.server.advanced.useProxy && session.server.advanced.proxy) {\n      proxy = session.server.advanced.proxy;\n    }\n\n    // Start the session\n    ipcRenderer.send('appium-create-new-session', {\n      desiredCapabilities,\n      attachSessId,\n      host,\n      port,\n      path,\n      username,\n      accessKey,\n      https,\n      rejectUnauthorized,\n      proxy,\n    });\n\n    dispatch({type: SESSION_LOADING});\n\n    // If it failed, show an alert saying it failed\n    ipcRenderer.once('appium-new-session-failed', (evt, e) => {\n      dispatch({type: SESSION_LOADING_DONE});\n      removeNewSessionListeners();\n      showError(e, 0);\n    });\n\n    ipcRenderer.once('appium-new-session-ready', () => {\n      dispatch({type: SESSION_LOADING_DONE});\n      // pass some state to the inspector that it needs to build recorder\n      // code boilerplate\n      setSessionDetails({\n        desiredCapabilities,\n        host,\n        port,\n        path,\n        username,\n        accessKey,\n        https,\n      })(dispatch);\n      removeNewSessionListeners();\n      dispatch(push('/inspector'));\n    });\n\n    // Save the current server settings\n    await settings.set(SESSION_SERVER_PARAMS, session.server);\n  };\n}\n\n\n/**\n * Saves the caps\n */\nexport function saveSession (caps, params) {\n  return async (dispatch) => {\n    let {name, uuid} = params;\n    dispatch({type: SAVE_SESSION_REQUESTED});\n    let savedSessions = await settings.get(SAVED_SESSIONS);\n    if (!uuid) {\n\n      // If it's a new session, add it to the list\n      uuid = UUID();\n      let newSavedSession = {\n        date: +(new Date()),\n        name,\n        uuid,\n        caps,\n      };\n      savedSessions.push(newSavedSession);\n    } else {\n\n      // If it's an existing session, overwrite it\n      for (let session of savedSessions) {\n        if (session.uuid === uuid) {\n          session.caps = caps;\n        }\n      }\n    }\n    await settings.set(SAVED_SESSIONS, savedSessions);\n    await getSavedSessions()(dispatch);\n    dispatch({type: SET_CAPS, caps, uuid});\n    dispatch({type: SAVE_SESSION_DONE});\n  };\n}\n\n/**\n * Get the sessions saved by the user\n */\nexport function getSavedSessions () {\n  return async (dispatch) => {\n    dispatch({type: GET_SAVED_SESSIONS_REQUESTED});\n    let savedSessions = await settings.get(SAVED_SESSIONS);\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions});\n  };\n}\n\n/**\n * Switch to a different tab\n */\nexport function switchTabs (key) {\n  return (dispatch) => {\n    dispatch({type: SWITCHED_TABS, key});\n  };\n}\n\n/**\n * Open a 'Save As' modal\n */\nexport function requestSaveAsModal () {\n  return (dispatch) => {\n    dispatch({type: SAVE_AS_MODAL_REQUESTED});\n  };\n}\n\n/**\n * Hide the 'Save As' modal\n */\nexport function hideSaveAsModal () {\n  return (dispatch) => {\n    dispatch({type: HIDE_SAVE_AS_MODAL_REQUESTED});\n  };\n}\n\n/**\n * Set the text to save capabilities as\n */\nexport function setSaveAsText (saveAsText) {\n  return (dispatch) => {\n    dispatch({type: SET_SAVE_AS_TEXT, saveAsText});\n  };\n}\n\n/**\n * Delete a saved session\n */\nexport function deleteSavedSession (uuid) {\n  return async (dispatch) => {\n    dispatch({type: DELETE_SAVED_SESSION_REQUESTED, uuid});\n    let savedSessions = await settings.get(SAVED_SESSIONS);\n    let newSessions = savedSessions.filter((session) => session.uuid !== uuid);\n    await settings.set(SAVED_SESSIONS, newSessions);\n    dispatch({type: DELETE_SAVED_SESSION_DONE});\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions: newSessions});\n  };\n}\n\n/**\n * Set the session id to attach to\n */\nexport function setAttachSessId (attachSessId) {\n  return (dispatch) => {\n    dispatch({type: SET_ATTACH_SESS_ID, attachSessId});\n  };\n}\n\n/**\n * Change the server type\n */\nexport function changeServerType (serverType) {\n  return async (dispatch, getState) => {\n    await settings.set(SESSION_SERVER_TYPE, serverType);\n    dispatch({type: CHANGE_SERVER_TYPE, serverType});\n    getRunningSessions()(dispatch, getState);\n  };\n}\n\n/**\n * Set a server parameter (host, port, etc...)\n */\nexport function setServerParam (name, value, serverType) {\n  const debounceGetRunningSessions = debounce(getRunningSessions(), 5000);\n  return async (dispatch, getState) => {\n    serverType = serverType || getState().session.serverType;\n    await settings.set(SESSION_SERVER_TYPE, serverType);\n    dispatch({type: SET_SERVER_PARAM, serverType, name, value});\n    debounceGetRunningSessions(dispatch, getState);\n  };\n}\n\n/**\n * Set the local server hostname and port to whatever was saved in 'actions/StartServer.js' so that it\n * defaults to what the currently running appium server is\n */\nexport function setLocalServerParams () {\n  return async (dispatch, getState) => {\n    let serverArgs = await settings.get(SERVER_ARGS);\n    // Get saved server args from settings and set local server settings to it. If there are no saved args, set local\n    // host and port to undefined\n    if (serverArgs) {\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: serverArgs.port});\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: 'localhost'});\n    } else {\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: undefined});\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: undefined});\n      if (getState().session.serverType === 'local') {\n        await changeServerType('remote')(dispatch, getState);\n      }\n    }\n  };\n}\n\n/**\n * Set the server parameters to whatever they were last saved as.\n * Params are saved whenever there's a new session\n */\nexport function setSavedServerParams () {\n  return async (dispatch, getState) => {\n    let server = await settings.get(SESSION_SERVER_PARAMS);\n    let serverType = await settings.get(SESSION_SERVER_TYPE);\n    let currentProviders = getState().session.visibleProviders;\n\n    if (server) {\n      // if we have a cloud provider as a saved server, but for some reason the\n      // cloud provider is no longer in the list, revert server type to remote\n      if (keys(CloudProviders).includes(serverType) &&\n          !currentProviders.includes(serverType)) {\n        serverType = ServerTypes.remote;\n      }\n      dispatch({type: SET_SERVER, server, serverType});\n    }\n  };\n}\n\nexport function getRunningSessions () {\n  return (dispatch, getState) => {\n    const avoidServerTypes = [\n      'sauce', 'testobject'\n    ];\n    // Get currently running sessions for this server\n    const state = getState().session;\n    const {server, serverType} = state;\n    const serverInfo = server[serverType];\n\n    dispatch({type: GET_SESSIONS_REQUESTED});\n    if (avoidServerTypes.includes(serverType)) {\n      dispatch({type: GET_SESSIONS_DONE});\n    } else {\n      ipcRenderer.send('appium-client-get-sessions', {\n        host: serverInfo.hostname, port: serverInfo.port, path: serverInfo.path, ssl: serverInfo.ssl\n      });\n      ipcRenderer.once('appium-client-get-sessions-response', (evt, e) => {\n        const res = JSON.parse(e.res);\n        dispatch({type: GET_SESSIONS_DONE, sessions: res.value});\n        removeRunningSessionsListeners();\n      });\n      ipcRenderer.once('appium-client-get-sessions-fail', () => {\n        dispatch({type: GET_SESSIONS_DONE});\n        removeRunningSessionsListeners();\n      });\n    }\n  };\n}\n\nexport function startDesiredCapsEditor () {\n  return (dispatch) => {\n    dispatch({type: ENABLE_DESIRED_CAPS_EDITOR});\n  };\n}\n\nexport function abortDesiredCapsEditor () {\n  return (dispatch) => {\n    dispatch({type: ABORT_DESIRED_CAPS_EDITOR});\n  };\n}\n\nexport function saveRawDesiredCaps () {\n  return (dispatch, getState) => {\n    const state = getState().session;\n    const {rawDesiredCaps, caps: capsArray} = state;\n    try {\n      const newCaps = JSON.parse(rawDesiredCaps);\n\n      // Transform the current caps array to an object\n      let caps = {};\n      for (let {type, name, value} of capsArray) {\n        caps[name] = {type, value};\n      }\n\n      // Translate the caps JSON to array format\n      let newCapsArray = toPairs(newCaps).map(([name, value]) => ({\n        type: (() => {\n          let type = typeof value;\n\n          // If we already have this cap and it's file type, keep the type the same\n          if (caps[name] && caps[name].type === 'file' && type === 'string') {\n            return 'file';\n          } else if (type === 'string') {\n            return 'text';\n          } else {\n            return type;\n          }\n        })(),\n        name,\n        value,\n      }));\n      dispatch({type: SAVE_RAW_DESIRED_CAPS, caps: newCapsArray});\n    } catch (e) {\n      dispatch({type: SHOW_DESIRED_CAPS_JSON_ERROR, message: e.message});\n    }\n  };\n}\n\nexport function setRawDesiredCaps (rawDesiredCaps) {\n  return (dispatch, getState) => {\n    const state = getState().session;\n    let isValidCapsJson = true;\n    let invalidCapsJsonReason;\n    if (state.isValidatingCapsJson) {\n      try {\n        JSON.parse(rawDesiredCaps);\n      } catch (e) {\n        isValidCapsJson = false;\n        invalidCapsJsonReason = e.message;\n      }\n    }\n    dispatch({type: SET_RAW_DESIRED_CAPS, rawDesiredCaps, isValidCapsJson, invalidCapsJsonReason});\n  };\n}\n\nfunction removeNewSessionListeners () {\n  ipcRenderer.removeAllListeners('appium-new-session-failed');\n  ipcRenderer.removeAllListeners('appium-new-session-ready');\n}\n\nfunction removeRunningSessionsListeners () {\n  ipcRenderer.removeAllListeners('appium-client-get-sessions-fail');\n  ipcRenderer.removeAllListeners('appium-client-get-sessions-response');\n}\n\nexport function addCloudProvider () {\n  return (dispatch) => {\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: true});\n  };\n}\n\nexport function stopAddCloudProvider () {\n  return (dispatch) => {\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: false});\n  };\n}\n\nexport function addVisibleProvider (provider) {\n  return async (dispatch, getState) => {\n    let currentProviders = getState().session.visibleProviders;\n    const providers = union(currentProviders, [provider]);\n    await settings.set(VISIBLE_PROVIDERS, providers);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\nexport function removeVisibleProvider (provider) {\n  return async (dispatch, getState) => {\n    let currentProviders = getState().session.visibleProviders;\n    const providers = without(currentProviders, provider);\n    await settings.set(VISIBLE_PROVIDERS, providers);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n\nexport function setVisibleProviders () {\n  return async (dispatch) => {\n    const providers = await settings.get(VISIBLE_PROVIDERS);\n    dispatch({type: SET_PROVIDERS, providers});\n  };\n}\n","import settings from 'electron-settings';\nimport { PRESETS } from '../renderer/actions/StartServer';\nimport { SAVED_SESSIONS, SERVER_ARGS, SESSION_SERVER_PARAMS,\n         SESSION_SERVER_TYPE } from '../renderer/actions/Session';\nimport { SAVED_FRAMEWORK } from '../renderer/actions/Inspector';\n\n// set default persistent settings\n// do it here because settings are kind of like state!\nsettings.defaults({\n  [PRESETS]: {},\n  [SAVED_SESSIONS]: [],\n  [SERVER_ARGS]: null,\n  [SESSION_SERVER_PARAMS]: null,\n  [SESSION_SERVER_TYPE]: null,\n  [SAVED_FRAMEWORK]: 'java',\n});\n\nexport default settings;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport config from './app.config';\nimport settings from '../shared/settings';\nimport path from 'path';\nimport i18nextBackend from 'i18next-node-fs-backend';\n\nconst i18nextOptions = {\n  backend: {\n    loadPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n    addPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\n    jsonIndent: 2,\n  },\n  // debug: true,\n  // saveMissing: true,\n  interpolation: {\n    escapeValue: false\n  },\n  lng: settings && settings.getSync('PREFERRED_LANGUAGE', 'en') || 'en',\n  fallbackLng: config.fallbackLng,\n  whitelist: config.languages,\n  react: {\n    wait: false\n  }\n};\n\nif (!i18n.isInitialized) {\n  i18n\n    .use(initReactI18next)\n    .use(i18nextBackend)\n    .init(i18nextOptions);\n}\n\nexport default i18n;\n","import { ipcRenderer, shell } from 'electron';\nimport { push } from 'connected-react-router';\nimport i18n from '../../configs/i18next.config.renderer';\n\nexport const SERVER_STOP_REQ = 'SERVER_STOP_REQ';\nexport const SERVER_STOP_OK = 'SERVER_STOP_OK';\nexport const SERVER_STOP_FAIL = 'SERVER_STOP_FAIL';\nexport const LOGS_RECEIVED = 'LOGS_RECEIVED';\nexport const LOGS_CLEARED = 'LOGS_CLEARED';\nexport const MONITOR_CLOSED = 'MONITOR_CLOSED';\nexport const START_SESSION_REQUEST = 'START_SESSION';\nexport const SET_SERVER_ARGS = 'SET_SERVER_ARGS';\n\nexport function stopServerReq () {\n  return {type: SERVER_STOP_REQ};\n}\n\nexport function stopServerOK () {\n  return {type: SERVER_STOP_OK};\n}\n\nexport function stopServerFailed (reason) {\n  return {type: SERVER_STOP_FAIL, reason};\n}\n\nexport function startSessionRequest (sessionUUID) {\n  return {type: START_SESSION_REQUEST, sessionUUID};\n}\n\nexport function serverLogsReceived (logs) {\n  return {type: LOGS_RECEIVED, logs};\n}\n\nexport function setServerArgs (args) {\n  return {type: SET_SERVER_ARGS, args};\n}\n\nexport function monitorClosed () {\n  return {type: MONITOR_CLOSED};\n}\n\nfunction stopListening () {\n  ipcRenderer.removeAllListeners('appium-log-line');\n  ipcRenderer.removeAllListeners('appium-stop-error');\n}\n\nfunction removeStopListeners () {\n  ipcRenderer.removeAllListeners('appium-stop-error');\n  ipcRenderer.removeAllListeners('appium-stop-ok');\n}\n\nexport function stopServer () {\n  return (dispatch) => {\n    dispatch(stopServerReq());\n\n    ipcRenderer.once('appium-stop-error', (event, message) => {\n      alert(i18n.t('stopServerFailed', {message}));\n      dispatch(stopServerFailed(message));\n      removeStopListeners();\n    });\n\n    stopListening();\n\n    ipcRenderer.once('appium-stop-ok', () => {\n      dispatch(serverLogsReceived([{\n        level: 'info',\n        msg: 'Appium server stopped successfully'\n      }]));\n      setTimeout(() => {\n        dispatch(stopServerOK());\n      }, 0);\n      removeStopListeners();\n    });\n\n    ipcRenderer.send('stop-server');\n  };\n}\n\nexport function closeMonitor () {\n  return (dispatch) => {\n    dispatch(monitorClosed());\n    dispatch(push('/'));\n  };\n}\n\nexport function clearLogs () {\n  return (dispatch, getState) => {\n    const logfilePath = getState().startServer.logfilePath;\n    if (logfilePath) {\n      ipcRenderer.send('appium-clear-logfile', {logfilePath});\n    }\n    dispatch({type: LOGS_CLEARED});\n  };\n}\n\nexport function startSession () {\n  return (dispatch) => {\n    dispatch({type: START_SESSION_REQUEST});\n    ipcRenderer.send('create-new-session-window');\n  };\n}\n\nexport function getRawLogs () {\n  return (dispatch, getState) => {\n    const logfilePath = getState().startServer.logfilePath;\n    if (logfilePath) {\n      shell.openExternal(`file://${logfilePath}`);\n    } else {\n      alert(i18n.t('logsNotAvailableError'));\n    }\n  };\n}","/* eslint-disable no-console */\nimport { ipcRenderer } from 'electron';\nimport { push } from 'connected-react-router';\nimport { serverLogsReceived, clearLogs, setServerArgs } from './ServerMonitor';\nimport settings from '../../shared/settings';\nimport i18n from '../../configs/i18next.config.renderer';\n\nexport const SERVER_START_REQ = 'SERVER_START_REQ';\nexport const SERVER_START_OK = 'SERVER_START_OK';\nexport const SERVER_START_ERR = 'SERVER_START_ERR';\nexport const UPDATE_ARGS = 'UPDATE_ARGS';\nexport const SWITCH_TAB = 'SWITCH_TAB';\nexport const PRESET_SAVE_REQ = 'PRESET_SAVE_REQ';\nexport const PRESET_SAVE_OK = 'PRESET_SAVE_OK';\nexport const GET_PRESETS = 'GET_PRESETS';\nexport const PRESET_DELETE_REQ = 'PRESET_DELETE_REQ';\nexport const PRESET_DELETE_OK = 'PRESET_DELETE_OK';\nexport const SET_LOGFILE_PATH = 'SET_LOGFILE_PATH';\n\nexport const PRESETS = 'presets';\n\nexport function startServer (evt) {\n  evt.preventDefault();\n  return (dispatch, getState) => {\n    // signal to the UI that we are beginning our request\n    dispatch({type: SERVER_START_REQ});\n    const {serverArgs} = getState().startServer;\n\n    // if we get an error from electron, fail with the message\n    ipcRenderer.once('appium-start-error', (event, message) => {\n      // don't listen for log lines any more if we failed to start, other-\n      // wise we'll start to stack listeners for subsequent attempts\n      ipcRenderer.removeAllListeners('appium-log-line');\n      alert(i18n.t('errorStartingServer', {message}));\n      dispatch({type: SERVER_START_ERR});\n      removeStartServerListeners();\n    });\n\n    ipcRenderer.once('appium-start-ok', () => {\n      // don't listen for subsequent server start failures later in the\n      // lifetime of this app instance\n      ipcRenderer.removeAllListeners('appium-start-error');\n      dispatch({type: SERVER_START_OK});\n      dispatch(setServerArgs(serverArgs));\n      dispatch(push('/monitor'));\n      removeStartServerListeners();\n    });\n\n    ipcRenderer.on('appium-log-line', (event, logs) => {\n      dispatch(serverLogsReceived(logs));\n    });\n\n    dispatch(clearLogs());\n    ipcRenderer.once('path-to-logs', (event, logfilePath) => dispatch({type: SET_LOGFILE_PATH, logfilePath}));\n    ipcRenderer.send('start-server', serverArgs);\n  };\n}\n\nfunction removeStartServerListeners () {\n  ipcRenderer.removeAllListeners('appium-start-error');\n  ipcRenderer.removeAllListeners('appium-start-ok');\n}\n\nexport function updateArgs (args) {\n  return (dispatch) => {\n    dispatch({type: UPDATE_ARGS, args});\n  };\n}\n\nexport function switchTab (tabId) {\n  return (dispatch) => {\n    dispatch({type: SWITCH_TAB, tabId});\n  };\n}\n\nexport function savePreset (name, args) {\n  return async (dispatch) => {\n    dispatch({type: PRESET_SAVE_REQ});\n    let presets = await settings.get(PRESETS);\n    try {\n      presets[name] = args;\n      presets[name]._modified = Date.now();\n      await settings.set(PRESETS, presets);\n    } catch (e) {\n      console.error(e);\n      alert(i18n.t('errorSavingPreset', {message: e.message}));\n    }\n    dispatch({type: PRESET_SAVE_OK, presets});\n  };\n}\n\nexport function getPresets () {\n  return async (dispatch) => {\n    try {\n      let presets = await settings.get(PRESETS);\n      dispatch({type: GET_PRESETS, presets});\n    } catch (e) {\n      console.error(e);\n      alert(i18n.t('errorGettingPreset', {message: e.message}));\n    }\n  };\n}\n\nexport function deletePreset (name) {\n  return async (dispatch) => {\n    dispatch({type: PRESET_DELETE_REQ});\n    let presets = await settings.get(PRESETS);\n    try {\n      delete presets[name];\n      await settings.set(PRESETS);\n    } catch (e) {\n      console.error(e);\n      alert(i18n.t('errorDeletingPreset', {message: e.message}));\n    }\n    dispatch({type: PRESET_DELETE_OK, presets});\n  };\n}","import { SERVER_START_REQ, SERVER_START_OK, SERVER_START_ERR, GET_PRESETS,\n         UPDATE_ARGS, SWITCH_TAB, PRESET_SAVE_REQ, PRESET_SAVE_OK,\n         PRESET_DELETE_REQ, PRESET_DELETE_OK, SET_LOGFILE_PATH,\n} from '../actions/StartServer';\n\nimport { ipcRenderer } from 'electron';\nimport { version as SERVER_VERSION } from 'appium/package.json';\n\nexport const DEFAULT_ARGS = ipcRenderer.sendSync('get-default-args');\n\n// TODO: Add this back when 'getParser' issue (https://github.com/appium/appium/issues/11320) has been fixed\n//export const ARG_DATA = ipcRenderer.sendSync('get-args-metadata');\n\nconst initialState = {\n  serverArgs: {...DEFAULT_ARGS},\n  serverVersion: SERVER_VERSION,\n  serverStarting: false,\n  serverFailMsg: '',\n  tabId: 0,\n  presetSaving: false,\n  presetDeleting: false,\n  presets: {},\n};\n\nexport default function startServer (state = initialState, action) {\n  switch (action.type) {\n    case SERVER_START_REQ:\n      return {...state, serverStarting: true};\n    case SERVER_START_OK:\n    case SERVER_START_ERR:\n      return {\n        ...state,\n        serverStarting: false,\n      };\n    case UPDATE_ARGS:\n      return {\n        ...state,\n        serverArgs: Object.assign({}, state.serverArgs, action.args)\n      };\n    case SWITCH_TAB:\n      return {\n        ...state,\n        tabId: action.tabId\n      };\n    case GET_PRESETS:\n      return {...state, presets: action.presets};\n    case PRESET_SAVE_REQ:\n      return {...state, presetSaving: true};\n    case PRESET_SAVE_OK:\n      return {...state, presetSaving: false, presets: action.presets};\n    case PRESET_DELETE_REQ:\n      return {...state, presetDeleting: true};\n    case PRESET_DELETE_OK:\n      return {...state, presetDeleting: false, presets: action.presets};\n    case SET_LOGFILE_PATH:\n      return {...state, logfilePath: action.logfilePath};\n    default:\n      return state;\n  }\n}\n","import PropTypes from 'prop-types';\nimport { DEFAULT_ARGS } from '../../reducers/StartServer';\n\nexport const propTypes = {\n  serverArgs: PropTypes.object.isRequired,\n  serverStarting: PropTypes.bool.isRequired,\n  startServer: PropTypes.func.isRequired,\n  updateArgs: PropTypes.func.isRequired,\n  savePreset: PropTypes.func.isRequired,\n  presetSaving: PropTypes.bool.isRequired,\n  deletePreset: PropTypes.func.isRequired,\n  presetDeleting: PropTypes.bool.isRequired,\n};\n\nexport function updateArg (evt) {\n  const {updateArgs} = this.props;\n  let argName = evt.target.name;\n\n  let newVal;\n  switch (evt.target.type) {\n    case 'checkbox':\n      newVal = evt.target.checked;\n      break;\n    default:\n      newVal = evt.target.value;\n      // if we have a string type, sometimes Appium's default value is actually\n      // null, but our users can only make it an empty string, so convert it\n      if (newVal === '' && DEFAULT_ARGS[argName] === null) {\n        newVal = null;\n      }\n      // likewise if we have a string type, but Appium's defult value is\n      // actually a number, convert it. For now assume that will be an integer\n      // since Appium currently doesn't accept any non-integer numeric\n      // arguments.\n      if (typeof newVal === 'string' &&\n          typeof DEFAULT_ARGS[argName] === 'number') {\n        newVal = parseInt(newVal, 10);\n      }\n      break;\n  }\n  updateArgs({[argName]: newVal});\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon } from 'antd';\nimport { ipcRenderer } from 'electron';\nimport { withTranslation } from '../../util';\n\nimport styles from './StartButton.css';\n\nclass StartButton extends Component {\n  isEnabled () {\n    return !(this.props.serverStarting || this.props.disabledOverride);\n  }\n\n  noop (evt) {\n    evt.preventDefault();\n  }\n\n  openConfig () {\n    ipcRenderer.send('appium-open-config');\n  }\n\n  render () {\n    const {startServer, serverStarting, serverVersion, t} = this.props;\n    const buttonProps = {};\n    if (!this.isEnabled()) {\n      buttonProps.disabled = true;\n    }\n\n    return (\n      <div>\n        <Button {...buttonProps} id='startServerBtn'\n          className={styles.startButton}\n          type=\"primary\"\n          onClick={this.isEnabled() ? startServer : this.noop}\n        >\n          {serverStarting ? t('Starting…') : t('startServer', {serverVersion})}\n        </Button>\n        <input type=\"submit\" hidden={true} />\n        <Button id='configBtn'\n          className={styles.configButton}\n          onClick={() => this.openConfig()}>\n          {t('Edit Configurations')}<Icon type=\"setting\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nStartButton.propTypes = {\n  serverStarting: PropTypes.bool.isRequired,\n  startServer: PropTypes.func.isRequired,\n  disabledOverride: PropTypes.bool,\n};\n\nexport default withTranslation(StartButton);\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport { withTranslation } from '../../util';\nimport { propTypes, updateArg } from './shared';\nimport StartButton from './StartButton';\nimport styles from './SimpleTab.css';\n\nclass SimpleTab extends Component {\n\n  render () {\n    const {startServer, serverArgs, serverStarting, serverVersion, t} = this.props;\n\n    return (\n      <div className={styles.form}>\n        <form onSubmit={startServer}>\n          <Input ref=\"address\" defaultValue={serverArgs.address}\n            addonBefore={t('Host')}\n            name=\"address\" onChange={updateArg.bind(this)}\n            id=\"simpleHostInput\"\n          />\n          <Input ref=\"port\" defaultValue={serverArgs.port}\n            addonBefore={t('Port')} name=\"port\" onChange={updateArg.bind(this)}\n            id=\"simplePortInput\"\n          />\n          <div className=\"form-actions\">\n            <StartButton {...{serverStarting, startServer, serverVersion}} />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleTab.propTypes = {...propTypes};\n\nexport default withTranslation(SimpleTab);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { withTranslation } from '../../util';\nimport styles from './StartButton.css';\n\nclass SavePresetButton extends Component {\n  render () {\n    const {presetSaving, savePreset, t} = this.props;\n\n    return (\n      <div>\n        <Button className={styles.startButton}\n          type={presetSaving ? 'disabled' : ''}\n          onClick={savePreset}\n        >{presetSaving ? t('Saving…') : t('Save As Preset…')}</Button>\n        <input type=\"submit\" hidden={true} />\n      </div>\n    );\n  }\n}\n\nSavePresetButton.propTypes = {\n  presetSaving: PropTypes.bool.isRequired,\n  savePreset: PropTypes.func.isRequired,\n};\n\nexport default withTranslation(SavePresetButton);\n","import React, { Component } from 'react';\nimport { Modal, Input, Checkbox, notification } from 'antd';\n\nimport { withTranslation } from '../../util';\nimport { propTypes, updateArg } from './shared';\nimport StartButton from './StartButton';\nimport SavePresetButton from './SavePresetButton';\nimport styles from './AdvancedTab.css';\n\n// args we build a UI for:\n// ipa, address, port, callbackAddress, callbackPort,\n// bootstrapPort, backendRetries, sessionOverride, log,\n// logLevel, logTimestamp, localTimezone, logNoColors,\n// defaultDevice, automationTraceTemplatePath, instrumentsPath,\n// nodeconfig, robotAddress, robotPort, selendroidPort,\n// chromeDriverPort, chromedriverExecutable, enforceStrictCaps,\n// isolateSimDevice, tmpDir, traceDir, debugLogSpacing,\n// suppressAdbKillServer, webkitDebugProxyPort, defaultCapabilities\n\nclass AdvancedTab extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      newPresetName: '',\n    };\n  }\n\n  buildInput (argName, type, label) {\n    const {serverArgs, t} = this.props;\n\n    if (type === 'text') {\n      return (\n        <div className={styles.input}>\n          <Input ref={argName} type=\"text\"\n            defaultValue={serverArgs[argName]}\n            name={argName} onChange={updateArg.bind(this)}\n            addonBefore={label}\n          />\n        </div>\n      );\n    }\n\n    if (type === 'checkbox') {\n      return (\n        <div className={styles.input}>\n          <Checkbox ref={argName}\n            name={argName} defaultChecked={serverArgs[argName]}\n            onChange={updateArg.bind(this)}\n          >{label}</Checkbox>\n        </div>\n      );\n    }\n\n    if (type === 'textarea') {\n      return '';\n    }\n\n    throw new Error(t('invalidType', {type}));\n  }\n\n  openPresetModal () {\n    this.setState({\n      modalOpen: true,\n    });\n  }\n\n  closePresetModal () {\n    this.setState({modalOpen: false});\n  }\n\n  updatePresetName (evt) {\n    this.setState({newPresetName: evt.target.value});\n  }\n\n  savePreset (evt) {\n    const {t} = this.props;\n    if (evt) {\n      // might get here from Modal binding (no event) or form submit binding\n      // (event)\n      evt.preventDefault();\n    }\n    if (!this.state.newPresetName) {\n      // don't save a preset without a name\n      return;\n    }\n    this.props.savePreset(this.state.newPresetName, this.props.serverArgs);\n    notification.success({\n      message: t('Saved'),\n      description: t('presetAdded', {presetName: this.state.newPresetName})\n    });\n    this.setState({modalOpen: false});\n  }\n\n  modal () {\n    const {t} = this.props;\n    const form = (\n      <div>\n        <form className={styles.input}\n          onSubmit={this.savePreset.bind(this)}>\n          <Input autoFocus\n            ref=\"presetName\"\n            name={'presetName'}\n            addonBefore={t('Preset name')}\n            onChange={this.updatePresetName.bind(this)}\n            size=\"large\"\n          />\n          <input type=\"submit\" hidden={true} />\n        </form>\n      </div>\n    );\n\n    return (\n      <Modal\n        visible={this.state.modalOpen}\n        className={styles.presetModal}\n        title={t('Save Server Arguments Preset')}\n        width={340}\n        okText={t('Save')}\n        onOk={this.savePreset.bind(this)}\n        cancelText={t('Cancel')}\n        onCancel={this.closePresetModal.bind(this)}\n      >\n        {form}\n      </Modal>\n    );\n  }\n\n  render () {\n    const {startServer, serverStarting, presetSaving, serverVersion, t} = this.props;\n\n    return (\n      <div className={styles.advancedForm}>\n        <form onSubmit={startServer}>\n          <div className={styles.inputSection}>\n            <div className={styles.secTitle}>{t('General')}</div>\n            <div className={styles.secBody}>\n              {this.buildInput('address', 'text', t('Server Address'))}\n              {this.buildInput('port', 'text', t('Server Port'))}\n              {this.buildInput('log', 'text', t('Logfile Path'))}\n              {this.buildInput('loglevel', 'text', t('Log Level'))}\n              {this.buildInput('tmpDir', 'text', t('Override Temp Path'))}\n              {this.buildInput('nodeconfig', 'text', t('Node Config File Path'))}\n              {this.buildInput('localTimezone', 'checkbox', t('Local Timezone'))}\n              {this.buildInput('sessionOverride', 'checkbox', t('Allow Session Override'))}\n              {this.buildInput('logTimestamp', 'checkbox', t('Log Timestamps'))}\n              {this.buildInput('logNoColors', 'checkbox', t('Suppress Log Color'))}\n              {this.buildInput('enforceStrictCaps', 'checkbox', t('Strict Caps Mode'))}\n              {this.buildInput('relaxedSecurityEnabled', 'checkbox', t('Relaxed Security'))}\n              {this.buildInput('defaultCapabilities', 'textarea', t('Default Capabilities'))}\n            </div>\n\n            <div className={styles.secTitle}>{t('iOS')}</div>\n            <div className={styles.secBody}>\n              {this.buildInput('wdaLocalPort', 'text', t('WebDriverAgent Port'))}\n              {this.buildInput('callbackHost', 'text', t('executeAsync Callback Host'))}\n              {this.buildInput('callbackPort', 'text', t('executeAsync Callback Port'))}\n            </div>\n\n            <div className={styles.secTitle}>{t('Android')}</div>\n            <div className={styles.secBody}>\n              {this.buildInput('bootstrapPort', 'text', t('Bootstrap Port'))}\n              {this.buildInput('selendroidPort', 'text', t('Selendroid Port'))}\n              {this.buildInput('chromeDriverPort', 'text', t('Chromedriver Port'))}\n              {this.buildInput('chromedriverExecutable', 'text', t('Chromedriver Binary Path'))}\n            </div>\n          </div>\n          <div className={styles.actions}>\n            <StartButton {...{serverStarting, startServer, serverVersion}} />\n            <SavePresetButton {...{savePreset: this.openPresetModal.bind(this), presetSaving}} />\n          </div>\n        </form>\n        {this.modal()}\n      </div>\n    );\n  }\n}\n\nAdvancedTab.propTypes = {...propTypes};\n\nexport default withTranslation(AdvancedTab);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { withTranslation } from '../../util';\n\nimport styles from './StartButton.css';\n\nclass DeletePresetButton extends Component {\n  render () {\n    const {presetDeleting, deletePreset, t} = this.props;\n\n    return (\n      <div>\n        <Button className={styles.startButton}\n          type={presetDeleting ? 'disabled' : null}\n          onClick={deletePreset}\n        >{presetDeleting ? t('Deleting…') : t('Delete Preset')}</Button>\n      </div>\n    );\n  }\n}\n\nDeletePresetButton.propTypes = {\n  presetDeleting: PropTypes.bool.isRequired,\n  deletePreset: PropTypes.func.isRequired,\n};\n\nexport default withTranslation(DeletePresetButton);\n","import _ from 'lodash';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport { notification, Table } from 'antd';\nimport { withTranslation } from '../../util';\n\nimport { propTypes } from './shared';\nimport StartButton from './StartButton';\nimport DeletePresetButton from './DeletePresetButton';\nimport advancedStyles from './AdvancedTab.css';\nimport styles from './PresetsTab.css';\n\nclass PresetsTab extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {selectedPreset: null};\n  }\n\n  componentWillMount () {\n    this.props.getPresets();\n  }\n\n  hasPresets () {\n    return !!_.size(this.props.presets);\n  }\n\n  presetIsSelected () {\n    return this.hasPresets() && this.state.selectedPreset;\n  }\n\n  emptyPresetList () {\n    const {t} = this.props;\n    return (\n      <div className={styles.noPresetsContainer}>\n        <div className={styles.noPresetsMessage}>\n          {t('noPresets')}\n        </div>\n      </div>\n    );\n  }\n\n  selectedPresetData (presetName = null) {\n    if (!presetName) {presetName = this.state.selectedPreset;}\n    const {presets} = this.props;\n    const preset = presets[presetName];\n    if (preset._modified) {\n      delete preset._modified;\n    }\n    return preset;\n  }\n\n  selectPreset (presetName) {\n    const {serverArgs, updateArgs} = this.props;\n\n    this.setState({selectedPreset: presetName});\n\n    const preset = this.selectedPresetData(presetName);\n\n    for (let [argName, newVal] of _.toPairs(preset)) {\n      if (serverArgs[argName] !== newVal) {\n        updateArgs({[argName]: newVal});\n      }\n    }\n  }\n\n  deletePreset (evt) {\n    const {t} = this.props;\n\n    evt.preventDefault();\n    if (window.confirm(t('deleteSelectedPresetConfirmation', {presetName: this.state.selectedPreset}))) {\n      this.props.deletePreset(this.state.selectedPreset);\n      this.setState({selectedPreset: null});\n      notification.success({\n        message: t('Deleted'),\n        description: t('Preset successfully trashed')\n      });\n    }\n  }\n\n  presetList () {\n    const {presets, t} = this.props;\n    return (\n      <ul className={styles.presetsList}>\n        {_.toPairs(presets).map((p) =>\n          <a\n            onClick={this.selectPreset.bind(this, p[0])}\n            key={p[0]}\n            className={styles.presetLink}\n          >\n            <li className={`${styles.preset} ${p[0] === this.state.selectedPreset ? styles.presetItemActive : ''}`}>\n              <div className={styles.presetItemTitle}>{p[0]}</div>\n              <div className={styles.presetItemDesc}>{t('savedTimestamp', {when: moment(p[1]._modified).fromNow()})}</div>\n            </li>\n          </a>\n        )}\n      </ul>\n    );\n  }\n\n  presetDetail () {\n    const {t} = this.props;\n    const preset = this.selectedPresetData();\n    if (preset) {\n      const columns = [{\n        title: t('Server Argument'),\n        dataIndex: 'arg',\n        width: 200\n      }, {\n        title: t('Value'),\n        dataIndex: 'val',\n      }];\n      let data = [];\n      for (let [arg, val] of _.toPairs(preset)) {\n        data.push({\n          key: arg,\n          arg,\n          val: typeof val === 'string' ? val : JSON.stringify(val)\n        });\n      }\n      return (\n        <div className={styles.presetsDetail}>\n          <Table columns={columns} dataSource={data} size=\"small\"\n            pagination={false}\n          />\n        </div>\n      );\n    }\n    return '';\n  }\n\n  render () {\n    const {startServer, serverStarting, presetDeleting, serverVersion} = this.props;\n\n    return (\n      <div className={advancedStyles.advancedForm}>\n        <form onSubmit={startServer}>\n          <div className={styles.presetsSection}>\n            {this.hasPresets() ? this.presetList() : this.emptyPresetList()}\n            {this.presetIsSelected() ? this.presetDetail() : ''}\n          </div>\n          <div className={advancedStyles.actions}>\n            <StartButton {...{serverStarting, startServer, serverVersion, disabledOverride: !this.presetIsSelected()}} />\n            {this.presetIsSelected() &&\n              <DeletePresetButton {...{presetDeleting, deletePreset: this.deletePreset.bind(this)}} />\n            }\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nPresetsTab.propTypes = {...propTypes};\n\nexport default withTranslation(PresetsTab);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\n\nimport { propTypes } from './shared';\nimport SimpleTab from './SimpleTab';\nimport AdvancedTab from './AdvancedTab';\nimport PresetsTab from './PresetsTab';\nimport styles from './StartServer.css';\n\nimport AppiumLogo from '../../images/appium_logo.png';\n\nconst TAB_SIMPLE = 0, TAB_ADVANCED = 1, TAB_PRESETS = 2;\n\nexport default class StartServer extends Component {\n\n  displayTab () {\n    const {t} = this.props;\n\n    switch (this.props.tabId) {\n      case TAB_SIMPLE:\n        return <SimpleTab {...this.props} />;\n      case TAB_ADVANCED:\n        return <AdvancedTab {...this.props} />;\n      case TAB_PRESETS:\n        return <PresetsTab {...this.props} />;\n      default:\n        throw new Error(t('Invalid tab id'));\n    }\n  }\n\n  render () {\n    const {tabId, switchTab, t} = this.props;\n    return (\n      <div className={styles.container}>\n        <div className={styles.formAndLogo}>\n          <img src={AppiumLogo} className={styles.logo} />\n            <p className={styles.ozcan}>Panoramic PRO Vision and Measurement API </p>\n          <div className={styles.tabs}>\n            <Button.Group className={styles.tabButtons}>\n              <Button type={tabId === TAB_SIMPLE ? 'primary' : null }\n                onClick={() => switchTab(TAB_SIMPLE)}\n              >{t('Simple')}</Button>\n              <Button type={tabId === TAB_ADVANCED ? 'primary' : null }\n                onClick={() => switchTab(TAB_ADVANCED)}\n              >{t('Advanced')}</Button>\n              <Button type={tabId === TAB_PRESETS ? 'primary' : null }\n                onClick={() => switchTab(TAB_PRESETS)}\n              >{t('Presets')}</Button>\n            </Button.Group>\n\n          </div>\n          {this.displayTab()}\n            <p className={styles.main2}> 2019 - Licensed to <strong>Visiosoft Yazilim Sanayi LTD.</strong> </p>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nStartServer.propTypes = {\n  ...propTypes,\n  tabId: PropTypes.number.isRequired,\n  switchTab: PropTypes.func.isRequired,\n};\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as StartServerActions from '../actions/StartServer';\nimport StartServer from '../components/StartServer/StartServer';\n\nfunction mapStateToProps (state) {\n  return state.startServer;\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(StartServerActions, dispatch);\n}\n\nexport default withTranslation(StartServer, connect(mapStateToProps, mapDispatchToProps));\n","import moment from 'moment';\nimport { SERVER_STOP_REQ, SERVER_STOP_OK, SERVER_STOP_FAIL, SET_SERVER_ARGS,\n         START_SESSION_REQUEST,\n         LOGS_RECEIVED, LOGS_CLEARED, MONITOR_CLOSED } from '../actions/ServerMonitor';\n\nexport const STATUS_RUNNING = 'running';\nexport const STATUS_STOPPED = 'stopped';\nexport const STATUS_STOPPING = 'stopping';\n\n// Maximum amount of logs to keep in memory\nconst MAX_LOG_LINES = 10000;\n\nconst initialState = {\n  logLines: [],\n  serverStatus: STATUS_STOPPED,\n  serverFailMsg: '',\n  serverArgs: {},\n};\n\nexport default function serverMonitor (state = initialState, action) {\n  let logLines;\n  switch (action.type) {\n    case SERVER_STOP_REQ:\n      return {...state, serverStatus: STATUS_STOPPING};\n    case SERVER_STOP_OK:\n      return {\n        ...state,\n        serverStatus: STATUS_STOPPED,\n        serverFailMsg: ''\n      };\n    case SERVER_STOP_FAIL:\n      return {\n        ...state,\n        serverStopping: false,\n        serverFailMsg: action.reason\n      };\n    case START_SESSION_REQUEST:\n      return {\n        ...state,\n        sessionStart: true,\n        sessionId: action.sessionUUID,\n      };\n    case LOGS_RECEIVED:\n      logLines = state.logLines.concat(action.logs.map((l) => {\n        // attach a timestamp to each log line here when it comes in\n        l.timestamp = moment().format('YYYY-MM-DD hh:mm:ss');\n        return l;\n      }));\n\n      // Don't log more than MAX_LOG_LINES\n      if (logLines.length > MAX_LOG_LINES) {\n        logLines = logLines.slice(logLines.length - MAX_LOG_LINES);\n      }\n\n      return {\n        ...state,\n        logLines,\n        serverStatus: STATUS_RUNNING\n      };\n    case LOGS_CLEARED:\n      return {\n        ...state,\n        logLines: []\n      };\n    case SET_SERVER_ARGS:\n      return {\n        ...state,\n        serverArgs: action.args\n      };\n    case MONITOR_CLOSED:\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Icon } from 'antd';\nimport { STATUS_RUNNING, STATUS_STOPPING,\n         STATUS_STOPPED } from '../../reducers/ServerMonitor';\nimport styles from './ServerMonitor.css';\nimport AnsiConverter from 'ansi-to-html';\nimport { withTranslation } from '../../util';\n\nimport AppiumSmallMagenta from '../../images/appium_small_magenta.png';\n\nconst convert = new AnsiConverter({fg: '#bbb', bg: '#222'});\nconst MAX_LOGS_RENDERED = 1000;\n\nfunction leveler (level) {\n  switch (level) {\n    case 'debug':\n      return 'message';\n    case 'warn':\n      return 'exclamation-circle';\n    case 'error':\n      return 'close-circle';\n    case 'silly':\n      return 'paper-clip';\n    case 'info':\n    default:\n      return 'info-circle';\n  }\n}\n\nclass StopButtonComponent extends Component {\n  render () {\n    const {serverStatus, stopServer, closeMonitor, t} = this.props;\n    let btn = <Tooltip title={t('Stop Server')}\n      placement=\"bottomLeft\">\n      <Button icon=\"pause\" className={styles.serverButton}\n        onClick={stopServer} />\n    </Tooltip>;\n    if (serverStatus === STATUS_STOPPED) {\n      btn = <Tooltip title={t('Close Logs')} placement=\"bottomLeft\">\n        <Button className={styles.serverButton}\n          icon=\"close\"\n          onClick={closeMonitor} />\n      </Tooltip>;\n    } else if (serverStatus === STATUS_STOPPING) {\n      btn = <Tooltip title={t('Stopping…')} visible={true}\n        placement=\"bottomLeft\">\n        <Button icon=\"pause\"\n          className={styles.serverButton} type=\"disabled\" />\n      </Tooltip>;\n    }\n    return btn;\n  }\n}\n\nStopButtonComponent.propTypes = {\n  serverStatus: PropTypes.string.isRequired,\n};\n\nconst StopButton = withTranslation(StopButtonComponent);\n\nclass StartSessionButtonComponent extends Component {\n  render () {\n    const {serverStatus, startSession, t} = this.props;\n    if (serverStatus !== STATUS_STOPPED && serverStatus !== STATUS_STOPPING) {\n      return <Tooltip title={t('Start Inspector Session')}>\n        <Button className={styles.serverButton} id='startNewSessionBtn'\n          icon=\"search\"\n          onClick={startSession} />\n      </Tooltip>;\n    } else {\n      return null;\n    }\n  }\n}\n\nStartSessionButtonComponent.propTypes = {\n  serverStatus: PropTypes.string.isRequired,\n  startSession: PropTypes.func.isRequired,\n};\n\nconst StartSessionButton = withTranslation(StartSessionButtonComponent);\n\nclass GetRawLogsButtonComponent extends Component {\n  render () {\n    const {t, getRawLogs} = this.props;\n    return <Tooltip title={t('Get Raw Logs')}>\n      <Button className={styles.serverButton}\n        icon=\"download\"\n        onClick={() => getRawLogs()} />\n    </Tooltip>;\n  }\n}\n\nconst GetRawLogsButton = withTranslation(GetRawLogsButtonComponent);\n\nexport default class ServerMonitor extends Component {\n\n  constructor (props) {\n    super(props);\n    this.keydownListener = this.keydownListener.bind(this);\n  }\n\n  keydownListener (e) {\n    if (e.key === 'k' && (e.metaKey || e.ctrlKey)) {\n      this.props.clearLogs();\n    }\n  }\n\n  componentDidMount () {\n    document.addEventListener('keydown', this.keydownListener);\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keydown', this.keydownListener);\n  }\n\n  componentWillUpdate () {\n    this.shouldScroll = false;\n    let n = this._term;\n    if (n) {\n      this.shouldScroll = n.scrollTop + n.offsetHeight >= n.scrollHeight;\n    }\n  }\n\n  componentDidUpdate () {\n    if (this._term && this.shouldScroll) {\n      this._term.scrollTop = this._term.scrollHeight;\n    }\n  }\n\n  render () {\n    const {logLines, serverStatus, serverArgs, t} = this.props;\n    let statusIcon, statusMsg;\n    switch (serverStatus) {\n      case STATUS_RUNNING:\n        statusIcon = 'play-circle';\n        statusMsg = t('The server is running');\n        break;\n      case STATUS_STOPPED:\n        statusIcon = 'pause-circle';\n        statusMsg = t('The server is stopped');\n        break;\n      case STATUS_STOPPING:\n        statusIcon = 'loading';\n        statusMsg = t('The server is waiting for all connections to close');\n        break;\n      default:\n        throw new Error(t('badStatus', {serverStatus}));\n    }\n\n    let logLineSection = logLines.slice(logLines.length - MAX_LOGS_RENDERED).map((line, i) => {\n      let icn = leveler(line.level);\n\n      return (\n        <div key={i}>\n          <Icon type={icn} theme=\"filled\" />\n          {\n            serverArgs.logTimestamp &&\n            // eslint-disable-next-line shopify/jsx-no-hardcoded-content\n            <span className={styles.timestamp}>\n              [{line.timestamp}]\n            </span>\n          }\n          <span dangerouslySetInnerHTML={{__html: convert.toHtml(line.msg)}} />\n        </div>\n      );\n    });\n\n    let termClass = styles.term;\n    if (serverStatus === STATUS_STOPPED || serverStatus === STATUS_STOPPING) {\n      termClass += ` ${styles['term-stopped']}`;\n    }\n\n    let lastSection = '';\n    if (serverStatus === STATUS_STOPPED) {\n      lastSection = <div className={styles.last} />;\n    }\n\n\n    return (\n      <div className={styles.container} id='serverMonitorContainer'>\n        <div className={`${styles.bar} ${styles['bar-' + serverStatus]}`}>\n          <img src={AppiumSmallMagenta} className={styles.logo} />\n          <div className={`${styles.status} ${styles[serverStatus]}`}>\n            <Icon type={statusIcon} theme=\"filled\" />\n            {statusMsg}\n          </div>\n          <div className={`${styles['button-container']}`}>\n            <StartSessionButton {...this.props} />\n            <GetRawLogsButton {...this.props} />\n            <StopButton {...this.props} />\n          </div>\n        </div>\n        <div className={termClass} ref={(c) => this._term = c}>\n          {logLineSection}\n          {lastSection}\n        </div>\n      </div>\n    );\n  }\n}\n\nServerMonitor.propTypes = {\n  stopServer: PropTypes.func.isRequired,\n  closeMonitor: PropTypes.func.isRequired,\n  serverStatus: PropTypes.string.isRequired,\n  logLines: PropTypes.array.isRequired,\n  startSession: PropTypes.func.isRequired,\n  serverArgs: PropTypes.object.isRequired,\n};\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as ServerActions from '../actions/ServerMonitor';\nimport ServerMonitor from '../components/ServerMonitor/ServerMonitor';\n\nfunction mapStateToProps (state) {\n  return state.serverMonitor;\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(ServerActions, dispatch);\n}\n\nexport default withTranslation(ServerMonitor, connect(mapStateToProps, mapDispatchToProps));\n","import React, { Component } from 'react';\nimport formatJSON from 'format-json';\nimport SessionCSS from './Session.css';\nimport { Card, Button, Alert, Tooltip } from 'antd';\nimport { getCapsObject } from '../../actions/Session.js';\nimport ClickOutside from 'react-click-outside-component';\n\nexport default class FormattedCaps extends Component {\n\n  getFormattedJSON (caps) {\n    return formatJSON.plain(getCapsObject(caps));\n  }\n\n  render () {\n    const {caps, title, isEditingDesiredCaps, startDesiredCapsEditor, abortDesiredCapsEditor, saveRawDesiredCaps, setRawDesiredCaps, rawDesiredCaps,\n           isValidCapsJson, invalidCapsJsonReason, t} = this.props;\n    return caps && <div className={SessionCSS.formattedCapsCont}>\n      <Card title={title || 'JSON Representation'} className={SessionCSS.formattedCaps}>\n        <ClickOutside onClickOutside={saveRawDesiredCaps}>\n          <div className={SessionCSS.capsEditorControls}>\n            {isEditingDesiredCaps && <Tooltip title={t('Cancel')}>\n              <Button onClick={abortDesiredCapsEditor} icon='close' className={SessionCSS.capsEditorButton} />\n            </Tooltip> }\n            {isEditingDesiredCaps && <Tooltip title={t('Save')}>\n              <Button onClick={saveRawDesiredCaps} icon='save' className={SessionCSS.capsEditorButton} />\n            </Tooltip>}\n            {!isEditingDesiredCaps && <Tooltip title={t('Edit Raw JSON')} placement=\"topRight\" >\n              <Button onClick={startDesiredCapsEditor} icon='edit' />\n            </Tooltip> }\n          </div>\n          {isEditingDesiredCaps && <div>\n            <textarea rows='9' onChange={(e) => setRawDesiredCaps(e.target.value)} value={rawDesiredCaps} className={SessionCSS.capsEditor} />\n            {!isValidCapsJson && <Alert message={invalidCapsJsonReason} type=\"error\" />}\n          </div>}\n          {!isEditingDesiredCaps && <div>\n            <pre>{this.getFormattedJSON(caps)}</pre>\n          </div>}\n        </ClickOutside>\n      </Card>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Input, Icon } from 'antd';\nimport SessionStyles from './Session.css';\nimport {remote} from 'electron';\nconst {dialog} = remote;\n\n\nexport default class NewSessionForm extends Component {\n\n  getLocalFilePath (success) {\n    dialog.showOpenDialog((filepath) => {\n      if (filepath) {\n        success(filepath);\n      }\n    });\n    this.handleSetType = this.handleSetType.bind(this);\n  }\n\n  render () {\n    const {cap, onSetCapabilityParam, isEditingDesiredCaps, id, t} = this.props;\n\n    const buttonAfter = <Icon className={SessionStyles['filepath-button']}\n      type=\"file\"\n      onClick={() => this.getLocalFilePath((filepath) => onSetCapabilityParam(filepath[0]))} />;\n\n    switch (cap.type) {\n      case 'text': return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value} onChange={(e) => onSetCapabilityParam(e.target.value)} />;\n      case 'boolean': return <Switch disabled={isEditingDesiredCaps} id={id} checkedChildren={'true'} unCheckedChildren={'false'}\n        placeholder={t('Value')} checked={cap.value} onChange={(value) => onSetCapabilityParam(value)} />;\n      case 'number': return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\n        onChange={(e) => !isNaN(parseInt(e.target.value, 10)) ? onSetCapabilityParam(parseInt(e.target.value, 10)) : onSetCapabilityParam(undefined)} />;\n      case 'object':\n      case 'json_object':\n        return <Input disabled={isEditingDesiredCaps} id={id} type='textarea' rows={4} placeholder={t('Value')} value={cap.value}\n          onChange={(e) => onSetCapabilityParam(e.target.value)} />;\n      case 'file': return <div className={SessionStyles.fileControlWrapper}>\n        <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value} addonAfter={buttonAfter} />\n      </div>;\n\n      default:\n        throw `Invalid cap type: ${cap.type}`;\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Input, Modal, Form, Row, Col, Select } from 'antd';\nimport FormattedCaps from './FormattedCaps';\nimport CapabilityControl from './CapabilityControl';\nimport SessionStyles from './Session.css';\nconst {Item: FormItem} = Form;\nconst {Option} = Select;\n\nexport default class NewSessionForm extends Component {\n\n  /**\n   * Callback when the type of a dcap is changed\n   */\n  handleSetType (index, type) {\n    let {setCapabilityParam, caps} = this.props;\n    setCapabilityParam(index, 'type', type);\n\n    // Translate the current value to the new type\n    let translatedValue = caps[index].value;\n    switch (type) {\n      case 'text':\n        translatedValue = translatedValue + '';\n        break;\n      case 'boolean':\n        if (translatedValue === 'true') {\n          translatedValue = true;\n        } else if (translatedValue === 'false') {\n          translatedValue = false;\n        } else {\n          translatedValue = !!translatedValue;\n        }\n        break;\n      case 'number':\n        translatedValue = parseInt(translatedValue, 10) || 0;\n        break;\n      case 'json_object':\n      case 'object':\n        translatedValue = translatedValue + '';\n        break;\n      case 'file':\n        translatedValue = '';\n        break;\n      default:\n        break;\n    }\n    setCapabilityParam(index, 'value', translatedValue);\n  }\n\n  render () {\n    const {setCapabilityParam, caps, addCapability, removeCapability, saveSession, hideSaveAsModal,\n           saveAsText, showSaveAsModal, setSaveAsText, isEditingDesiredCaps, t} = this.props;\n\n    return <div>\n      <Row type=\"flex\" align=\"top\" justify=\"start\" className={SessionStyles.capsFormRow}>\n        <Col order={1} span={12} className={`${SessionStyles.capsFormCol} ${isEditingDesiredCaps ? SessionStyles.capsFormDisabled : ''}`}>\n          <Form>\n            {caps.map((cap, index) => {\n              return <Row gutter={8} key={index}>\n                <Col span={7}>\n                  <FormItem>\n                    <Input disabled={isEditingDesiredCaps} id={`desiredCapabilityName_${index}`} placeholder={t('Name')}\n                      value={cap.name} onChange={(e) => setCapabilityParam(index, 'name', e.target.value)}/>\n                  </FormItem>\n                </Col>\n                <Col span={8}>\n                  <FormItem>\n                    <Select disabled={isEditingDesiredCaps} onChange={(val) => this.handleSetType(index, val)} defaultValue={cap.type}>\n                      <Option value='text'>{t('text')}</Option>\n                      <Option value='boolean'>{t('boolean')}</Option>\n                      <Option value='number'>{t('number')}</Option>\n                      <Option value='object'>{t('JSON object')}</Option>\n                      <Option value='file'>{t('filepath')}</Option>\n                    </Select>\n                  </FormItem>\n                </Col>\n                <Col span={7}>\n                  <FormItem>\n                    <CapabilityControl {...this.props} cap={cap} id={`desiredCapabilityValue_${index}`}\n                      onSetCapabilityParam={(value) => setCapabilityParam(index, 'value', value)} />\n                  </FormItem>\n                </Col>\n                <Col span={2}>\n                  <div className={SessionStyles.btnDeleteCap}>\n                    <FormItem>\n                      <Button {...{disabled: caps.length <= 1 || isEditingDesiredCaps}} icon='delete' onClick={() => removeCapability(index)}/>\n                    </FormItem>\n                  </div>\n                </Col>\n              </Row>;\n            })}\n            <Row>\n              <Col span={24}>\n                <FormItem>\n                  <Button disabled={isEditingDesiredCaps} id='btnAddDesiredCapability' icon='plus' onClick={addCapability} className={SessionStyles['add-desired-capability-button']} />\n                </FormItem>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n        <Col order={2} span={12} className={SessionStyles.capsFormattedCol}>\n          <FormattedCaps {...this.props} />\n          <Modal visible={showSaveAsModal}\n            title={t('Save Capability Set As')}\n            okText='Save'\n            cancelText='Cancel'\n            onCancel={hideSaveAsModal}\n            onOk={() => saveSession(caps, {name: saveAsText})}>\n            <Input onChange={(e) => setSaveAsText(e.target.value)} addonBefore={t('Name')} value={saveAsText}/>\n          </Modal>\n        </Col>\n      </Row>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Button, Row, Col, Table } from 'antd';\nimport FormattedCaps from './FormattedCaps';\nimport SessionCSS from './Session.css';\n\n\nexport default class SavedSessions extends Component {\n\n\n  constructor (props) {\n    super(props);\n    this.onRowClick = this.onRowClick.bind(this);\n    this.getRowClassName = this.getRowClassName.bind(this);\n  }\n\n  onRowClick (record) {\n    const {setCaps} = this.props;\n    let session = this.sessionFromUUID(record.key);\n    setCaps(session.caps, session.uuid);\n  }\n\n  getRowClassName (record) {\n    const {capsUUID} = this.props;\n    return capsUUID === record.key ? SessionCSS.selected : '';\n  }\n\n  handleDelete (uuid) {\n    return () => {\n      if (window.confirm('Are you sure?')) {\n        this.props.deleteSavedSession(uuid);\n      }\n    };\n  }\n\n  sessionFromUUID (uuid) {\n    const {savedSessions} = this.props;\n    for (let session of savedSessions) {\n      if (session.uuid === uuid) {\n        return session;\n      }\n    }\n    throw new Error(`Couldn't find session with uuid ${uuid}`);\n  }\n\n  render () {\n    const {savedSessions, setCaps, capsUUID, switchTabs} = this.props;\n\n    const columns = [{\n      title: 'Capability Set',\n      dataIndex: 'name',\n      key: 'name'\n    }, {\n      title: 'Created',\n      dataIndex: 'date',\n      key: 'date'\n    }, {\n      title: 'Actions',\n      key: 'action',\n      render: (text, record) => {\n        let session = this.sessionFromUUID(record.key);\n        return (\n          <div>\n            <Button icon='edit'\n              onClick={() => {setCaps(session.caps, session.uuid); switchTabs('new');}}\n              className={SessionCSS['edit-session']}\n            />\n            <Button icon='delete' onClick={this.handleDelete(session.uuid)}/>\n          </div>\n        );\n      }\n    }];\n\n    let dataSource = [];\n    if (savedSessions) {\n      dataSource = savedSessions.map((session) => {\n        return {\n          key: session.uuid,\n          name: (session.name || '(Unnamed)'),\n          date: moment(session.date).format('YYYY-MM-DD')\n        };\n      });\n    }\n\n\n    return (<Row gutter={20} className={SessionCSS['saved-sessions']}>\n      <Col span={12}>\n        <Table pagination={false}\n          dataSource={dataSource}\n          columns={columns}\n          onRowClick={this.onRowClick}\n          rowClassName={this.getRowClassName}\n        />\n      </Col>\n      <Col span={12}>\n        <FormattedCaps {...this.props}\n          title={capsUUID ? this.sessionFromUUID(capsUUID).name : null}\n        />\n      </Col>\n    </Row>);\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, Select, Button, Row, Col } from 'antd';\nimport SessionCSS from './Session.css';\n\nconst FormItem = Form.Item;\n\nfunction formatCaps (caps) {\n  let importantCaps = [caps.app, caps.platformName, caps.deviceName];\n  if (caps.automationName) {\n    importantCaps.push(caps.automationName);\n  }\n  return importantCaps.join(', ').trim();\n}\n\nexport default class AttachToSession extends Component {\n\n  getSessionInfo (session) {\n    return `${session.id} — ${formatCaps(session.capabilities)}`;\n  }\n\n  render () {\n    let {attachSessId, setAttachSessId, runningAppiumSessions, getRunningSessions, t} = this.props;\n    attachSessId = attachSessId || '';\n    return (<Form>\n      <FormItem>\n        <Card>\n          <p className={SessionCSS.localDesc}>{t('connectToExistingSessionInstructions')}<br/>{t('selectSessionIDInDropdown')}</p>\n        </Card>\n      </FormItem>\n      <FormItem>\n        <Row>\n          <Col span={23}>\n            <Select showSearch\n              mode='combobox'\n              notFoundContent='None found'\n              placeholder={t('enterYourSessionId')}\n              value={attachSessId}\n              onChange={(value) => setAttachSessId(value)}>\n              {runningAppiumSessions.map((session) => <Select.Option key={session.id} value={session.id}>\n                <div>{this.getSessionInfo(session)}</div>\n              </Select.Option>)}\n            </Select>\n          </Col>\n          <Col span={1}>\n            <div className={SessionCSS.btnReload}>\n              <Button onClick={getRunningSessions} icon='reload' />\n            </div>\n          </Col>\n        </Row>\n      </FormItem>\n    </Form>);\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card } from 'antd';\nimport SessionStyles from './Session.css';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabSauce extends Component {\n\n  render () {\n\n    const {server, t} = this.props;\n\n    const hostname = `http://${server.local.hostname === '0.0.0.0' ? 'localhost' : server.local.hostname}:${server.local.port}`;\n\n    return <Form>\n      <FormItem>\n        <Card>\n          {server.local.port && <p className={SessionStyles.localDesc}>{t('willUseCurrentlyRunningServer')} <b>{hostname}</b>\n          </p>}\n        </Card>\n      </FormItem>\n    </Form>;\n  }\n}\n\n","import React, { Component } from 'react';\nimport { Form, Row, Col, Input, Checkbox } from 'antd';\n\nconst FormItem = Form.Item;\n\nexport default class ServerTabCustom extends Component {\n\n  render () {\n\n    const {server, setServerParam, t} = this.props;\n\n    const localhostIp = '127.0.0.1';\n    const defaultServerPath = '/wd/hub';\n\n    return <Form>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='customServerHost' placeholder={localhostIp} addonBefore={t('Remote Host')} value={server.remote.hostname}\n              onChange={(e) => setServerParam('hostname', e.target.value)} />\n          </FormItem>\n        </Col>\n        <Col span={12}>\n          <FormItem>\n            <Input id='customServerPort' placeholder={4723} addonBefore={t('Remote Port')} value={server.remote.port}\n              onChange={(e) => setServerParam('port', e.target.value)} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={12}>\n          <FormItem>\n            <Input id='customServerPath' placeholder={defaultServerPath} addonBefore={t('Remote Path')} value={server.remote.path}\n              onChange={(e) => setServerParam('path', e.target.value)} />\n          </FormItem>\n        </Col>\n        <Col span={3}>\n          <FormItem>\n            <Checkbox id='customServerSSL' checked={!!server.remote.ssl} value={server.remote.ssl} onChange={(e) => setServerParam('ssl', e.target.checked)}>{t('SSL')}</Checkbox>\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Collapse, Form, Row, Col, Checkbox, Input } from 'antd';\nimport styles from './Session.css';\n\nconst {Panel} = Collapse;\nconst FormItem = Form.Item;\n\nexport default class AdvancedServerParams extends Component {\n\n\n  render () {\n    const {server, setServerParam, t} = this.props;\n\n    return <Row gutter={8}>\n      <Col>\n        <div className={styles.advancedSettingsContainer}>\n          <Collapse bordered={true}>\n            <Panel header={t('Advanced Settings')}>\n              <Col span={6}>\n                <FormItem>\n                  <Checkbox checked={!!server.advanced.allowUnauthorized} onChange={(e) => setServerParam('allowUnauthorized', e.target.checked, 'advanced')}>{t('allowUnauthorizedCerts')}</Checkbox>\n                </FormItem>\n              </Col>\n              <Col span={4}>\n                <FormItem>\n                  <Checkbox checked={!!server.advanced.useProxy} onChange={(e) => setServerParam('useProxy', e.target.checked, 'advanced')}>{t('Use Proxy')}</Checkbox>\n                </FormItem>\n              </Col>\n              <Col span={6}>\n                <FormItem>\n                  <Input disabled={!server.advanced.useProxy} onChange={(e) => setServerParam('proxy', e.target.value, 'advanced')}\n                    placeholder={t('Proxy URL')} value={server.advanced.proxy} />\n                </FormItem>\n              </Col>\n            </Panel>\n          </Collapse>\n        </div>\n      </Col>\n    </Row>;\n  }\n}\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Modal, Row, Col, Button } from 'antd';\nimport CloudProviders from './CloudProviders';\nimport SessionStyles from './Session.css';\n\nexport default class CloudProviderSelector extends Component {\n\n  componentWillMount () {\n    const {setLocalServerParams, getSavedSessions, setSavedServerParams, getRunningSessions} = this.props;\n    (async () => {\n      await getSavedSessions();\n      await setSavedServerParams();\n      await setLocalServerParams();\n      getRunningSessions();\n    })();\n  }\n\n  toggleVisibleProvider (providerName) {\n    const {addVisibleProvider, removeVisibleProvider, visibleProviders = []} = this.props;\n    if (visibleProviders.includes(providerName)) {\n      removeVisibleProvider(providerName);\n    } else {\n      addVisibleProvider(providerName);\n    }\n  }\n\n  handleCloseModal () {\n    const {stopAddCloudProvider} = this.props;\n    stopAddCloudProvider();\n  }\n\n  render () {\n    const {t, isAddingCloudProvider, stopAddCloudProvider, visibleProviders = []} = this.props;\n    const providersGrid = _.chunk(_.keys(CloudProviders), 2); // Converts list of providers into list of pairs of providers\n    const footer = [<Button key=\"back\" type=\"primary\" onClick={stopAddCloudProvider}>{t('Done')}</Button>];\n\n    return <Modal key=\"modal\"\n      className={SessionStyles.cloudProviderModal}\n      visible={isAddingCloudProvider}\n      onCancel={stopAddCloudProvider}\n      footer={footer}\n      title={t('Select Cloud Providers')}>\n      {[\n        ..._.map(providersGrid, (row, key) => {\n          return <Row gutter={16} key={key}>{\n            [\n              ..._(row).map((providerName) => {\n                const providerIsVisible = visibleProviders.includes(providerName);\n                const style = {};\n                if (providerIsVisible) {\n                  style.borderColor = '#40a9ff';\n                }\n                const provider = CloudProviders[providerName];\n                return provider && <Col span={12} key={providerName}>\n                  <Button role=\"checkbox\" style={style} onClick={() => this.toggleVisibleProvider(providerName)}><img src={provider.logo} /></Button>\n                </Col>;\n              })\n            ]\n          }</Row>;\n        })\n      ]}\n    </Modal>;\n  }\n}\n","import { shell } from 'electron';\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport NewSessionForm from './NewSessionForm';\nimport SavedSessions from './SavedSessions';\nimport AttachToSession from './AttachToSession';\nimport ServerTabAutomatic from './ServerTabAutomatic';\nimport ServerTabCustom from './ServerTabCustom';\nimport { Tabs, Button, Spin, Icon } from 'antd';\nimport AdvancedServerParams from './AdvancedServerParams';\nimport SessionStyles from './Session.css';\nimport CloudProviders from './CloudProviders';\nimport CloudProviderSelector from './CloudProviderSelector';\n\nconst {TabPane} = Tabs;\n\nconst ADD_CLOUD_PROVIDER = 'addCloudProvider';\n\nexport default class Session extends Component {\n\n  componentWillMount () {\n    const {setLocalServerParams, getSavedSessions, setSavedServerParams, setVisibleProviders, getRunningSessions} = this.props;\n    (async () => {\n      await getSavedSessions();\n      await setSavedServerParams();\n      await setLocalServerParams();\n      await setVisibleProviders();\n      getRunningSessions();\n    })();\n  }\n\n  async handleSelectServerTab (tab) {\n    const {changeServerType, addCloudProvider} = this.props;\n    if (tab === ADD_CLOUD_PROVIDER) {\n      addCloudProvider();\n      return;\n    }\n    await changeServerType(tab);\n  }\n\n  removeCloudProvider (providerName) {\n    const {removeVisibleProvider} = this.props;\n    removeVisibleProvider(providerName);\n  }\n\n  render () {\n    const {newSessionBegan, savedSessions, tabKey, switchTabs,\n           serverType, server,\n           requestSaveAsModal, newSession, caps, capsUUID, saveSession,\n           visibleProviders = [],\n           isCapsDirty, sessionLoading, attachSessId, t} = this.props;\n\n    const isAttaching = tabKey === 'attach';\n\n    return [\n      <Spin spinning={!!sessionLoading} key=\"main\">\n        <div className={SessionStyles.sessionContainer}>\n          <div id='serverTypeTabs' className={SessionStyles.serverTab}>\n            <Tabs activeKey={serverType} onChange={(tab) => this.handleSelectServerTab(tab)} className={SessionStyles.serverTabs}>\n              {[\n                <TabPane disabled={!server.local.port} tab={t('Automatic Server')} key=\"local\">\n                  <ServerTabAutomatic {...this.props} />\n                </TabPane>,\n                <TabPane tab={t('Custom Server')} key=\"remote\">\n                  <ServerTabCustom {...this.props} />\n                </TabPane>,\n                ..._(visibleProviders).map((providerName) => {\n                  const provider = CloudProviders[providerName];\n                  if (!provider) {\n                    return true;\n                  }\n\n                  return <TabPane key={providerName} tab={<div>{provider.tabhead()}</div>}>\n                    {provider.tab(this.props)}\n                  </TabPane>;\n                }),\n                <TabPane tab={<span className='addCloudProviderTab'>{ t('Select Cloud Providers') }</span>} key={ADD_CLOUD_PROVIDER}></TabPane>\n              ]}\n            </Tabs>\n            <AdvancedServerParams {...this.props} />\n          </div>\n\n\n          {newSessionBegan && <div key={2}>\n            <p>{t('sessionInProgress')}</p>\n          </div>}\n\n          {!newSessionBegan && <Tabs activeKey={tabKey} onChange={switchTabs} className={SessionStyles.scrollingTabCont}>\n            <TabPane tab={t('Desired Capabilities')} key='new' className={SessionStyles.scrollingTab}>\n              <NewSessionForm {...this.props} />\n            </TabPane>\n            <TabPane tab={t('Saved Capability Sets', {savedSessionsCount: savedSessions.length})} key='saved' className={SessionStyles.scrollingTab} disabled={savedSessions.length === 0}>\n              <SavedSessions {...this.props} />\n            </TabPane>\n            <TabPane tab={t('Attach to Session')} key='attach' className={SessionStyles.scrollingTab}>\n              <AttachToSession {...this.props} />\n            </TabPane>\n          </Tabs>}\n          <div className={SessionStyles.sessionFooter}>\n            <div className={SessionStyles.desiredCapsLink}>\n              <a href=\"#\" onClick={(e) => e.preventDefault() || shell.openExternal('https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/caps.md')}>\n                <Icon type='link' />&nbsp;\n                {t('desiredCapabilitiesDocumentation')}\n              </a>\n            </div>\n            { (!isAttaching && capsUUID) && <Button onClick={() => saveSession(caps, {uuid: capsUUID})} disabled={!isCapsDirty}>{t('Save')}</Button> }\n            {!isAttaching && <Button onClick={requestSaveAsModal}>{t('saveAs')}</Button>}\n            {!isAttaching && <Button type=\"primary\" id='btnStartSession'\n              onClick={() => newSession(caps)} className={SessionStyles['start-session-button']}>{t('startSession')}</Button>\n            }\n            {isAttaching &&\n              <Button type=\"primary\" disabled={!attachSessId} onClick={() => newSession(null, attachSessId)}>\n                {t('attachToSession')}\n              </Button>\n            }\n          </div>\n        </div>\n      </Spin>,\n      <CloudProviderSelector {...this.props} />\n    ];\n  }\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as SessionActions from '../actions/Session';\nimport Session from '../components/Session/Session';\n\nfunction mapStateToProps (state) {\n  return state.session;\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(SessionActions, dispatch);\n}\n\nexport default withTranslation(Session, connect(mapStateToProps, mapDispatchToProps));\n","import React, { Component } from 'react';\nimport InspectorCSS from './Inspector.css';\nimport { parseCoordinates } from './shared';\n\n/**\n * Absolute positioned divs that overlay the app screenshot and highlight the bounding\n * boxes of the elements in the app\n */\nexport default class HighlighterRect extends Component {\n\n  render () {\n    const {selectedElement = {}, selectHoveredElement, unselectHoveredElement, hoveredElement = {}, selectElement, unselectElement, element,\n           zIndex, scaleRatio, xOffset, elLocation, elSize} = this.props;\n    const {path: hoveredPath} = hoveredElement;\n    const {path: selectedPath} = selectedElement;\n\n    let width, height, left, top, highlighterClasses, key;\n    highlighterClasses = [InspectorCSS['highlighter-box']];\n\n    if (element) {\n      // Calculate left, top, width and height coordinates\n      const {x1, y1, x2, y2} = parseCoordinates(element);\n      left = x1 / scaleRatio + xOffset;\n      top = y1 / scaleRatio;\n      width = (x2 - x1) / scaleRatio;\n      height = (y2 - y1) / scaleRatio;\n\n      // Add class + special classes to hovered and selected elements\n      if (hoveredPath === element.path) {\n        highlighterClasses.push(InspectorCSS['hovered-element-box']);\n      }\n      if (selectedPath === element.path) {\n        highlighterClasses.push(InspectorCSS['inspected-element-box']);\n      }\n      key = element.path;\n    } else if (elLocation && elSize) {\n      width = elSize.width / scaleRatio;\n      height = elSize.height / scaleRatio;\n      top = elLocation.y / scaleRatio;\n      left = elLocation.x / scaleRatio + xOffset;\n      key = 'searchedForElement';\n      highlighterClasses.push(InspectorCSS['inspected-element-box']);\n    }\n\n    return <div className={highlighterClasses.join(' ').trim()}\n      onMouseOver={() => selectHoveredElement(key)}\n      onMouseOut={unselectHoveredElement}\n      onClick={() => key === selectedPath ? unselectElement() : selectElement(key)}\n      key={key}\n      style={{zIndex, left: (left || 0), top: (top || 0), width: (width || 0), height: (height || 0)}}>\n      <div></div>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport { debounce } from 'lodash';\nimport HighlighterRect from './HighlighterRect';\nimport B from 'bluebird';\nimport { SCREENSHOT_INTERACTION_MODE } from './shared';\n\nconst {TAP, SWIPE, SELECT} = SCREENSHOT_INTERACTION_MODE;\n\n/**\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\n */\nexport default class HighlighterRects extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      scaleRatio: 1,\n    };\n    this.updateScaleRatio = debounce(this.updateScaleRatio.bind(this), 1000);\n  }\n\n  /**\n   * Calculates the ratio that the image is being scaled by\n   */\n  updateScaleRatio () {\n    const screenshotEl = this.props.containerEl.querySelector('img');\n\n    // now update scale ratio\n    this.setState({\n      scaleRatio: (this.props.windowSize.width / screenshotEl.offsetWidth)\n    });\n\n  }\n\n  async handleScreenshotClick () {\n    const {screenshotInteractionMode, applyClientMethod,\n           swipeStart, swipeEnd, setSwipeStart, setSwipeEnd} = this.props;\n    const {x, y} = this.state;\n\n    if (screenshotInteractionMode === TAP) {\n      applyClientMethod({\n        methodName: TAP,\n        args: [x, y],\n      });\n    } else if (screenshotInteractionMode === SWIPE) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500); // Wait a second to do the swipe so user can see the SVG line\n        await this.handleDoSwipe();\n      }\n    }\n  }\n\n  handleMouseMove (e) {\n    const {screenshotInteractionMode} = this.props;\n    const {scaleRatio} = this.state;\n\n    if (screenshotInteractionMode !== SELECT) {\n      const offsetX = e.nativeEvent.offsetX;\n      const offsetY = e.nativeEvent.offsetY;\n      const x = offsetX * scaleRatio;\n      const y = offsetY * scaleRatio;\n      this.setState({\n        ...this.state,\n        x: Math.round(x),\n        y: Math.round(y),\n      });\n    }\n  }\n\n  handleMouseOut () {\n    this.setState({\n      ...this.state,\n      x: null,\n      y: null,\n    });\n  }\n\n  async handleDoSwipe () {\n    const {swipeStart, swipeEnd, clearSwipeAction, applyClientMethod} = this.props;\n    await applyClientMethod({\n      methodName: 'swipe',\n      args: [swipeStart.x, swipeStart.y, swipeEnd.x, swipeEnd.y],\n    });\n    clearSwipeAction();\n  }\n\n  componentDidMount () {\n    // When DOM is ready, calculate the image scale ratio and re-calculate it whenever the window is resized\n    this.updateScaleRatio();\n    window.addEventListener('resize', this.updateScaleRatio);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.updateScaleRatio);\n  }\n\n  render () {\n    const {source, screenshotInteractionMode, containerEl, searchedForElementBounds, isLocatorTestModalVisible} = this.props;\n    const {scaleRatio} = this.state;\n\n    // Recurse through the 'source' JSON and render a highlighter rect for each element\n    const highlighterRects = [];\n\n    let highlighterXOffset = 0;\n    if (containerEl) {\n      const screenshotEl = containerEl.querySelector('img');\n      highlighterXOffset = screenshotEl.getBoundingClientRect().left -\n                           containerEl.getBoundingClientRect().left;\n    }\n\n    let recursive = (element, zIndex = 0) => {\n      if (!element) {\n        return;\n      }\n      highlighterRects.push(<HighlighterRect {...this.props}\n        element={element}\n        zIndex={zIndex}\n        scaleRatio={scaleRatio}\n        key={element.path}\n        xOffset={highlighterXOffset}\n      />);\n\n      for (let childEl of element.children) {\n        recursive(childEl, zIndex + 1);\n      }\n    };\n\n    // If the use selected an element that they searched for, highlight that element\n    if (searchedForElementBounds && isLocatorTestModalVisible) {\n      const {location: elLocation, size} = searchedForElementBounds;\n      highlighterRects.push(<HighlighterRect elSize={size} elLocation={elLocation} scaleRatio={scaleRatio} xOffset={highlighterXOffset} />);\n    }\n\n    // If we're tapping or swiping, show the 'crosshair' cursor style\n    const screenshotStyle = {};\n    if ([TAP, SWIPE].includes(screenshotInteractionMode)) {\n      screenshotStyle.cursor = 'crosshair';\n    }\n\n    // Don't show highlighter rects when Search Elements modal is open\n    if (!isLocatorTestModalVisible) {\n      recursive(source);\n    }\n\n    return <div>{ highlighterRects }</div>;\n  }\n}\n","import React, { Component } from 'react';\nimport { debounce } from 'lodash';\nimport HighlighterRects from './HighlighterRects';\nimport { Spin, Tooltip } from 'antd';\nimport B from 'bluebird';\nimport styles from './Inspector.css';\nimport { SCREENSHOT_INTERACTION_MODE } from './shared';\nimport { withTranslation } from '../../util';\n\nconst {TAP, SELECT, SWIPE} = SCREENSHOT_INTERACTION_MODE;\n\n/**\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\n */\nclass Screenshot extends Component {\n\n  constructor (props) {\n    super(props);\n    this.containerEl = null;\n    this.state = {\n      scaleRatio: 1,\n      x: null,\n      y: null,\n    };\n    this.updateScaleRatio = debounce(this.updateScaleRatio.bind(this), 1000);\n  }\n\n  /**\n   * Calculates the ratio that the image is being scaled by\n   */\n  updateScaleRatio () {\n    const screenshotEl = this.containerEl.querySelector('img');\n\n    // now update scale ratio\n    this.setState({\n      scaleRatio: (this.props.windowSize.width / screenshotEl.offsetWidth)\n    });\n  }\n\n  async handleScreenshotClick () {\n    const {screenshotInteractionMode, applyClientMethod,\n           swipeStart, swipeEnd, setSwipeStart, setSwipeEnd} = this.props;\n    const {x, y} = this.state;\n\n    if (screenshotInteractionMode === TAP) {\n      applyClientMethod({\n        methodName: 'tap',\n        args: [x, y],\n      });\n    } else if (screenshotInteractionMode === SWIPE) {\n      if (!swipeStart) {\n        setSwipeStart(x, y);\n      } else if (!swipeEnd) {\n        setSwipeEnd(x, y);\n        await B.delay(500); // Wait a second to do the swipe so user can see the SVG line\n        await this.handleDoSwipe();\n      }\n    }\n  }\n\n  handleMouseMove (e) {\n    const {screenshotInteractionMode} = this.props;\n    const {scaleRatio} = this.state;\n\n    if (screenshotInteractionMode !== SELECT) {\n      const offsetX = e.nativeEvent.offsetX;\n      const offsetY = e.nativeEvent.offsetY;\n      const x = offsetX * scaleRatio;\n      const y = offsetY * scaleRatio;\n      this.setState({\n        ...this.state,\n        x: Math.round(x),\n        y: Math.round(y),\n      });\n    }\n  }\n\n  handleMouseOut () {\n    this.setState({\n      ...this.state,\n      x: null,\n      y: null,\n    });\n  }\n\n  async handleDoSwipe () {\n    const {swipeStart, swipeEnd, clearSwipeAction, applyClientMethod} = this.props;\n    await applyClientMethod({\n      methodName: 'swipe',\n      args: [swipeStart.x, swipeStart.y, swipeEnd.x, swipeEnd.y],\n    });\n    clearSwipeAction();\n  }\n\n  componentDidMount () {\n    // When DOM is ready, calculate the image scale ratio and re-calculate it whenever the window is resized\n    this.updateScaleRatio();\n    window.addEventListener('resize', this.updateScaleRatio);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.updateScaleRatio);\n  }\n\n  render () {\n    const {\n      screenshot,\n      methodCallInProgress,\n      screenshotInteractionMode,\n      swipeStart,\n      swipeEnd,\n      t,\n    } = this.props;\n    const {scaleRatio, x, y} = this.state;\n\n    // If we're tapping or swiping, show the 'crosshair' cursor style\n    const screenshotStyle = {};\n    if ([TAP, SWIPE].includes(screenshotInteractionMode)) {\n      screenshotStyle.cursor = 'crosshair';\n    }\n\n    let swipeInstructions = null;\n    if (screenshotInteractionMode === SWIPE && (!swipeStart || !swipeEnd)) {\n      if (!swipeStart) {\n        swipeInstructions = t('Click swipe start point');\n      } else if (!swipeEnd) {\n        swipeInstructions = t('Click swipe end point');\n      }\n    }\n\n    const screenImg = <img src={`data:image/gif;base64,${screenshot}`} id=\"screenshot\" />;\n\n    // Show the screenshot and highlighter rects. Show loading indicator if a method call is in progress.\n    return <Spin size='large' spinning={!!methodCallInProgress}>\n      <div className={styles.innerScreenshotContainer}>\n        <div ref={(containerEl) => { this.containerEl = containerEl; }}\n          style={screenshotStyle}\n          onClick={this.handleScreenshotClick.bind(this)}\n          onMouseMove={this.handleMouseMove.bind(this)}\n          onMouseOut={this.handleMouseOut.bind(this)}\n          className={styles.screenshotBox}>\n          {x !== null && <div className={styles.coordinatesContainer}>\n            <p>{t('xCoordinate', {x})}</p>\n            <p>{t('yCoordinate', {y})}</p>\n          </div>}\n          {swipeInstructions && <Tooltip visible={true} placement=\"top\" title={swipeInstructions}>{screenImg}</Tooltip>}\n          {!swipeInstructions && screenImg}\n          {screenshotInteractionMode === SELECT && this.containerEl && <HighlighterRects {...this.props} containerEl={this.containerEl} />}\n          {screenshotInteractionMode === SWIPE &&\n            <svg className={styles.swipeSvg}>\n              {swipeStart && !swipeEnd && <circle\n                cx={swipeStart.x / scaleRatio}\n                cy={swipeStart.y / scaleRatio}\n              />}\n              {swipeStart && swipeEnd && <line\n                x1={swipeStart.x / scaleRatio}\n                y1={swipeStart.y / scaleRatio}\n                x2={swipeEnd.x / scaleRatio}\n                y2={swipeEnd.y / scaleRatio}\n              />}\n            </svg>\n          }\n        </div>\n      </div>\n    </Spin>;\n  }\n}\n\nexport default withTranslation(Screenshot);\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { getLocators } from './shared';\nimport styles from './Inspector.css';\nimport { Button, Row, Col, Input, Modal, Table, Alert, Tooltip } from 'antd';\nimport { withTranslation } from '../../util';\nimport { clipboard } from 'electron';\n\nconst ButtonGroup = Button.Group;\n\n/**\n * Shows details of the currently selected element and shows methods that can\n * be called on the elements (tap, sendKeys)\n */\nclass SelectedElement extends Component {\n\n  constructor (props) {\n    super(props);\n    this.handleSendKeys = this.handleSendKeys.bind(this);\n  }\n\n  handleSendKeys () {\n    const {sendKeys, applyClientMethod, hideSendKeysModal, selectedElementId: elementId} = this.props;\n    applyClientMethod({methodName: 'sendKeys', elementId, args: [sendKeys]});\n    hideSendKeysModal();\n  }\n\n  render () {\n    const {\n      applyClientMethod,\n      setFieldValue,\n      sendKeys,\n      selectedElement,\n      sendKeysModalVisible,\n      showSendKeysModal,\n      hideSendKeysModal,\n      selectedElementId: elementId,\n      sourceXML,\n      elementInteractionsNotAvailable,\n      t,\n    } = this.props;\n    const {attributes, xpath} = selectedElement;\n\n    // Get the columns for the attributes table\n    let attributeColumns = [{\n      title: t('Attribute'),\n      dataIndex: 'name',\n      key: 'name',\n      width: 100\n    }, {\n      title: t('Value'),\n      dataIndex: 'value',\n      key: 'value'\n    }];\n\n    // Get the data for the attributes table\n    let attrArray = _.toPairs(attributes).filter(([key]) => key !== 'path');\n    let dataSource = attrArray.map(([key, value]) => ({\n      key,\n      value,\n      name: key,\n    }));\n    dataSource.unshift({key: 'elementId', value: elementId, name: 'elementId'});\n\n    // Get the columns for the strategies table\n    let findColumns = [{\n      title: t('Find By'),\n      dataIndex: 'find',\n      key: 'find',\n      width: 100\n    }, {\n      title: t('Selector'),\n      dataIndex: 'selector',\n      key: 'selector'\n    }];\n\n    // Get the data for the strategies table\n    let findDataSource = _.toPairs(getLocators(attributes, sourceXML)).map(([key, selector]) => ({\n      key,\n      selector,\n      find: key,\n    }));\n\n    // If XPath is the only provided data source, warn the user about it's brittleness\n    let showXpathWarning = false;\n    if (findDataSource.length === 0) {\n      showXpathWarning = true;\n    }\n\n    // Add XPath to the data source as well\n    if (xpath) {\n      findDataSource.push({\n        key: 'xpath',\n        find: 'xpath',\n        selector: xpath,\n      });\n    }\n\n    return <div>\n      {elementInteractionsNotAvailable && <Row type=\"flex\" gutter={10}>\n        <Col>\n          <Alert type=\"info\" message={t('Interactions are not available for this element')} showIcon />\n        </Col>\n      </Row>}\n      <Row justify=\"center\" type=\"flex\" align=\"middle\" gutter={10} className={styles.elementActions}>\n        <Col>\n          <ButtonGroup size=\"small\">\n            <Button\n              disabled={!elementId}\n              icon={!elementInteractionsNotAvailable && !elementId && 'loading'}\n              id='btnTapElement'\n              onClick={() => applyClientMethod({methodName: 'click', elementId})}\n            >\n              {t('Tap')}\n            </Button>\n            <Button\n              disabled={!elementId}\n              id='btnSendKeysToElement'\n              onClick={() => showSendKeysModal()}\n            >\n              {t('Send Keys')}\n            </Button>\n            <Button\n              disabled={!elementId}\n              id='btnClearElement'\n              onClick={() => applyClientMethod({methodName: 'clear', elementId})}\n            >\n              {t('Clear')}\n            </Button>\n            <Tooltip title={t('Copy Attributes to Clipboard')}>\n              <Button\n                disabled={!elementId}\n                id='btnCopyAttributes' icon=\"copy\"\n                onClick={() => clipboard.writeText(JSON.stringify(dataSource))}/>\n            </Tooltip>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      {findDataSource.length > 0 &&\n        <Table\n          columns={findColumns}\n          dataSource={findDataSource}\n          size=\"small\"\n          pagination={false}\n        />}\n      <br />\n      {showXpathWarning &&\n        <div>\n          <Alert\n            message={t('usingXPathNotRecommended')}\n            type=\"warning\"\n            showIcon\n          />\n          <br />\n        </div>\n      }\n      {dataSource.length > 0 &&\n      <Row>\n        <Table columns={attributeColumns} dataSource={dataSource} size=\"small\" pagination={false} />\n      </Row>\n      }\n      <Modal title={t('Send Keys')}\n        visible={sendKeysModalVisible}\n        okText={t('Send Keys')}\n        cancelText={t('Cancel')}\n        onCancel={hideSendKeysModal}\n        onOk={this.handleSendKeys}\n      >\n        <Input\n          placeholder={t('Enter keys')}\n          value={sendKeys}\n          onChange={(e) => setFieldValue('sendKeys', e.target.value)}\n        />\n      </Modal>\n    </div>;\n  }\n}\n\nexport default withTranslation(SelectedElement);\n","import React, { Component } from 'react';\nimport { clipboard } from 'electron';\nimport { Input, Row, Col, Button } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport { withTranslation } from '../../util';\n\nclass LocatedElements extends Component {\n\n  onSubmit () {\n    const {locatedElements, locatorTestStrategy, locatorTestValue, searchForElement, clearSearchResults, hideLocatorTestModal} = this.props;\n    if (locatedElements) {\n      hideLocatorTestModal();\n      clearSearchResults();\n    } else {\n      searchForElement(locatorTestStrategy, locatorTestValue);\n    }\n  }\n\n  onCancel () {\n    const {hideLocatorTestModal, clearSearchResults} = this.props;\n    hideLocatorTestModal();\n    clearSearchResults();\n  }\n\n  render () {\n    const {\n      locatedElements,\n      applyClientMethod,\n      setLocatorTestElement,\n      locatorTestElement,\n      clearSearchResults,\n      t,\n    } = this.props;\n\n    return <Row>\n      <p className={InspectorStyles['back-link-container']}>\n        <a onClick={(e) => e.preventDefault() || clearSearchResults()}>{t('back')}</a>\n      </p>\n      {t('elementsCount', {elementCount: locatedElements.length})}\n      <Col>\n        <select className={InspectorStyles['locator-search-results']}\n          multiple='true'\n          onChange={(e) => setLocatorTestElement(e.target.value)}\n          value={[locatorTestElement]}>\n          {locatedElements.map((elementId) => (\n            <option key={elementId} value={elementId}>{elementId}</option>\n          ))}\n          {locatedElements.length === 0 && <option disabled>{t('couldNotFindAnyElements')}</option>}\n        </select>\n        {locatedElements.length > 0 && <div className={InspectorStyles['locator-test-interactions-container']}>\n          <div>\n            <Button size='small'\n              disabled={!locatorTestElement}\n              onClick={() => clipboard.writeText(locatorTestElement)}\n            >\n              {t('Copy ID')}\n            </Button>\n          </div>\n          <div>\n            <Button size='small'\n              disabled={!locatorTestElement}\n              onClick={() => applyClientMethod({methodName: 'click', elementId: locatorTestElement})}\n            >\n              {t('Tap Element')}\n            </Button>\n          </div>\n          <div>\n            <Button size='small'\n              disabled={!locatorTestElement}\n              onClick={() => applyClientMethod({methodName: 'clear', elementId: locatorTestElement})}\n            >\n              {t('Clear')}\n            </Button>\n          </div>\n          <div className={InspectorStyles['send-keys-container']}>\n            <Input size='small' placeholder={t('Enter keys')} onChange={(e) => this.setState({...this.state, sendKeys: e.target.value})}/>\n            <Button size='small'\n              disabled={!locatorTestElement}\n              onClick={() => applyClientMethod({methodName: 'sendKeys', elementId: locatorTestElement, args: [this.state.sendKeys || '']})}\n            >\n              {t('Send Keys')}\n            </Button>\n          </div>\n        </div>}\n      </Col>\n    </Row>;\n  }\n}\n\nexport default withTranslation(LocatedElements);","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Input, Select, Row, Col } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport { withTranslation } from '../../util';\n\nconst { Option } = Select;\n\nclass ElementLocator extends Component {\n\n  onSubmit () {\n    const {locatedElements, locatorTestStrategy, locatorTestValue, searchForElement, clearSearchResults, hideLocatorTestModal} = this.props;\n    if (locatedElements) {\n      hideLocatorTestModal();\n      clearSearchResults();\n    } else {\n      searchForElement(locatorTestStrategy, locatorTestValue);\n    }\n  }\n\n  onCancel () {\n    const {hideLocatorTestModal, clearSearchResults} = this.props;\n    hideLocatorTestModal();\n    clearSearchResults();\n  }\n\n  render () {\n    const {\n      setLocatorTestValue,\n      locatorTestValue,\n      setLocatorTestStrategy,\n      locatorTestStrategy,\n      t,\n    } = this.props;\n\n    const locatorStrategies = [\n      ['id', 'Id'],\n      ['xpath', 'XPath'],\n      ['name', 'Name'],\n      ['class name', 'Class Name'],\n      ['accessibility id', 'Accessibility ID'],\n      ['-android uiautomator', 'UIAutomator Selector (Android UiAutomator2)'],\n      ['-android datamatcher', 'DataMatcher Selector (Android Espresso)'],\n      ['-ios predicate string', 'Predicate String (iOS)'],\n      ['-ios class chain', 'Class Chain (iOS)'],\n    ];\n\n    return <div>\n      <Row>\n        <Col>\n          {t('locatorStrategy')}\n          <Select className={InspectorStyles['locator-strategy-selector']}\n            onChange={(value) => setLocatorTestStrategy(value)}\n            value={locatorTestStrategy}>\n            {locatorStrategies.map(([strategyValue, strategyName]) => (\n              <Option key={strategyValue} value={strategyValue}>{strategyName}</Option>\n            ))}\n          </Select>\n        </Col>\n      </Row> <Row>\n        {t('selector')}\n        <Col>\n          <Input.TextArea onChange={(e) => setLocatorTestValue(e.target.value)} value={locatorTestValue} />\n        </Col>\n      </Row>\n    </div>;\n  }\n}\n\nexport default withTranslation(ElementLocator);","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Modal } from 'antd';\nimport LocatedElements from './LocatedElements';\nimport ElementLocator from './ElementLocator';\nimport { withTranslation } from '../../util';\n\n\nclass LocatorTestModal extends Component {\n\n  onSubmit () {\n    const {\n      locatedElements,\n      locatorTestStrategy,\n      locatorTestValue,\n      searchForElement,\n      clearSearchResults,\n      hideLocatorTestModal,\n    } = this.props;\n    if (locatedElements) {\n      hideLocatorTestModal();\n      clearSearchResults();\n    } else {\n      searchForElement(locatorTestStrategy, locatorTestValue);\n    }\n  }\n\n  onCancel () {\n    const {hideLocatorTestModal, clearSearchResults} = this.props;\n    hideLocatorTestModal();\n    clearSearchResults();\n  }\n\n  render () {\n    const {\n      isLocatorTestModalVisible,\n      isSearchingForElements,\n      locatedElements,\n      t,\n    } = this.props;\n\n    return <Modal visible={isLocatorTestModalVisible}\n      okText={locatedElements ? t('Done') : t('Search')}\n      cancelText={t('Cancel')}\n      title={t('Search for element')}\n      confirmLoading={isSearchingForElements}\n      onOk={this.onSubmit.bind(this)}\n      onCancel={this.onCancel.bind(this)}>\n      {!locatedElements && <ElementLocator {...this.props} />}\n      {locatedElements && <LocatedElements {...this.props} />}\n    </Modal>;\n  }\n}\n\nexport default withTranslation(LocatorTestModal);","import React, { Component } from 'react';\nimport { Tree } from 'antd';\nimport LocatorTestModal from './LocatorTestModal';\nimport InspectorStyles from './Inspector.css';\nimport { withTranslation } from '../../util';\n\nconst {TreeNode} = Tree;\nconst IMPORTANT_ATTRS = [\n  'name',\n  'content-desc',\n  'resource-id',\n  'AXDescription',\n  'AXIdentifier',\n];\n\n/**\n * Shows the 'source' of the app as a Tree\n */\nclass Source extends Component {\n\n  getFormattedTag (el) {\n    const {tagName, attributes} = el;\n    let attrs = [];\n\n    // Don't do translations on Source XML\n    /* eslint-disable shopify/jsx-no-hardcoded-content */\n    for (let attr of IMPORTANT_ATTRS) {\n      if (attributes[attr]) {\n        attrs.push(<span key={attr}>&nbsp;\n          <i\n            className={InspectorStyles.sourceAttrName}\n          >{attr}</i>=<span\n            className={InspectorStyles.sourceAttrValue}\n          >&quot;{attributes[attr]}&quot;</span>\n        </span>);\n      }\n    }\n    return <span>\n      &lt;<b className={InspectorStyles.sourceTag}>{tagName}</b>{attrs}&gt;\n    </span>;\n    /* eslint-enable shopify/jsx-no-hardcoded-content */\n  }\n\n  /**\n   * Binds to antd Tree onSelect. If an item is being unselected, path is undefined\n   * otherwise 'path' refers to the element's path.\n   */\n  handleSelectElement (path) {\n    const {selectElement, unselectElement} = this.props;\n\n    if (!path) {\n      unselectElement();\n    } else {\n      selectElement(path);\n    }\n  }\n\n  render () {\n    const {\n      source,\n      sourceError,\n      setExpandedPaths,\n      expandedPaths,\n      selectedElement = {},\n      t,\n    } = this.props;\n    const {path} = selectedElement;\n\n    // Recursives through the source and renders a TreeNode for an element\n    let recursive = (elemObj) => {\n      if (!elemObj) {return null;}\n      if (elemObj.children.length === 0) {return null;}\n\n      return elemObj.children.map((el) => {\n        return <TreeNode title={this.getFormattedTag(el)} key={el.path}>\n          {recursive(el)}\n        </TreeNode>;\n      });\n    };\n\n    return <div id='sourceContainer' className={InspectorStyles['tree-container']}>\n      {source &&\n        <Tree\n          onExpand={setExpandedPaths}\n          autoExpandParent={false}\n          expandedKeys={expandedPaths}\n          onSelect={(selectedPaths) => this.handleSelectElement(selectedPaths[0])}\n          selectedKeys={[path]}>\n          {recursive(source)}\n        </Tree>\n      }\n      {!source && !sourceError &&\n        <i>{t('Gathering initial app source…')}</i>\n      }\n      {\n        sourceError && t('couldNotObtainSource', {errorMsg: JSON.stringify(sourceError)})\n      }\n      <LocatorTestModal {...this.props} />\n    </div>;\n  }\n}\n\nexport default withTranslation(Source);\n","import { clipboard } from 'electron';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Card, Select, Tooltip, Button, Icon } from 'antd';\nimport InspectorStyles from './Inspector.css';\nimport frameworks from '../../lib/client-frameworks';\nimport { highlight } from 'highlight.js';\nimport { withTranslation } from '../../util';\n\nconst Option = Select.Option;\nconst ButtonGroup = Button.Group;\n\nclass RecordedActions extends Component {\n\n  code (raw = true) {\n    let {showBoilerplate, sessionDetails, recordedActions, actionFramework\n    } = this.props;\n    let {host, port, path, https, desiredCapabilities} = sessionDetails;\n\n    let framework = new frameworks[actionFramework](host, port, path,\n      https, desiredCapabilities);\n    framework.actions = recordedActions;\n    let rawCode = framework.getCodeString(showBoilerplate);\n    if (raw) {\n      return rawCode;\n    }\n    return highlight(framework.language, rawCode, true).value;\n  }\n\n  actionBar () {\n    const {\n      showBoilerplate,\n      recordedActions,\n      setActionFramework,\n      toggleShowBoilerplate,\n      clearRecording,\n      closeRecorder,\n      actionFramework,\n      isRecording,\n      t,\n    } = this.props;\n\n    let frameworkOpts = Object.keys(frameworks).map((f) => <Option value={f}>\n      {frameworks[f].readableName}\n    </Option>);\n\n    let boilerplateType = showBoilerplate ? 'primary' : 'default';\n\n    return <div>\n      {!!recordedActions.length &&\n        <Select defaultValue={actionFramework} onChange={setActionFramework}\n          className={InspectorStyles['framework-dropdown']} size=\"small\">\n          {frameworkOpts}\n        </Select>\n      }\n      {(!!recordedActions.length || !isRecording) &&\n        <ButtonGroup size=\"small\">\n          {!!recordedActions.length &&\n          <Tooltip title={t('Show/Hide Boilerplate Code')}>\n            <Button onClick={toggleShowBoilerplate} icon=\"export\"\n              type={boilerplateType}\n            />\n          </Tooltip>\n          }\n          {!!recordedActions.length &&\n          <Tooltip title={t('Copy code to clipboard')}>\n            <Button icon=\"copy\"\n              onClick={() => clipboard.writeText(this.code())}\n            />\n          </Tooltip>\n          }\n          {!!recordedActions.length &&\n          <Tooltip title={t('Clear Actions')}>\n            <Button icon=\"delete\" onClick={clearRecording}/>\n          </Tooltip>\n          }\n          {!isRecording &&\n          <Tooltip title={t('Close Recorder')}>\n            <Button icon=\"close\" onClick={closeRecorder}/>\n          </Tooltip>\n          }\n        </ButtonGroup>\n      }\n    </div>;\n  }\n\n  render () {\n    const {recordedActions, t} = this.props;\n\n    const highlightedCode = this.code(false);\n\n    return <Card title={<span><Icon type=\"code-o\"/> {t('Recorder')}</span>}\n      className={InspectorStyles['recorded-actions']}\n      extra={this.actionBar()}\n    >\n      {!recordedActions.length &&\n        <div className={InspectorStyles['no-recorded-actions']}>\n          {t('Perform some actions to see code show up here')}\n        </div>\n      }\n      {!!recordedActions.length &&\n        <div\n          className={InspectorStyles['recorded-code']}\n          dangerouslySetInnerHTML={{__html: highlightedCode}} />\n      }\n    </Card>;\n  }\n}\n\nexport default withTranslation(RecordedActions);\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Row, Col, Button, Select, Modal, Input, notification, } from 'antd';\nimport { actionDefinitions, actionArgTypes } from './shared';\nimport InspectorStyles from './Inspector.css';\n\nconst { STRING, NUMBER } = actionArgTypes;\n\nconst Option = { Select };\n\nexport default class Actions extends Component {\n\n  startPerformingAction (actionName, action) {\n    const { startEnteringActionArgs, applyClientMethod } = this.props;\n    if (_.isEmpty(action.args)) {\n      applyClientMethod({methodName: action.methodName, args: [], skipScreenshotAndSource: !action.refresh});\n    } else {\n      startEnteringActionArgs(actionName, action);\n    }\n  }\n\n  executeCommand () {\n    const { pendingAction, cancelPendingAction, applyClientMethod, t } = this.props;\n    let {args, action} = pendingAction;\n    let {methodName} = action;\n\n    // Special case for 'startActivity'\n    // TODO: Fix these... args aren't getting through\n    if (action.methodName === 'startActivity') {\n      args = {appPackage: args[0], appActivity: args[1], appWaitPackage: args[2],\n              intentAction: args[3], intentCategory: args[4], intentFlags: args[5],\n              optionalIntentArguments: args[6], dontStopAppOnReset: args[7]};\n    }\n\n    // Special case for 'rotateDevice'\n    if (action.methodName === 'rotateDevice') {\n      args = {x: args[0], y: args[1], duration: args[2], radius: args[3], rotation: args[4], touchCount: args[5]};\n    }\n\n    // Special case for 'execute'\n    if (action.methodName === 'execute') {\n      if (!_.isEmpty(args[1])) {\n        try {\n          args[1] = JSON.parse(args[1]);\n        } catch (e) {\n          notification.error({\n            message: t('invalidJson', {json: args[1]}),\n            duration: 5,\n          });\n        }\n      }\n    }\n\n    // Special case for 'updateSettings'\n    if (action.methodName === 'updateSettings') {\n      if (_.isString(args[0])) {\n        try {\n          args[0] = JSON.parse(args[0]);\n        } catch (e) {\n          notification.error({\n            message: t('invalidJson', {json: args[0]}),\n            duration: 5,\n          });\n        }\n      }\n    }\n\n    applyClientMethod({methodName, args, skipScreenshotAndSource: !action.refresh});\n    cancelPendingAction();\n  }\n\n  render () {\n    const {\n      t, selectActionGroup, selectSubActionGroup, selectedActionGroup, selectedSubActionGroup, pendingAction,\n      cancelPendingAction, setActionArg } = this.props;\n    return <div className={InspectorStyles['actions-container']}>\n      <Row gutter={16} className={InspectorStyles['arg-row']}>\n        <Col span={24}>\n          <Select onChange={(actionGroupName) => selectActionGroup(actionGroupName)} placeholder={t('Select Action Group')}>\n            { _.keys(actionDefinitions).map((actionGroup) => <Option key={actionGroup}>{t(actionGroup)}</Option>) }\n          </Select>\n        </Col>\n      </Row>\n      {selectedActionGroup && <Row>\n        <Col span={24}>\n          <Select onChange={(actionGroupName) => selectSubActionGroup(actionGroupName)} placeholder={t('Select Sub Group')}>\n            { _.keys(actionDefinitions[selectedActionGroup]).map((actionGroup) => <Option key={actionGroup}>{t(actionGroup)}</Option>) }\n          </Select>\n        </Col>\n      </Row>}\n      {selectedSubActionGroup && _.toPairs(actionDefinitions[selectedActionGroup][selectedSubActionGroup]).map(([actionName, action]) => <Col span={8}>\n        <div className={InspectorStyles['btn-container']}>\n          <Button onClick={() => this.startPerformingAction(actionName, action) }>{t(actionName)}</Button>\n        </div>\n      </Col>)}\n      {!!pendingAction && <Modal\n        title={pendingAction.actionName}\n        okText={t('Execute Action')}\n        visible={!!pendingAction}\n        onOk={() => this.executeCommand()}\n        onCancel={() => cancelPendingAction()}>\n        {\n          !_.isEmpty(pendingAction.action.args) && _.map(pendingAction.action.args, ([argName, argType], index) => <Row key={index} gutter={16}>\n            <Col span={24} className={InspectorStyles['arg-container']}>\n              {argType === NUMBER && <Input type=\"number\" value={pendingAction.args[index]} addonBefore={t(argName)} onChange={(e) => setActionArg(index, _.toNumber(e.target.value))} />}\n              {argType === STRING && <Input addonBefore={t(argName)} onChange={(e) => setActionArg(index, e.target.value)}/>}\n            </Col>\n          </Row>)\n        }\n      </Modal>}\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport { debounce } from 'lodash';\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE } from './shared';\nimport { Card, Icon, Button, Spin, Tooltip, Modal, Tabs } from 'antd';\nimport Screenshot from './Screenshot';\nimport SelectedElement from './SelectedElement';\nimport Source from './Source';\nimport InspectorStyles from './Inspector.css';\nimport RecordedActions from './RecordedActions';\nimport Actions from './Actions';\nimport { clipboard } from 'electron';\n\nconst {SELECT, SWIPE, TAP} = SCREENSHOT_INTERACTION_MODE;\n\nconst { TabPane } = Tabs;\n\nconst ButtonGroup = Button.Group;\n\nconst MIN_WIDTH = 1080;\nconst MIN_HEIGHT = 570;\nconst MAX_SCREENSHOT_WIDTH = 500;\n\nexport default class Inspector extends Component {\n\n  constructor () {\n    super();\n    this.didInitialResize = false;\n    this.state = {};\n    this.screenAndSourceEl = null;\n    this.lastScreenshot = null;\n    this.updateSourceTreeWidth = debounce(this.updateSourceTreeWidth.bind(this), 50);\n  }\n\n  updateSourceTreeWidth () {\n    // the idea here is to keep track of the screenshot image width. if it has\n    // too much space to the right or bottom, adjust the max-width of the\n    // screenshot container so the source tree flex adjusts to always fill the\n    // remaining space. This keeps everything looking tight.\n    if (!this.screenAndSourceEl) {\n      return;\n    }\n\n    const screenshotBox = this.screenAndSourceEl.querySelector('#screenshotContainer');\n    const img = this.screenAndSourceEl.querySelector('#screenshotContainer img#screenshot');\n\n    if (!img) {\n      return;\n    }\n\n    const imgRect = img.getBoundingClientRect();\n    const screenshotRect = screenshotBox.getBoundingClientRect();\n    screenshotBox.style.flexBasis = `${imgRect.width}px`;\n    if (imgRect.width < screenshotRect.width) {\n      screenshotBox.style.maxWidth = `${imgRect.width}px`;\n    } else if (imgRect.height < screenshotRect.height) {\n      // get what the img width would be if it fills screenshot box height\n      const attemptedWidth = (screenshotRect.height / imgRect.height) * imgRect.width;\n      screenshotBox.style.maxWidth = attemptedWidth > MAX_SCREENSHOT_WIDTH ?\n        `${MAX_SCREENSHOT_WIDTH}px` :\n        `${attemptedWidth}px`;\n    }\n  }\n\n  componentDidMount () {\n    const curHeight = window.innerHeight;\n    const curWidth = window.innerWidth;\n    const needsResize = (curHeight < MIN_HEIGHT) || (curWidth < MIN_WIDTH);\n    if (!this.didInitialResize && needsResize) {\n      const newWidth = curWidth < MIN_WIDTH ? MIN_WIDTH : curWidth;\n      const newHeight = curHeight < MIN_HEIGHT ? MIN_HEIGHT : curHeight;\n      // resize width to something sensible for using the inspector on first run\n      window.resizeTo(newWidth, newHeight);\n    }\n    this.didInitialResize = true;\n    this.props.bindAppium();\n    this.props.applyClientMethod({methodName: 'source'});\n    this.props.getSavedActionFramework();\n    window.addEventListener('resize', this.updateSourceTreeWidth);\n  }\n\n  componentDidUpdate () {\n    const {screenshot} = this.props;\n    // only update when the screenshot changed, not for any other kind of\n    // update\n    if (screenshot !== this.lastScreenshot) {\n      this.updateSourceTreeWidth();\n      this.lastScreenshot = screenshot;\n    }\n  }\n\n  screenshotInteractionChange (mode) {\n    const {selectScreenshotInteractionMode, clearSwipeAction} = this.props;\n    clearSwipeAction(); // When the action changes, reset the swipe action\n    selectScreenshotInteractionMode(mode);\n  }\n\n  render () {\n    const {screenshot, screenshotError, selectedElement = {},\n           applyClientMethod, quitSession, isRecording, showRecord, startRecording,\n           pauseRecording, showLocatorTestModal,\n           screenshotInteractionMode,\n           selectedInteractionMode, selectInteractionMode,\n           showKeepAlivePrompt, keepSessionAlive, sourceXML, t} = this.props;\n    const {path} = selectedElement;\n\n    let main = <div className={InspectorStyles['inspector-main']} ref={(el) => {this.screenAndSourceEl = el;}}>\n      <div id='screenshotContainer' className={InspectorStyles['screenshot-container']}>\n        {screenshot && <Screenshot {...this.props} />}\n        {screenshotError && t('couldNotObtainScreenshot', {screenshotError})}\n        {!screenshot && !screenshotError &&\n          <Spin size=\"large\" spinning={true}>\n            <div className={InspectorStyles.screenshotBox} />\n          </Spin>\n        }\n      </div>\n      <div id='sourceTreeContainer' className={InspectorStyles['interaction-tab-container']} >\n        {showRecord &&\n          <RecordedActions {...this.props} />\n        }\n        <Tabs activeKey={selectedInteractionMode}\n          size=\"small\"\n          onChange={(tab) => selectInteractionMode(tab)}>\n          <TabPane tab={t('Source')} key={INTERACTION_MODE.SOURCE}>\n            <div className='action-row'>\n              <div className='action-col'>\n                <Card title={<span><Icon type=\"file-text\" /> {t('App Source')}</span>}>\n                  <Source {...this.props} />\n                </Card>\n              </div>\n              <div id='selectedElementContainer'\n                className={`${InspectorStyles['interaction-tab-container']} ${InspectorStyles['element-detail-container']} action-col`}>\n                <Card title={<span><Icon type=\"tag-o\" /> {t('selectedElement')}</span>}\n                  className={InspectorStyles['selected-element-card']}>\n                  {path && <SelectedElement {...this.props}/>}\n                  {!path && <i>{t('selectElementInSource')}</i>}\n                </Card>\n              </div>\n            </div>\n          </TabPane>\n          <TabPane tab={t('Actions')} key={INTERACTION_MODE.ACTIONS}>\n            <Card\n              title={<span><Icon type=\"thunderbolt\" /> {t('Actions')}</span>}\n              className={InspectorStyles['interaction-tab-card']}>\n              <Actions {...this.props} />\n            </Card>\n          </TabPane>\n        </Tabs>\n      </div>\n    </div>;\n\n    let actionControls = <div className={InspectorStyles['action-controls']}>\n      <ButtonGroup size=\"large\" value={screenshotInteractionMode}>\n        <Tooltip title={t('Select Elements')}>\n          <Button icon='select' onClick={() => {this.screenshotInteractionChange(SELECT);}}\n            type={screenshotInteractionMode === SELECT ? 'primary' : 'default'}\n          />\n        </Tooltip>\n        <Tooltip title={t('Swipe By Coordinates')}>\n          <Button icon='swap-right' onClick={() => {this.screenshotInteractionChange(SWIPE);}}\n            type={screenshotInteractionMode === SWIPE ? 'primary' : 'default'}\n          />\n        </Tooltip>\n        <Tooltip title={t('Tap By Coordinates')}>\n          <Button icon='scan' onClick={() => {this.screenshotInteractionChange(TAP);}}\n            type={screenshotInteractionMode === TAP ? 'primary' : 'default'}\n          />\n        </Tooltip>\n      </ButtonGroup>\n    </div>;\n\n    let controls = <div className={InspectorStyles['inspector-toolbar']}>\n      {actionControls}\n      <ButtonGroup size=\"large\">\n        <Tooltip title={t('Back')}>\n          <Button id='btnGoBack' icon='arrow-left' onClick={() => applyClientMethod({methodName: 'back'})}/>\n        </Tooltip>\n        <Tooltip title={t('refreshSource')}>\n          <Button id='btnReload' icon='reload' onClick={() => applyClientMethod({methodName: 'source'})}/>\n        </Tooltip>\n        {!isRecording &&\n          <Tooltip title={t('Start Recording')}>\n            <Button id='btnStartRecording' icon=\"eye-o\" onClick={startRecording}/>\n          </Tooltip>\n        }\n        {isRecording &&\n          <Tooltip title={t('Pause Recording')}>\n            <Button id='btnPause' icon=\"pause\" type=\"danger\" onClick={pauseRecording}/>\n          </Tooltip>\n        }\n        <Tooltip title={t('Search for element')}>\n          <Button id='searchForElement' icon=\"search\" onClick={showLocatorTestModal}/>\n        </Tooltip>\n        <Tooltip title={t('Copy XML Source to Clipboard')}>\n          <Button id='btnSourceXML' icon=\"copy\" onClick={() => clipboard.writeText(sourceXML)}/>\n        </Tooltip>\n        <Tooltip title={t('quitSessionAndClose')}>\n          <Button id='btnClose' icon='close' onClick={() => quitSession()}/>\n        </Tooltip>\n      </ButtonGroup>\n    </div>;\n\n    return <div className={InspectorStyles['inspector-container']}>\n      {controls}\n      {main}\n      <Modal\n        title={t('Session Inactive')}\n        visible={showKeepAlivePrompt}\n        onOk={() => keepSessionAlive()}\n        onCancel={() => quitSession()}\n        okText={t('Keep Session Running')}\n        cancelText={t('Quit Session')}\n      >\n        <p>{t('Your session is about to expire')}</p>\n      </Modal>\n    </div>;\n  }\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withTranslation } from '../util';\nimport * as InspectorActions from '../actions/Inspector';\nimport InspectorPage from '../components/Inspector/Inspector';\n\nfunction mapStateToProps (state) {\n  return state.inspector;\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(InspectorActions, dispatch);\n}\n\nexport default withTranslation(InspectorPage, connect(mapStateToProps, mapDispatchToProps));\n","import { ipcRenderer } from 'electron';\n\nexport const SET_ENVIRONMENT_VARIABLE = 'SET_ENVIRONMENT_VARIABLE';\nexport const SET_ENVIRONMENT_VARIABLES = 'SET_ENVIRONMENT_VARIABLES';\nexport const GET_ENVIRONMENT_VARIABLES = 'GET_ENVIRONMENT_VARIABLES';\nexport const SAVE_ENVIRONMENT_VARIABLES = 'SAVE_ENVIRONMENT_VARIABLES';\n\nexport function setEnvironmentVariable (name, value) {\n  return (dispatch) => {\n    dispatch({type: SET_ENVIRONMENT_VARIABLE, name, value});\n  };\n}\n\nexport function getEnvironmentVariables () {\n  return (dispatch) => {\n    dispatch({type: GET_ENVIRONMENT_VARIABLES});\n    ipcRenderer.send('appium-get-env');\n    ipcRenderer.once('appium-env', (evt, env) => {\n      const {defaultEnvironmentVariables, savedEnvironmentVariables} = env;\n      dispatch({type: SET_ENVIRONMENT_VARIABLES, defaultEnvironmentVariables, savedEnvironmentVariables});\n    });\n  };\n}","import { ipcRenderer, remote } from 'electron';\nimport React, { Component } from 'react';\nimport { Input, Row, Col, Button } from 'antd';\nimport styles from './Config.css';\n\nconst ENV_VARIABLE_NAMES = [\n  'ANDROID_HOME', 'JAVA_HOME'\n];\n\nconst {app, dialog, getCurrentWindow} = remote;\n\nclass Config extends Component {\n  componentWillMount () {\n    this.props.getEnvironmentVariables();\n  }\n\n  saveAndRestart () {\n    const { environmentVariables, t } = this.props;\n\n    ipcRenderer.send('appium-save-env', environmentVariables);\n    ipcRenderer.once('appium-save-env-done', () => {\n      const message = t(`Application must be restarted for changes to take effect`);\n      const dialogOptions = {type: 'info', buttons: [t('Restart Now'), t('Restart Later')], message};\n      ipcRenderer.removeAllListeners('appium-save-env-done');\n      dialog.showMessageBox(dialogOptions, (response) => {\n        if (response === 0) {\n          // If 'Restart Now' restart the application\n          app.relaunch();\n          app.exit();\n        } else {\n          // ...otherwise, just close the current window\n          getCurrentWindow().close();\n        }\n      });\n    });\n  }\n\n  render () {\n    const {\n      setEnvironmentVariable,\n      environmentVariables,\n      defaultEnvironmentVariables,\n      t,\n    } = this.props;\n\n    return (\n      <div className={styles.container}>\n        <h3>{t('Environment Variables')}</h3>\n        {ENV_VARIABLE_NAMES.map((ENV_NAME) => (\n          <Row key={ENV_NAME} className={styles.row} gutter={16}>\n            <Col span={24}>\n              <Input addonBefore={ENV_NAME}\n                placeholder={defaultEnvironmentVariables[ENV_NAME]}\n                onChange={(evt) => setEnvironmentVariable(ENV_NAME, evt.target.value)}\n                value={environmentVariables[ENV_NAME]} />\n            </Col>\n          </Row>\n        ))}\n        <Row>\n          <Col span={24}>\n            <Button onClick={() => this.saveAndRestart()}>{t('Save and Restart')}</Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Config;","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as ConfigActions from '../actions/Config';\nimport ConfigPage from '../components/Config/Config';\nimport { withTranslation } from '../util';\n\nfunction mapStateToProps (state) {\n  return state.config;\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(ConfigActions, dispatch);\n}\n\nexport default withTranslation(ConfigPage, connect(mapStateToProps, mapDispatchToProps));\n","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router';\nimport App from './containers/App';\nimport StartServerPage from './containers/StartServerPage';\nimport ServerMonitorPage from './containers/ServerMonitorPage';\nimport SessionPage from './containers/SessionPage';\nimport InspectorPage from './containers/InspectorPage';\nimport ConfigPage from './containers/ConfigPage';\nimport Spinner from './components/Spinner/Spinner';\nimport { ipcRenderer } from 'electron';\nimport i18n from '../configs/i18next.config.renderer';\n\nipcRenderer.on('appium-language-changed', (event, message) => {\n  if (i18n.language !== message.language) {\n    i18n.changeLanguage(message.language);\n  }\n});\n\nexport default () => (\n  <Suspense fallback={<Spinner />}>\n    <App>\n      <Switch>\n        <Route exact path=\"/\" component={StartServerPage} />\n        <Route path=\"/monitor\" component={ServerMonitorPage} />\n        <Route path=\"/session\" component={SessionPage} />\n        <Route path=\"/inspector\" component={InspectorPage} />\n        <Route path=\"/config\" component={ConfigPage} />\n      </Switch>\n    </App>\n  </Suspense>\n);\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { ipcRenderer } from 'electron';\nimport WrongFolderStyles from './WrongFolderStyles.css';\nimport { withTranslation } from '../../util';\n\nclass WrongFolder extends Component {\n  // This tells the main thread to move this to applications folder which will cause the app to close and restart\n  moveToApplicationsFolder () {\n    ipcRenderer.send('appium-move-to-applications-folder');\n  }\n\n  render () {\n    const {t} = this.props;\n    return <div className={WrongFolderStyles['wrong-folder']}>\n      <div>\n        <div>{t('panPro Desktop should be run from the Applications folder')}</div>\n        <Button\n          size='large'\n          icon='export'\n          type=\"primary\"\n          onClick={this.moveToApplicationsFolder.bind(this)}>\n          {t('Move to Applications Folder')}\n        </Button>\n      </div>\n    </div>;\n  }\n}\n\nexport default withTranslation(WrongFolder);","import React, { Component, Suspense } from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport Spinner from '../components/Spinner/Spinner';\nimport Routes from '../routes';\nimport WrongFolder from '../components/WrongFolder/WrongFolder';\nimport electron from 'electron';\n\nconst { app } = electron.remote;\nconst isDev = process.env.NODE_ENV === 'development';\n\nfunction shouldShowWrongFolderComponent () {\n  // If we set an ENV to show wrong folder\n  if (process.env.WRONG_FOLDER) {\n    return true;\n  }\n\n  // If we set an ENV to require it to NOT be shown don't show it\n  if (process.env.FORCE_NO_WRONG_FOLDER) {\n    return false;\n  }\n\n  return (app.isInApplicationsFolder && !app.isInApplicationsFolder()) && !isDev;\n}\n\nexport default class Root extends Component {\n  render () {\n    const { store, history } = this.props;\n    return (\n      <Provider store={store}>\n        {shouldShowWrongFolderComponent() ?\n          <Suspense fallback={<Spinner />}>\n            <WrongFolder />\n          </Suspense> :\n          <ConnectedRouter history={history}>\n            <Routes />\n          </ConnectedRouter>\n        }\n      </Provider>\n    );\n  }\n}\n","export const SET_UPDATE_STATE = 'SET_UPDATE_STATE';\n\nexport function setUpdateState (updateState) {\n  return (dispatch) => {\n    dispatch({type: SET_UPDATE_STATE, updateState});\n  };\n}","import * as configActions from '../actions/Config';\nimport * as inspectorActions from '../actions/Inspector';\nimport * as serverMonitorActions from '../actions/ServerMonitor';\nimport * as sessionActions from '../actions/Session';\nimport * as startServerActions from '../actions/StartServer';\nimport * as updaterActions from '../actions/Updater';\n\nexport default {\n  ...configActions,\n  ...inspectorActions,\n  ...serverMonitorActions,\n  ...sessionActions,\n  ...startServerActions,\n  ...updaterActions,\n};","import _, {omit} from 'lodash';\nimport formatJSON from 'format-json';\n\nimport { NEW_SESSION_REQUESTED, NEW_SESSION_BEGAN, NEW_SESSION_DONE,\n         SAVE_SESSION_REQUESTED, SAVE_SESSION_DONE, GET_SAVED_SESSIONS_REQUESTED,\n         GET_SAVED_SESSIONS_DONE, SESSION_LOADING, SESSION_LOADING_DONE,\n         SET_CAPABILITY_PARAM, ADD_CAPABILITY, REMOVE_CAPABILITY, SET_CAPS,\n         SWITCHED_TABS, SAVE_AS_MODAL_REQUESTED, HIDE_SAVE_AS_MODAL_REQUESTED, SET_SAVE_AS_TEXT,\n         DELETE_SAVED_SESSION_REQUESTED, DELETE_SAVED_SESSION_DONE,\n         CHANGE_SERVER_TYPE, SET_SERVER_PARAM, SET_SERVER, SET_ATTACH_SESS_ID,\n         GET_SESSIONS_REQUESTED, GET_SESSIONS_DONE,\n         ENABLE_DESIRED_CAPS_EDITOR, ABORT_DESIRED_CAPS_EDITOR, SAVE_RAW_DESIRED_CAPS, SET_RAW_DESIRED_CAPS, SHOW_DESIRED_CAPS_JSON_ERROR,\n         IS_ADDING_CLOUD_PROVIDER, SET_PROVIDERS,\n         ServerTypes } from '../actions/Session';\n\nconst visibleProviders = []; // Pull this from \"electron-settings\"\nconst server = {\n  local: {},\n  remote: {},\n  advanced: {},\n};\n\nfor (const serverName of _.keys(ServerTypes)) {\n  server[serverName] = {};\n}\n\n// Make sure there's always at least one cap\nconst INITIAL_STATE = {\n  savedSessions: [],\n  tabKey: 'new',\n  serverType: ServerTypes.local,\n  visibleProviders,\n  server: {\n    local: {},\n    remote: {},\n    sauce: {\n      dataCenter: 'us-west-1',\n    },\n    testobject: {\n      dataCenter: 'US',\n    },\n    headspin: {},\n    browserstack: {},\n    advanced: {},\n    bitbar: {},\n    kobiton: {},\n    perfecto: {},\n    pcloudy: {},\n    testingbot: {},\n  },\n  attachSessId: null,\n\n  // Make sure there's always at least one cap\n  caps: [{\n    type: 'text',\n  }],\n\n  isCapsDirty: true,\n  gettingSessions: false,\n  runningAppiumSessions: [],\n  isEditingDesiredCaps: false,\n  isValidCapsJson: true,\n  isValidatingCapsJson: false,\n  isAddingCloudProvider: false,\n};\n\nlet nextState;\n\nexport default function session (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case NEW_SESSION_REQUESTED:\n      return {\n        ...state,\n        newSessionRequested: true,\n      };\n\n    case NEW_SESSION_BEGAN:\n      nextState = {\n        ...state,\n        newSessionBegan: true,\n      };\n      return omit(nextState, 'newSessionRequested');\n\n    case NEW_SESSION_DONE:\n      return omit(state, 'newSessionBegan');\n\n\n    case ADD_CAPABILITY:\n      return {\n        ...state,\n        caps: [\n          ...state.caps,\n          {type: 'text'},\n        ],\n      };\n\n    case REMOVE_CAPABILITY:\n      return {\n        ...state,\n        caps: state.caps.filter((cap, index) => index !== action.index),\n      };\n\n    case SET_CAPABILITY_PARAM:\n      return {\n        ...state,\n        isCapsDirty: true,\n        caps: state.caps.map((cap, index) => index !== action.index ? cap : {\n          ...cap,\n          [action.name]: action.value\n        }),\n      };\n\n    case SET_CAPS:\n      nextState = {\n        ...state,\n        caps: action.caps,\n        capsUUID: action.uuid,\n      };\n      return omit(nextState, 'isCapsDirty');\n\n    case SAVE_SESSION_REQUESTED:\n      nextState = {\n        ...state,\n        saveSessionRequested: true,\n      };\n      return omit(nextState, 'showSaveAsModal');\n\n    case SAVE_SESSION_DONE:\n      return omit(state, ['saveSessionRequested', 'saveAsText']);\n\n    case GET_SAVED_SESSIONS_REQUESTED:\n      return {\n        ...state,\n        getSavedSessionsRequested: true,\n      };\n\n    case GET_SAVED_SESSIONS_DONE:\n      nextState = {\n        ...state,\n        savedSessions: action.savedSessions || [],\n      };\n      return omit(nextState, 'getSavedSessionsRequested');\n\n    case DELETE_SAVED_SESSION_REQUESTED:\n      return {\n        ...state,\n        deletingSession: true,\n      };\n\n    case DELETE_SAVED_SESSION_DONE:\n      return {\n        ...state,\n        deletingSession: false,\n        capsUUID: null\n      };\n\n    case SWITCHED_TABS:\n      return {\n        ...state,\n        tabKey: action.key,\n      };\n\n    case SAVE_AS_MODAL_REQUESTED:\n      return {\n        ...state,\n        'showSaveAsModal': true,\n      };\n\n    case HIDE_SAVE_AS_MODAL_REQUESTED:\n      return omit(state, ['saveAsText', 'showSaveAsModal']);\n\n    case SET_SAVE_AS_TEXT:\n      return {\n        ...state,\n        saveAsText: action.saveAsText,\n      };\n\n    case CHANGE_SERVER_TYPE:\n      return {\n        ...state,\n        serverType: action.serverType,\n      };\n\n    case SET_SERVER_PARAM:\n      return {\n        ...state,\n        server: {\n          ...state.server,\n          [action.serverType]: {\n            ...state.server[action.serverType],\n            [action.name]: action.value,\n          }\n        },\n      };\n\n    case SET_SERVER:\n      return {\n        ...state,\n        server: {\n          ...(function extendCurrentServerStateWithNewServerState (currentServerState, newServerState) {\n            // Copy current server state and extend it with new server state\n            const nextServerState = _.cloneDeep(currentServerState || {});\n\n            // Extend each server (sauce, testobject, remote, kobiton, etc...)\n            for (let serverName of _.keys(nextServerState)) {\n              nextServerState[serverName] = {\n                ...(nextServerState[serverName] || {}),\n                ...(newServerState[serverName] || {}),\n              };\n            }\n            return nextServerState;\n          })(state.server, action.server),\n        },\n        serverType: action.serverType || ServerTypes.local,\n      };\n\n    case SET_ATTACH_SESS_ID:\n      return {\n        ...state,\n        attachSessId: action.attachSessId\n      };\n\n    case SESSION_LOADING:\n      return {\n        ...state,\n        sessionLoading: true,\n      };\n\n    case SESSION_LOADING_DONE:\n      return omit(state, 'sessionLoading');\n\n    case GET_SESSIONS_REQUESTED:\n      return {\n        ...state,\n        gettingSessions: true,\n      };\n\n    case GET_SESSIONS_DONE:\n      return {\n        ...state,\n        gettingSessions: false,\n        attachSessId: (action.sessions && action.sessions.length > 0 && !state.attachSessId) ? action.sessions[0].id : state.attachSessId,\n        runningAppiumSessions: action.sessions || [],\n      };\n\n    case ENABLE_DESIRED_CAPS_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCaps: true,\n        rawDesiredCaps: formatJSON.plain(\n          // Translate the caps definition to a proper capabilities JS Object\n          _.reduce(\n            state.caps,\n            (result, obj) => ({\n              ...result,\n              [obj.name]: obj.value,\n            }),\n            {}\n          )\n        ),\n        isValidCapsJson: true,\n        isValidatingCapsJson: false, // Don't start validating JSON until the user has attempted to save the JSON\n      };\n\n    case ABORT_DESIRED_CAPS_EDITOR:\n      return {\n        ...state,\n        isEditingDesiredCaps: false,\n        rawDesiredCaps: null,\n      };\n\n    case SAVE_RAW_DESIRED_CAPS:\n      return {\n        ...state,\n        isEditingDesiredCaps: false,\n        caps: action.caps,\n      };\n\n    case SHOW_DESIRED_CAPS_JSON_ERROR:\n      return {\n        ...state,\n        invalidCapsJsonReason: action.message,\n        isValidCapsJson: false,\n        isValidatingCapsJson: true,\n      };\n\n    case SET_RAW_DESIRED_CAPS:\n      return {\n        ...state,\n        rawDesiredCaps: action.rawDesiredCaps,\n        isValidCapsJson: action.isValidCapsJson,\n        invalidCapsJsonReason: action.invalidCapsJsonReason,\n      };\n\n    case IS_ADDING_CLOUD_PROVIDER:\n      return {\n        ...state,\n        isAddingCloudProvider: action.isAddingProvider,\n      };\n\n    case SET_PROVIDERS:\n      return {\n        ...state,\n        visibleProviders: action.providers || []\n      };\n\n    default:\n      return {...state};\n  }\n}\n","import { omit } from 'lodash';\n\nimport { SET_SOURCE_AND_SCREENSHOT, QUIT_SESSION_REQUESTED, QUIT_SESSION_DONE,\n         SESSION_DONE, SELECT_ELEMENT, UNSELECT_ELEMENT, SELECT_HOVERED_ELEMENT, SET_SELECTED_ELEMENT_ID, SET_INTERACTIONS_NOT_AVAILABLE,\n         UNSELECT_HOVERED_ELEMENT, METHOD_CALL_REQUESTED, METHOD_CALL_DONE,\n         SET_FIELD_VALUE, SET_EXPANDED_PATHS, SHOW_SEND_KEYS_MODAL,\n         HIDE_SEND_KEYS_MODAL, START_RECORDING, PAUSE_RECORDING, CLEAR_RECORDING,\n         SET_ACTION_FRAMEWORK, RECORD_ACTION, CLOSE_RECORDER, SET_SHOW_BOILERPLATE, SET_SESSION_DETAILS,\n         SHOW_LOCATOR_TEST_MODAL, HIDE_LOCATOR_TEST_MODAL, SET_LOCATOR_TEST_STRATEGY, SET_LOCATOR_TEST_VALUE,\n         SEARCHING_FOR_ELEMENTS, SEARCHING_FOR_ELEMENTS_COMPLETED, SET_LOCATOR_TEST_ELEMENT, CLEAR_SEARCH_RESULTS,\n         ADD_ASSIGNED_VAR_CACHE, CLEAR_ASSIGNED_VAR_CACHE, SET_SCREENSHOT_INTERACTION_MODE,\n         SET_SWIPE_START, SET_SWIPE_END, CLEAR_SWIPE_ACTION, SET_SEARCHED_FOR_ELEMENT_BOUNDS, CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS,\n         PROMPT_KEEP_ALIVE, HIDE_PROMPT_KEEP_ALIVE,\n         SELECT_ACTION_GROUP, SELECT_SUB_ACTION_GROUP,\n         SELECT_INTERACTION_MODE, ENTERING_ACTION_ARGS, SET_ACTION_ARG, REMOVE_ACTION\n} from '../actions/Inspector';\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE } from '../components/Inspector/shared';\n\nconst DEFAULT_FRAMEWORK = 'java';\n\nconst INITIAL_STATE = {\n  expandedPaths: ['0'],\n  isRecording: false,\n  showRecord: false,\n  showBoilerplate: false,\n  recordedActions: [],\n  actionFramework: DEFAULT_FRAMEWORK,\n  sessionDetails: {},\n  isLocatorTestModalVisible: false,\n  locatorTestStrategy: 'id',\n  locatorTestValue: '',\n  isSearchingForElements: false,\n  assignedVarCache: {},\n  screenshotInteractionMode: SCREENSHOT_INTERACTION_MODE.SELECT,\n  searchedForElementBounds: null,\n  showKeepAlivePrompt: false,\n  selectedActionGroup: null,\n  selectedSubActionGroup: null,\n  selectedInteractionMode: INTERACTION_MODE.SOURCE,\n  pendingAction: null,\n};\n\n/**\n * Look up an element in the source with the provided path\n */\nfunction findElementByPath (path, source) {\n  let selectedElement = source;\n  for (let index of path.split('.')) {\n    selectedElement = selectedElement.children[index];\n  }\n  return {...selectedElement};\n}\n\nexport default function inspector (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_SOURCE_AND_SCREENSHOT:\n      return {\n        ...state,\n        source: action.source,\n        sourceXML: action.sourceXML,\n        sourceError: action.sourceError,\n        screenshot: action.screenshot,\n        screenshotError: action.screenshotError,\n        windowSize: action.windowSize,\n        windowSizeError: action.windowSizeError,\n      };\n\n    case QUIT_SESSION_REQUESTED:\n      return {\n        ...state,\n        methodCallInProgress: true,\n        isQuittingSession: true,\n      };\n\n    case QUIT_SESSION_DONE:\n      return {\n        ...INITIAL_STATE\n      };\n\n    case SESSION_DONE:\n      return {\n        ...state,\n        isSessionDone: true,\n        methodCallInProgress: false,\n      };\n\n    case SELECT_ELEMENT:\n      return {\n        ...state,\n        selectedElement: findElementByPath(action.path, state.source),\n        selectedElementPath: action.path,\n        elementInteractionsNotAvailable: false,\n      };\n\n    case UNSELECT_ELEMENT:\n      return {\n        ...state,\n        selectedElement: undefined,\n        selectedElementPath: null,\n        selectedElementId: null,\n        selectedElementVariableName: null,\n        selectedElementVariableType: null,\n      };\n\n    case SET_SELECTED_ELEMENT_ID:\n      return {\n        ...state,\n        selectedElementId: action.elementId,\n        selectedElementVariableName: action.variableName,\n        selectedElementVariableType: action.variableType,\n      };\n\n    case SET_INTERACTIONS_NOT_AVAILABLE:\n      return {\n        ...state,\n        elementInteractionsNotAvailable: true,\n      };\n\n    case SELECT_HOVERED_ELEMENT:\n      return {\n        ...state,\n        hoveredElement: findElementByPath(action.path, state.source),\n      };\n\n    case UNSELECT_HOVERED_ELEMENT:\n      return omit(state, 'hoveredElement');\n\n    case METHOD_CALL_REQUESTED:\n      return {\n        ...state,\n        methodCallInProgress: true,\n      };\n\n    case METHOD_CALL_DONE:\n      return {\n        ...state,\n        methodCallInProgress: false,\n      };\n\n    case SET_FIELD_VALUE:\n      return {\n        ...state,\n        [action.name]: action.value,\n      };\n\n    case SET_EXPANDED_PATHS:\n      return {\n        ...state,\n        expandedPaths: action.paths,\n      };\n\n    case SHOW_SEND_KEYS_MODAL:\n      return {\n        ...state,\n        sendKeysModalVisible: true\n      };\n\n    case HIDE_SEND_KEYS_MODAL:\n      return {\n        ...state,\n        sendKeysModalVisible: false,\n        action: {\n          ...state.action,\n          sendKeys: null,\n        }\n      };\n\n    case START_RECORDING:\n      return {\n        ...state,\n        isRecording: true,\n        showRecord: true\n      };\n\n    case PAUSE_RECORDING:\n      return {\n        ...state,\n        isRecording: false,\n        showRecord: state.recordedActions.length > 0\n      };\n\n    case CLEAR_RECORDING:\n      return {\n        ...state,\n        recordedActions: []\n      };\n\n    case SET_ACTION_FRAMEWORK:\n      return {\n        ...state,\n        actionFramework: action.framework || DEFAULT_FRAMEWORK\n      };\n\n    case RECORD_ACTION:\n      return {\n        ...state,\n        recordedActions: [\n          ...state.recordedActions,\n          {action: action.action, params: action.params}\n        ]\n      };\n\n    case ADD_ASSIGNED_VAR_CACHE:\n      return {\n        ...state,\n        assignedVarCache: {\n          ...state.assignedVarCache,\n          [action.varName]: true,\n        }\n      };\n\n    case CLEAR_ASSIGNED_VAR_CACHE:\n      return {\n        ...state,\n        assignedVarCache: [],\n      };\n\n    case CLOSE_RECORDER:\n      return {\n        ...state,\n        showRecord: false\n      };\n\n    case SET_SHOW_BOILERPLATE:\n      return {...state, showBoilerplate: action.show};\n\n    case SET_SESSION_DETAILS:\n      return {...state, sessionDetails: action.sessionDetails};\n\n    case SHOW_LOCATOR_TEST_MODAL:\n      return {\n        ...state,\n        isLocatorTestModalVisible: true,\n      };\n\n    case HIDE_LOCATOR_TEST_MODAL:\n      return {\n        ...state,\n        isLocatorTestModalVisible: false,\n      };\n\n    case SET_LOCATOR_TEST_STRATEGY:\n      return {\n        ...state,\n        locatorTestStrategy: action.locatorTestStrategy\n      };\n\n    case SET_LOCATOR_TEST_VALUE:\n      return {\n        ...state,\n        locatorTestValue: action.locatorTestValue\n      };\n\n    case SEARCHING_FOR_ELEMENTS:\n      return {\n        ...state,\n        locatedElements: null,\n        locatorTestElement: null,\n        isSearchingForElements: true,\n      };\n\n    case SEARCHING_FOR_ELEMENTS_COMPLETED:\n      return {\n        ...state,\n        locatedElements: action.elements,\n        isSearchingForElements: false,\n      };\n\n    case SET_LOCATOR_TEST_ELEMENT:\n      return {\n        ...state,\n        locatorTestElement: action.elementId,\n      };\n\n    case CLEAR_SEARCH_RESULTS:\n      return {\n        ...state,\n        locatedElements: null,\n      };\n\n    case SET_SCREENSHOT_INTERACTION_MODE:\n      return {\n        ...state,\n        screenshotInteractionMode: action.screenshotInteractionMode,\n      };\n\n    case SET_SWIPE_START:\n      return {\n        ...state,\n        swipeStart: {\n          x: action.swipeStartX,\n          y: action.swipeStartY,\n        },\n      };\n\n    case SET_SWIPE_END:\n      return {\n        ...state,\n        swipeEnd: {\n          x: action.swipeEndX,\n          y: action.swipeEndY,\n        },\n      };\n\n    case CLEAR_SWIPE_ACTION:\n      return {\n        ...state,\n        swipeStart: null,\n        swipeEnd: null,\n      };\n\n    case SET_SEARCHED_FOR_ELEMENT_BOUNDS:\n      return {\n        ...state,\n        searchedForElementBounds: {\n          location: action.location,\n          size: action.size,\n        }\n      };\n\n    case CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS:\n      return {\n        ...state,\n        searchedForElementBounds: null,\n      };\n\n    case PROMPT_KEEP_ALIVE:\n      return {\n        ...state,\n        showKeepAlivePrompt: true,\n      };\n\n    case HIDE_PROMPT_KEEP_ALIVE:\n      return {\n        ...state,\n        showKeepAlivePrompt: false,\n      };\n\n    case SELECT_ACTION_GROUP:\n      return {\n        ...state,\n        selectedActionGroup: action.group\n      };\n\n    case SELECT_SUB_ACTION_GROUP:\n      return {\n        ...state,\n        selectedSubActionGroup: action.group,\n      };\n\n    case SELECT_INTERACTION_MODE:\n      return {\n        ...state,\n        selectedInteractionMode: action.interaction,\n      };\n\n    case ENTERING_ACTION_ARGS:\n      return {\n        ...state,\n        pendingAction: {\n          actionName: action.actionName,\n          action: action.action,\n          args: [],\n        }\n      };\n\n    case SET_ACTION_ARG:\n      return {\n        ...state,\n        pendingAction: {\n          ...state.pendingAction,\n          args: Object.assign([], state.pendingAction.args, {[action.index]: action.value}), // Replace 'value' at 'index'\n        },\n      };\n\n    case REMOVE_ACTION:\n      return {\n        ...state,\n        pendingAction: null,\n      };\n\n    default:\n      return {...state};\n  }\n}\n","import { SET_UPDATE_STATE } from '../actions/Updater';\n\nconst INITIAL_STATE = {};\n\nexport default function session (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_UPDATE_STATE:\n      return {...action.updateState};\n    default:\n      return {...state};\n  }\n}\n","import {\n  SET_ENVIRONMENT_VARIABLE, SET_ENVIRONMENT_VARIABLES\n} from '../actions/Config';\n\n\nconst INITIAL_STATE = {\n  environmentVariables: {},\n  defaultEnvironmentVariables: {},\n};\n\nexport default function inspector (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_ENVIRONMENT_VARIABLE:\n      return {\n        ...state,\n        environmentVariables: {\n          ...state.environmentVariables,\n          [action.name]: action.value,\n        }\n      };\n\n    case SET_ENVIRONMENT_VARIABLES:\n      return {\n        ...state,\n        environmentVariables: action.savedEnvironmentVariables || {},\n        defaultEnvironmentVariables: action.defaultEnvironmentVariables,\n      };\n\n    default:\n      return {...state};\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport startServer from './StartServer';\nimport serverMonitor from './ServerMonitor';\nimport session from './Session';\nimport inspector from './Inspector';\nimport updater from './Updater';\nimport config from './Config';\n\n// create our root reducer\nexport default function createRootReducer (history) {\n  return combineReducers({\n    router: connectRouter(history),\n    startServer,\n    serverMonitor,\n    session,\n    inspector,\n    updater,\n    config,\n  });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport { routerMiddleware, routerActions } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport actions from '../actions';\nimport createRootReducer from '../reducers';\n\nconst history = createHashHistory();\n\nconst rootReducer = createRootReducer(history);\n\nconst configureStore = (initialState) => {\n  // Redux Configuration\n  const middleware = [];\n  const enhancers = [];\n\n  // Thunk Middleware\n  middleware.push(thunk);\n\n  // Logging Middleware\n  const logger = createLogger({\n    level: 'info',\n    collapsed: true\n  });\n\n  // Skip redux logs in console during the tests\n  if (process.env.NODE_ENV !== 'test') {\n    middleware.push(logger);\n  }\n\n  // Router Middleware\n  const router = routerMiddleware(history);\n  middleware.push(router);\n\n  // Redux DevTools Configuration\n  const actionCreators = {\n    ...actions,\n    ...routerActions\n  };\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Options: http://extension.remotedev.io/docs/API/Arguments.html\n      actionCreators\n    })\n    : compose;\n  /* eslint-enable no-underscore-dangle */\n\n  // Apply Middleware & Compose Enhancers\n  enhancers.push(applyMiddleware(...middleware));\n  const enhancer = composeEnhancers(...enhancers);\n\n  // Create Store\n  const store = createStore(rootReducer, initialState, enhancer);\n\n  if (module.hot) {\n    module.hot.accept(\n      '../reducers',\n      // eslint-disable-next-line global-require\n      () => store.replaceReducer(require('../reducers').default)\n    );\n  }\n\n  return store;\n};\n\nexport default { configureStore, history };","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from '../reducers';\n\nconst history = createHashHistory();\nconst rootReducer = createRootReducer(history);\nconst router = routerMiddleware(history);\nconst enhancer = applyMiddleware(thunk, router);\n\nfunction configureStore (initialState) {\n  return createStore(rootReducer, initialState, enhancer);\n}\n\nexport default { configureStore, history };","import configureStoreDev from './configureStore.development';\nimport configureStoreProd from './configureStore.production';\n\nconst selectedConfigureStore =\n  process.env.NODE_ENV === 'production'\n    ? configureStoreProd\n    : configureStoreDev;\n\nexport const { configureStore } = selectedConfigureStore;\n\nexport const { history } = selectedConfigureStore;\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./configureStore.production'); // eslint-disable-line global-require\n} else {\n  module.exports = require('./configureStore.development'); // eslint-disable-line global-require\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Root from './containers/Root';\nimport { AppContainer } from 'react-hot-loader';\nimport Store from './store/configureStore';\n\nconst { history, configureStore } = Store;\n\nconst store = configureStore();\n\nrender(\n  <AppContainer>\n    <Root store={store} history={history} />\n  </AppContainer>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept('./containers/Root', () => {\n    // eslint-disable-next-line global-require\n    const NextRoot = require('./containers/Root').default;\n    render(\n      <AppContainer>\n        <NextRoot store={store} history={history} />\n      </AppContainer>,\n      document.getElementById('root')\n    );\n  });\n}\n"]}